# Generated using stack2nix 0.2.
#
# Only works with sufficiently recent nixpkgs, e.g. "NIX_PATH=nixpkgs=https://github.com/NixOS/nixpkgs/archive/21a8239452adae3a4717772f4e490575586b2755.tar.gz".

{ pkgs ? (import <nixpkgs> {})
, compiler ? pkgs.haskell.packages.ghc7103
}:

with pkgs.haskell.lib;

let
  stackPackages = { pkgs, stdenv, callPackage }:
    self: {
      array = null;
      base = null;
      bytestring = null;
      containers = null;
      deepseq = null;
      filepath = null;
      ghc-boot = null;
      ghc-boot-th = null;
      ghc-prim = null;
      ghci = null;
      hoopl = null;
      integer-gmp = null;
      pretty = null;
      rts = null;
      template-haskell = null;
      time = null;
      transformers = null;
      unix = null;
      "AC-Vector" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "AC-Vector";
           version = "2.3.2";
           sha256 = "5e51ff6779a3803ce1009c9dffd13a3022fb3cbddeb49e685d7f43d7a8715011";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Efficient geometric vectors and transformations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Agda" = callPackage
        ({ mkDerivation, alex, array, base, binary, boxes, bytestring
         , containers, cpphs, data-hash, deepseq, directory, EdisonAPI
         , EdisonCore, edit-distance, emacs, equivalence, filemanip
         , filepath, geniplate-mirror, happy, hashable, hashtables
         , haskeline, haskell-src-exts, monadplus, mtl, parallel, pretty
         , process, QuickCheck, stdenv, strict, template-haskell, text, time
         , transformers, transformers-compat, unordered-containers, xhtml
         , zlib
         }:
         mkDerivation {
           pname = "Agda";
           version = "2.5.1";
           sha256 = "ee4658eafb514460d598322fa98528d1af6e25e5aa51843bb473c0d8a325c0c8";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base binary boxes bytestring containers data-hash deepseq
             directory EdisonAPI EdisonCore edit-distance equivalence filepath
             geniplate-mirror hashable hashtables haskeline haskell-src-exts
             monadplus mtl parallel pretty process QuickCheck strict
             template-haskell text time transformers transformers-compat
             unordered-containers xhtml zlib
           ];
           libraryToolDepends = [ alex cpphs happy ];
           executableHaskellDepends = [
             base binary containers directory filemanip filepath
             haskell-src-exts mtl process
           ];
           executableToolDepends = [ emacs ];
           doHaddock = false;
           doCheck = false;
           postInstall = ''
             files=("$data/share/ghc-"*"/"*"-ghc-"*"/Agda-"*"/lib/prim/Agda/"{Primitive.agda,Builtin"/"*.agda})
             for f in "''${files[@]}" ; do
               $out/bin/agda $f
             done
             for f in "''${files[@]}" ; do
               $out/bin/agda -c --no-main $f
             done
             $out/bin/agda-mode compile
           '';
           homepage = "http://wiki.portal.chalmers.se/agda/";
           description = "A dependently typed functional programming language and proof assistant";
           license = "unknown";
         }) {};
      "BlastHTTP" = callPackage
        ({ mkDerivation, base, biocore, biofasta, blastxml, bytestring
         , conduit, HTTP, http-conduit, hxt, mtl, network, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "BlastHTTP";
           version = "1.2.1";
           sha256 = "cee85e0fba0530aff57209b3d91a800db52b63c3f7e4a431a04e7a9cbd355bd5";
           libraryHaskellDepends = [
             base biocore biofasta blastxml bytestring conduit HTTP http-conduit
             hxt mtl network transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/eggzilla/BlastHTTP";
           description = "Libary to interface with the NCBI blast REST interface";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "BlogLiterately" = callPackage
        ({ mkDerivation, base, blaze-html, bool-extras, bytestring, cmdargs
         , containers, data-default, directory, filepath, HaXml, haxr
         , highlighting-kate, hscolour, HTTP, lens, mtl, pandoc
         , pandoc-citeproc, pandoc-types, parsec, process, split, stdenv
         , strict, tagsoup, temporary, transformers
         }:
         mkDerivation {
           pname = "BlogLiterately";
           version = "0.8.4.2";
           sha256 = "f1d7a0e67ee04bc5c76596800369a9dc8d187b8b9d34081859d2d245fbd2b2f1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-html bool-extras bytestring cmdargs containers
             data-default directory filepath HaXml haxr highlighting-kate
             hscolour HTTP lens mtl pandoc pandoc-citeproc pandoc-types parsec
             process split strict tagsoup temporary transformers
           ];
           executableHaskellDepends = [ base cmdargs ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://byorgey.wordpress.com/blogliterately/";
           description = "A tool for posting Haskelly articles to blogs";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "BlogLiterately-diagrams" = callPackage
        ({ mkDerivation, base, BlogLiterately, containers, diagrams-builder
         , diagrams-lib, diagrams-rasterific, directory, filepath
         , JuicyPixels, pandoc, safe, stdenv
         }:
         mkDerivation {
           pname = "BlogLiterately-diagrams";
           version = "0.2.0.5";
           sha256 = "9aa44dcff5bdddc3e3331a359ce517ec5f04258ebf2ab8c52c0971c38cd01948";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base BlogLiterately containers diagrams-builder diagrams-lib
             diagrams-rasterific directory filepath JuicyPixels pandoc safe
           ];
           executableHaskellDepends = [ base BlogLiterately ];
           doHaddock = false;
           doCheck = false;
           description = "Include images in blog posts with inline diagrams code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Boolean" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "Boolean";
           version = "0.2.3";
           sha256 = "f64d64ddd1300beab481af21b7f451f6f1d189709a994c2b4e573e78bc0155d3";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Generalized booleans and numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "BoundedChan" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "BoundedChan";
           version = "1.0.3.0";
           sha256 = "531ceaed7f62844c2a63a7cbfdcab332ea5eaa218e9922ca3305580438adc46d";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of bounded channels";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Cabal" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , deepseq, directory, filepath, pretty, process, stdenv, time, unix
         }:
         mkDerivation {
           pname = "Cabal";
           version = "1.22.8.0";
           sha256 = "2a42a2ddecb6450f87ed3a2b37af81dcc573dfde8f0db16f695c78674a80a34e";
           libraryHaskellDepends = [
             array base binary bytestring containers deepseq directory filepath
             pretty process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/cabal/";
           description = "A framework for packaging Haskell software";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Cabal-ide-backend" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , deepseq, directory, filepath, pretty, process, stdenv, time, unix
         }:
         mkDerivation {
           pname = "Cabal-ide-backend";
           version = "1.23.0.0";
           sha256 = "fc314197d35dbf6011b57050f7ced5a854b9de58367b25b3455f9326f07c491f";
           libraryHaskellDepends = [
             array base binary bytestring containers deepseq directory filepath
             pretty process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/cabal/";
           description = "A framework for packaging Haskell software";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ChannelT" = callPackage
        ({ mkDerivation, base, free, mmorph, mtl, stdenv, transformers-base
         }:
         mkDerivation {
           pname = "ChannelT";
           version = "0.0.0.2";
           sha256 = "1ca364133211d323a743424a45677e2f61051f704e80223247b8fdc86f8aa7a0";
           libraryHaskellDepends = [ base free mmorph mtl transformers-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pthariensflame/ChannelT";
           description = "Generalized stream processors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Chart" = callPackage
        ({ mkDerivation, array, base, colour, data-default-class, lens, mtl
         , old-locale, operational, stdenv, time, vector
         }:
         mkDerivation {
           pname = "Chart";
           version = "1.6";
           sha256 = "0f73779ab322346cac7c131f58dbda9bcaf1f43693a9e102510be80a07569ea5";
           libraryHaskellDepends = [
             array base colour data-default-class lens mtl old-locale
             operational time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/timbod7/haskell-chart/wiki";
           description = "A library for generating 2D Charts and Plots";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Chart-cairo" = callPackage
        ({ mkDerivation, array, base, cairo, Chart, colour
         , data-default-class, lens, mtl, old-locale, operational, stdenv
         , time
         }:
         mkDerivation {
           pname = "Chart-cairo";
           version = "1.6";
           sha256 = "e209b6b4d7d7f392593cbd3e8a8cde1d5af83066fee994195e4b25bda680ca0f";
           libraryHaskellDepends = [
             array base cairo Chart colour data-default-class lens mtl
             old-locale operational time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/timbod7/haskell-chart/wiki";
           description = "Cairo backend for Charts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Chart-diagrams" = callPackage
        ({ mkDerivation, base, blaze-markup, bytestring, Chart, colour
         , containers, data-default-class, diagrams-core, diagrams-lib
         , diagrams-postscript, diagrams-svg, lens, lucid-svg, mtl
         , old-locale, operational, stdenv, SVGFonts, text, time
         }:
         mkDerivation {
           pname = "Chart-diagrams";
           version = "1.6";
           sha256 = "c4c5a60bc623bb3221da113c84c0400b4dd75c481e64f5a9b6788b923ff998eb";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base blaze-markup bytestring Chart colour containers
             data-default-class diagrams-core diagrams-lib diagrams-postscript
             diagrams-svg lens lucid-svg mtl old-locale operational SVGFonts
             text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/timbod7/haskell-chart/wiki";
           description = "Diagrams backend for Charts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ChasingBottoms" = callPackage
        ({ mkDerivation, base, containers, mtl, QuickCheck, random, stdenv
         , syb
         }:
         mkDerivation {
           pname = "ChasingBottoms";
           version = "1.3.1.2";
           sha256 = "796e278b60c4a24eb6772155ea0edff9e20f96d396cfcd6c5a55d10a3bd2b8d6";
           libraryHaskellDepends = [
             base containers mtl QuickCheck random syb
           ];
           doHaddock = false;
           doCheck = false;
           description = "For testing partial and infinite values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ClustalParser" = callPackage
        ({ mkDerivation, base, cmdargs, either-unwrap, parsec, stdenv
         , vector
         }:
         mkDerivation {
           pname = "ClustalParser";
           version = "1.1.4";
           sha256 = "d32db29dd58b9fe305b76dbdde6d0b2b328a526b63872e02177600f6832cc48f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base parsec vector ];
           executableHaskellDepends = [ base cmdargs either-unwrap ];
           doHaddock = false;
           doCheck = false;
           description = "Libary for parsing Clustal tools output";
           license = "GPL";
         }) {};
      "ConfigFile" = callPackage
        ({ mkDerivation, base, containers, MissingH, mtl, parsec, stdenv }:
         mkDerivation {
           pname = "ConfigFile";
           version = "1.1.4";
           sha256 = "ae087b359ff2945a62b671449227e0a811d143ee651179f4e7e9c66548e0f514";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers MissingH mtl parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://software.complete.org/configfile";
           description = "Configuration file reading & writing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "DAV" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , data-default, exceptions, http-client, http-client-tls
         , http-types, lens, mtl, mtl-compat, network, network-uri
         , optparse-applicative, stdenv, transformers, transformers-base
         , transformers-compat, utf8-string, xml-conduit, xml-hamlet
         }:
         mkDerivation {
           pname = "DAV";
           version = "1.2";
           sha256 = "1a07c8ef17cd4207c6f889e7eb5c45d9f025374f2cdacc1e34e6d71fe103b746";
           revision = "1";
           editedCabalFile = "1fv6q8dayvqg1qjc1dlvy4lzg22lrynaj6bsg75s5dk9nfal023c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring case-insensitive containers data-default exceptions
             http-client http-client-tls http-types lens mtl mtl-compat
             transformers transformers-base transformers-compat utf8-string
             xml-conduit xml-hamlet
           ];
           executableHaskellDepends = [
             base bytestring case-insensitive containers data-default exceptions
             http-client http-client-tls http-types lens mtl mtl-compat network
             network-uri optparse-applicative transformers transformers-base
             transformers-compat utf8-string xml-conduit xml-hamlet
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/hDAV";
           description = "RFC 4918 WebDAV support";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "DRBG" = callPackage
        ({ mkDerivation, base, bytestring, cereal, cipher-aes128
         , crypto-api, cryptohash-cryptoapi, entropy, mtl, parallel
         , prettyclass, stdenv, tagged
         }:
         mkDerivation {
           pname = "DRBG";
           version = "0.5.5";
           sha256 = "21df3202486cc83c7cc3f867cb139eac9a3f69bd91b5f6b016ae026e03c33bfd";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal cipher-aes128 crypto-api
             cryptohash-cryptoapi entropy mtl parallel prettyclass tagged
           ];
           doHaddock = false;
           doCheck = false;
           description = "Deterministic random bit generator (aka RNG, PRNG) based HMACs, Hashes, and Ciphers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Decimal" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "Decimal";
           version = "0.4.2";
           sha256 = "c5f53652949eedd48dbafc1bb3e08c05348d5e25c248e8e1543bc380a9f84261";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/PaulJohnson/Haskell-Decimal";
           description = "Decimal numbers with variable precision";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Diff" = callPackage
        ({ mkDerivation, array, base, pretty, stdenv }:
         mkDerivation {
           pname = "Diff";
           version = "0.3.4";
           sha256 = "77b7daec5a79ade779706748f11b4d9b8f805e57a68e7406c3b5a1dee16e0c2f";
           libraryHaskellDepends = [ array base pretty ];
           doHaddock = false;
           doCheck = false;
           description = "O(ND) diff algorithm in haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Earley" = callPackage
        ({ mkDerivation, base, ListLike, stdenv }:
         mkDerivation {
           pname = "Earley";
           version = "0.11.0.1";
           sha256 = "c207a40926bb0b9de05641a0fc03c22849a2c7e0bc007d2ffef37f33793985b3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ListLike ];
           doHaddock = false;
           doCheck = false;
           description = "Parsing all context-free grammars using Earley's algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Ebnf2ps" = callPackage
        ({ mkDerivation, array, base, containers, directory, happy
         , old-time, stdenv, unix
         }:
         mkDerivation {
           pname = "Ebnf2ps";
           version = "1.0.15";
           sha256 = "0ecce7d721d6c8993fa6ba6cfb16f1101d85e00bbaf0b6941d36a00badea2b4b";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array base containers directory old-time unix
           ];
           executableToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/FranklinChen/Ebnf2ps";
           description = "Peter's Syntax Diagram Drawing Tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "EdisonAPI" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "EdisonAPI";
           version = "1.3";
           sha256 = "a369d5c9b412bafb16a023121a72470a6fed0116b3d6d143a03dd54cb854154f";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://rwd.rdockins.name/edison/home/";
           description = "A library of efficent, purely-functional data structures (API)";
           license = "unknown";
         }) {};
      "EdisonCore" = callPackage
        ({ mkDerivation, array, base, containers, EdisonAPI, mtl
         , QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "EdisonCore";
           version = "1.3.1.1";
           sha256 = "3e0720ee3b179304f563b99dd446c1d6911e31ddc4d0f78d6550b18e59ed501b";
           libraryHaskellDepends = [
             array base containers EdisonAPI mtl QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://rwd.rdockins.name/edison/home/";
           description = "A library of efficent, purely-functional data structures (Core Implementations)";
           license = "unknown";
         }) {};
      "EntrezHTTP" = callPackage
        ({ mkDerivation, base, biocore, bytestring, conduit, HTTP
         , http-conduit, hxt, mtl, network, stdenv, Taxonomy, text
         , transformers
         }:
         mkDerivation {
           pname = "EntrezHTTP";
           version = "1.0.3";
           sha256 = "395c438c8b5b68fc0826e1946483d252a8936d5a91a25bf928eef113b4f9a89b";
           libraryHaskellDepends = [
             base biocore bytestring conduit HTTP http-conduit hxt mtl network
             Taxonomy text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/eggzilla/EntrezHTTP";
           description = "Libary to interface with the NCBI Entrez REST service";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "FenwickTree" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, template-haskell }:
         mkDerivation {
           pname = "FenwickTree";
           version = "0.1.2.1";
           sha256 = "9c172d62b24365e663a0355e8eaa34362a1a769c18a64391939a9b50e384f03c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base QuickCheck template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mgajda/FenwickTree";
           description = "Data structure for fast query and update of cumulative sums";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "FindBin" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "FindBin";
           version = "0.0.5";
           sha256 = "279c7967e0803ca3b9a0a1956ce7ba9b9a2294eb9f971bea8a557b5f80ddfda4";
           libraryHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/audreyt/findbin";
           description = "Locate directory of original program";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "FontyFruity" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq
         , directory, filepath, stdenv, text, vector, xml
         }:
         mkDerivation {
           pname = "FontyFruity";
           version = "0.5.3.2";
           sha256 = "87196e6f40bd60eafa415ac503a62d8dd7c318126bbb7cd1731821312e2ac515";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq directory filepath text
             vector xml
           ];
           doHaddock = false;
           doCheck = false;
           description = "A true type file format loader";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Frames" = callPackage
        ({ mkDerivation, base, ghc-prim, pipes, primitive, readable, stdenv
         , template-haskell, text, transformers, vector, vinyl
         }:
         mkDerivation {
           pname = "Frames";
           version = "0.1.8";
           sha256 = "5b695c025c1e153d40b5ac8a526ca4986b1b4ae9350354e6373593b15d9c3e57";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base ghc-prim pipes primitive readable template-haskell text
             transformers vector vinyl
           ];
           doHaddock = false;
           doCheck = false;
           description = "Data frames For working with tabular data files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "GLFW-b" = callPackage
        ({ mkDerivation, base, bindings-GLFW, stdenv }:
         mkDerivation {
           pname = "GLFW-b";
           version = "1.4.8.1";
           sha256 = "438a49ec5cf6cbda95966fcc42750b9245f54fe7daf69a6493e7703c3f178ae9";
           libraryHaskellDepends = [ base bindings-GLFW ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to GLFW OpenGL library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "GLURaw" = callPackage
        ({ mkDerivation, base, libGL, libGLU, OpenGLRaw, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "GLURaw";
           version = "2.0.0.2";
           sha256 = "884b3dbefbaabdc66cf8e240d33adb0d491bcf9119e53a7d42b8cf0972df15de";
           libraryHaskellDepends = [ base OpenGLRaw transformers ];
           librarySystemDepends = [ libGL libGLU ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Opengl";
           description = "A raw binding for the OpenGL graphics system";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libGL; inherit (pkgs) libGLU;};
      "GLUT" = callPackage
        ({ mkDerivation, array, base, containers, OpenGL, StateVar, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "GLUT";
           version = "2.7.0.10";
           sha256 = "4b11cbf9b7876c0ec14bf0673006bd23e7ffc7d396568987b326a1b706497569";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base containers OpenGL StateVar transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Opengl";
           description = "A binding for the OpenGL Utility Toolkit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "GPipe" = callPackage
        ({ mkDerivation, base, Boolean, containers, exception-transformers
         , gl, hashtables, linear, stdenv, transformers
         }:
         mkDerivation {
           pname = "GPipe";
           version = "2.1.7";
           sha256 = "ebb54d9994bcb9c14064af5468c3c0f34f02db07d6033f562dd09b4718538814";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base Boolean containers exception-transformers gl hashtables linear
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://tobbebex.blogspot.se/";
           description = "Typesafe functional GPU graphics programming";
           license = stdenv.lib.licenses.mit;
         }) {};
      "GPipe-GLFW" = callPackage
        ({ mkDerivation, base, exception-transformers, GLFW-b, GPipe
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "GPipe-GLFW";
           version = "1.2.3";
           sha256 = "a6854b9e0a2790db5205d22035cfa6e68c8e2341918a875e851f22264a9b5c40";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base GLFW-b GPipe transformers ];
           executableHaskellDepends = [
             base exception-transformers GPipe transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/plredmond/GPipe-GLFW";
           description = "GLFW OpenGL context creation for GPipe";
           license = stdenv.lib.licenses.mit;
         }) {};
      "Genbank" = callPackage
        ({ mkDerivation, base, biocore, biofasta, bytestring, cmdargs
         , parsec, split, stdenv
         }:
         mkDerivation {
           pname = "Genbank";
           version = "1.0.3";
           sha256 = "2baf631ac851b1c29ba531ae1c16b8ba3c4b672bac9d4840a3b9afc0a89d2b93";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base biocore biofasta bytestring parsec split
           ];
           executableHaskellDepends = [ base cmdargs ];
           doHaddock = false;
           doCheck = false;
           description = "Libary for processing the NCBI genbank format";
           license = "GPL";
         }) {};
      "GenericPretty" = callPackage
        ({ mkDerivation, base, ghc-prim, pretty, stdenv }:
         mkDerivation {
           pname = "GenericPretty";
           version = "1.2.1";
           sha256 = "175e334292904d365c630c9dfcc5a94f0c052a88a10d34513f39ebc36205672d";
           libraryHaskellDepends = [ base ghc-prim pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RazvanRanca/GenericPretty";
           description = "A generic, derivable, haskell pretty printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Glob" = callPackage
        ({ mkDerivation, base, containers, directory, dlist, filepath
         , semigroups, stdenv, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "Glob";
           version = "0.7.13";
           sha256 = "fe99d9434a2dbbac5385cb6690cbb6e2f2eb25df6ab5ce99c8121fc3fdddbd4c";
           libraryHaskellDepends = [
             base containers directory dlist filepath semigroups transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://iki.fi/matti.niemenmaa/glob/";
           description = "Globbing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "GraphSCC" = callPackage
        ({ mkDerivation, array, base, containers, stdenv }:
         mkDerivation {
           pname = "GraphSCC";
           version = "1.0.4";
           sha256 = "789d93e6188845f009779b1c800b043f524587a21d324be8594d09b0f8e86cf1";
           libraryHaskellDepends = [ array base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Tarjan's algorithm for computing the strongly connected components of a graph";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "H" = callPackage
        ({ mkDerivation, base, bytestring, cmdargs, file-embed, inline-r
         , pretty, process, stdenv, temporary, vector
         }:
         mkDerivation {
           pname = "H";
           version = "0.8.0.0";
           sha256 = "b679dc140f783afa598da1bc2d111d603ad94b5f04d7db912452194635d47484";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring cmdargs file-embed inline-r pretty process
             temporary vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "The Haskell/R mixed programming environment";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HCodecs" = callPackage
        ({ mkDerivation, array, base, bytestring, QuickCheck, random
         , stdenv
         }:
         mkDerivation {
           pname = "HCodecs";
           version = "0.5";
           sha256 = "b1bf109a5e0877b47eb2f942ad0d1aa2368b9c006882ba07fe345dd0a90a1756";
           libraryHaskellDepends = [
             array base bytestring QuickCheck random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
           description = "A library to read, write and manipulate MIDI, WAVE, and SoundFont2 files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HDBC" = callPackage
        ({ mkDerivation, base, bytestring, containers, convertible, mtl
         , old-time, stdenv, text, time, utf8-string
         }:
         mkDerivation {
           pname = "HDBC";
           version = "2.4.0.1";
           sha256 = "7a3ee21c41e716111c4a3742a66eb448683719a9384afbf7021c5942ac73d2ad";
           revision = "1";
           editedCabalFile = "1zg7l48g45wc86kqyspzg92q3vnzb6c52rn8qkrhw85wk57yy76s";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers convertible mtl old-time text time
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdbc/hdbc";
           description = "Haskell Database Connectivity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HDBC-postgresql" = callPackage
        ({ mkDerivation, base, bytestring, convertible, HDBC, mtl, old-time
         , parsec, postgresql, stdenv, time, utf8-string
         }:
         mkDerivation {
           pname = "HDBC-postgresql";
           version = "2.3.2.4";
           sha256 = "71988482df2efc773e8272a041f46c61bb4357aa3856edbc69d3fb9d09c168fd";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring convertible HDBC mtl old-time parsec time
             utf8-string
           ];
           librarySystemDepends = [ postgresql ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/hdbc/hdbc-postgresql";
           description = "PostgreSQL driver for HDBC";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) postgresql;};
      "HDBC-session" = callPackage
        ({ mkDerivation, base, HDBC, stdenv }:
         mkDerivation {
           pname = "HDBC-session";
           version = "0.1.1.0";
           sha256 = "4ad37a6c9d17b8f2f049ec4f3c4ea5efc8d866b02b226c6c066ab11153fc80b9";
           libraryHaskellDepends = [ base HDBC ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Bracketed connection for HDBC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HDBC-sqlite3" = callPackage
        ({ mkDerivation, base, bytestring, HDBC, mtl, sqlite, stdenv
         , utf8-string
         }:
         mkDerivation {
           pname = "HDBC-sqlite3";
           version = "2.3.3.1";
           sha256 = "a783d9ab707ebfc68e3e46bd1bbb5d3d5493f50a7ccf31223d9848cff986ebea";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring HDBC mtl utf8-string ];
           librarySystemDepends = [ sqlite ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdbc/hdbc-sqlite3";
           description = "Sqlite v3 driver for HDBC";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) sqlite;};
      "HList" = callPackage
        ({ mkDerivation, array, base, base-orphans, ghc-prim, mtl
         , profunctors, stdenv, tagged, template-haskell
         }:
         mkDerivation {
           pname = "HList";
           version = "0.4.2.0";
           sha256 = "cd99545a1dc4df7ceca09a93e4c4d391654a337882a25791f1c48e21317d7795";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base base-orphans ghc-prim mtl profunctors tagged
             template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Heterogeneous lists";
           license = stdenv.lib.licenses.mit;
         }) {};
      "HPDF" = callPackage
        ({ mkDerivation, array, base, base64-bytestring, binary, bytestring
         , containers, errors, mtl, random, stdenv, vector, zlib
         }:
         mkDerivation {
           pname = "HPDF";
           version = "1.4.10";
           sha256 = "de2bfddd93eeef2129a2378e8dce486d086bec3c48ee2a1bf1a5fb01581607d4";
           libraryHaskellDepends = [
             array base base64-bytestring binary bytestring containers errors
             mtl random vector zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.alpheccar.org";
           description = "Generation of PDF documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HSet" = callPackage
        ({ mkDerivation, base, containers, hashable, hashtables, stdenv }:
         mkDerivation {
           pname = "HSet";
           version = "0.0.0";
           sha256 = "8b336a5f5c68d23683b7f69a5fcc02c7a9f869b7570799cf81cd26c37ea70426";
           libraryHaskellDepends = [ base containers hashable hashtables ];
           doHaddock = false;
           doCheck = false;
           description = "Faux heterogeneous sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HStringTemplate" = callPackage
        ({ mkDerivation, array, base, blaze-builder, bytestring, containers
         , deepseq, directory, filepath, mtl, old-locale, parsec, pretty
         , stdenv, syb, template-haskell, text, time, void
         }:
         mkDerivation {
           pname = "HStringTemplate";
           version = "0.8.5";
           sha256 = "e02b3043f1a5f72db3a1a1075e7b641f266329b954ea7f2f6bd20266295b35ff";
           revision = "1";
           editedCabalFile = "0qwz8lby7096vpmi73wryanky27aimwxpmfwpbarjm2lzbiq868i";
           libraryHaskellDepends = [
             array base blaze-builder bytestring containers deepseq directory
             filepath mtl old-locale parsec pretty syb template-haskell text
             time void
           ];
           doHaddock = false;
           doCheck = false;
           description = "StringTemplate implementation in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HTF" = callPackage
        ({ mkDerivation, aeson, array, base, base64-bytestring, bytestring
         , containers, cpphs, Diff, directory, haskell-src, HUnit
         , lifted-base, monad-control, mtl, old-time, pretty, process
         , QuickCheck, random, regex-compat, stdenv, text, time, unix
         , vector, xmlgen
         }:
         mkDerivation {
           pname = "HTF";
           version = "0.13.1.0";
           sha256 = "1cb469ee21766fb7ad56fb42469709fac06214f7a33c39880134dfc2ea0de847";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson array base base64-bytestring bytestring containers cpphs Diff
             directory haskell-src HUnit lifted-base monad-control mtl old-time
             pretty process QuickCheck random regex-compat text time unix vector
             xmlgen
           ];
           executableHaskellDepends = [
             array base cpphs directory HUnit mtl old-time random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/skogsbaer/HTF/";
           description = "The Haskell Test Framework";
           license = "LGPL";
         }) {};
      "HTTP" = callPackage
        ({ mkDerivation, array, base, bytestring, mtl, network, network-uri
         , parsec, stdenv, time
         }:
         mkDerivation {
           pname = "HTTP";
           version = "4000.3.3";
           sha256 = "bbada3c2088dc1384234cdbc1bb6089ea588da068a6a38878ea259dd19de9bf2";
           libraryHaskellDepends = [
             array base bytestring mtl network network-uri parsec time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/HTTP";
           description = "A library for client-side HTTP";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HUnit" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "HUnit";
           version = "1.3.1.2";
           sha256 = "badebf99ae5a4982cdf2f8932f080e349240dc2b75c40e75ce2518ea086c5381";
           revision = "1";
           editedCabalFile = "0axm2qh1qpnwb77115n8qh02c81yqfrq4ghx7f6wlmzva8jn1k7d";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/HUnit#readme";
           description = "A unit testing framework for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HaRe" = callPackage
        ({ mkDerivation, array, base, Cabal, cabal-helper, containers
         , directory, filepath, ghc, ghc-exactprint, ghc-mod, ghc-paths
         , ghc-prim, ghc-syb-utils, hslogger, monad-control, monoid-extras
         , mtl, old-time, parsec, pretty, rosezipper, semigroups, stdenv
         , Strafunski-StrategyLib, syb, syz, time, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "HaRe";
           version = "0.8.2.3";
           sha256 = "8ccd728cd666929cc59ac1ad9fc16a5a462454a6c04c7c5019767f0b490a0e04";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base Cabal cabal-helper containers directory filepath ghc
             ghc-exactprint ghc-mod ghc-paths ghc-prim ghc-syb-utils hslogger
             monad-control monoid-extras mtl old-time pretty rosezipper
             semigroups Strafunski-StrategyLib syb syz time transformers
             transformers-base
           ];
           executableHaskellDepends = [
             array base Cabal cabal-helper containers directory filepath ghc
             ghc-exactprint ghc-mod ghc-paths ghc-prim ghc-syb-utils hslogger
             monad-control monoid-extras mtl old-time parsec pretty rosezipper
             semigroups Strafunski-StrategyLib syb syz time transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RefactoringTools/HaRe/wiki";
           description = "the Haskell Refactorer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HaTeX" = callPackage
        ({ mkDerivation, base, bytestring, containers, matrix, parsec
         , QuickCheck, stdenv, text, transformers, wl-pprint-extras
         }:
         mkDerivation {
           pname = "HaTeX";
           version = "3.17.0.2";
           sha256 = "3f5aced48ee59425e3ccaa2b6c4490f43b395fe9331b3be4a277261ac45e80fe";
           libraryHaskellDepends = [
             base bytestring containers matrix parsec QuickCheck text
             transformers wl-pprint-extras
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/HaTeX/blob/master/README.md";
           description = "The Haskell LaTeX library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HaXml" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , polyparse, pretty, random, stdenv
         }:
         mkDerivation {
           pname = "HaXml";
           version = "1.25.3";
           sha256 = "6448a7ee1c26159c6c10db93757ed9248f647b1c0c431e7aead6aadd6d2307c7";
           revision = "1";
           editedCabalFile = "0b9pppnsvid2zxcldzlqlfqjnfv5fxwxdb3d8mwyvlsi0x1al53a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers filepath polyparse pretty random
           ];
           executableHaskellDepends = [ base directory polyparse pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/HaXml/";
           description = "Utilities for manipulating XML documents";
           license = "LGPL";
         }) {};
      "HandsomeSoup" = callPackage
        ({ mkDerivation, base, containers, HTTP, hxt, hxt-http, mtl
         , network, network-uri, parsec, stdenv, transformers
         }:
         mkDerivation {
           pname = "HandsomeSoup";
           version = "0.4.2";
           sha256 = "0ae2dad3fbde1efee9e45b84b2aeb5b526cc7b3ea2cbc5715494f7bde3ceeefb";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers HTTP hxt hxt-http mtl network network-uri parsec
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/egonSchiele/HandsomeSoup";
           description = "Work with HTML more easily in HXT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HaskellNet" = callPackage
        ({ mkDerivation, array, base, base64-string, bytestring, cryptohash
         , mime-mail, mtl, network, old-time, pretty, stdenv, text
         }:
         mkDerivation {
           pname = "HaskellNet";
           version = "0.5.1";
           sha256 = "3245d31ad76f9f9013a2f6e2285d73ed37376eeb073c100b9a6d19e87f0ca838";
           libraryHaskellDepends = [
             array base base64-string bytestring cryptohash mime-mail mtl
             network old-time pretty text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtdaugherty/HaskellNet";
           description = "Client support for POP3, SMTP, and IMAP";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HaskellNet-SSL" = callPackage
        ({ mkDerivation, base, bytestring, connection, data-default
         , HaskellNet, network, stdenv, tls
         }:
         mkDerivation {
           pname = "HaskellNet-SSL";
           version = "0.3.3.0";
           sha256 = "177d462b939dcb1ebab9cabf5ab5d49d969c80a8de1732bc6e1613780b8fd5f4";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring connection data-default HaskellNet network tls
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dpwright/HaskellNet-SSL";
           description = "Helpers to connect to SSL/TLS mail servers with HaskellNet";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Hclip" = callPackage
        ({ mkDerivation, base, mtl, process, stdenv, strict }:
         mkDerivation {
           pname = "Hclip";
           version = "3.0.0.4";
           sha256 = "d8c80bd2d035571cd76ce4f69453e9fcef4096dbc8868eb4cfcd7eb74fe5f712";
           libraryHaskellDepends = [ base mtl process strict ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jetho/Hclip";
           description = "A small cross-platform library for reading and modifying the system clipboard";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HsOpenSSL" = callPackage
        ({ mkDerivation, base, bytestring, integer-gmp, network, openssl
         , stdenv, time
         }:
         mkDerivation {
           pname = "HsOpenSSL";
           version = "0.11.3.2";
           sha256 = "4b5ba629b64a0288faa35eccde5ce0ebb8b3127d17e064eb6f100c5fbbebce3f";
           libraryHaskellDepends = [
             base bytestring integer-gmp network time
           ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vshabanov/HsOpenSSL";
           description = "Partial OpenSSL binding for Haskell";
           license = stdenv.lib.licenses.publicDomain;
         }) {inherit (pkgs) openssl;};
      "HsSyck" = callPackage
        ({ mkDerivation, base, bytestring, hashtables, stdenv, syb
         , utf8-string
         }:
         mkDerivation {
           pname = "HsSyck";
           version = "0.53";
           sha256 = "8efbb26aba294f495fa3615b496fe569fbc6189799899af8fdd546392d97249f";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring hashtables syb utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Fast, lightweight YAML loader and dumper";
           license = stdenv.lib.licenses.mit;
         }) {};
      "IPv6Addr" = callPackage
        ({ mkDerivation, attoparsec, base, iproute, network, network-info
         , random, stdenv, text
         }:
         mkDerivation {
           pname = "IPv6Addr";
           version = "0.6.2.0";
           sha256 = "c0123cbacaba0266ea6eed1cf0ceb0cf323600e9eaa0ca855090edae0b085926";
           revision = "1";
           editedCabalFile = "13l0sv665z6np3w5yd75kl8m6knj9qc1yb605s4cm2h45bismabx";
           libraryHaskellDepends = [
             attoparsec base iproute network network-info random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/IPv6Addr";
           description = "Library to deal with IPv6 address text representations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "IfElse" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "IfElse";
           version = "0.85";
           sha256 = "8ad3bfc3e2c867e6330d9bff874b3105476c35b2e1638fd448f233e9f80addcd";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           description = "Anaphoric and miscellaneous useful control-flow";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "IntervalMap" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "IntervalMap";
           version = "0.5.2.0";
           sha256 = "031a491ae40c333a3227d147aae9ace42f2f4b535fcbbb991c6b4f35a1531684";
           libraryHaskellDepends = [ base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.chr-breitkopf.de/comp/IntervalMap";
           description = "Containers for intervals, with efficient search";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "JuicyPixels" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq, mtl
         , primitive, stdenv, transformers, vector, zlib
         }:
         mkDerivation {
           pname = "JuicyPixels";
           version = "3.2.8";
           sha256 = "038c6547d543442a93b2028be4b84c225bb7a6fa913e1fc57325c58d043d5644";
           revision = "1";
           editedCabalFile = "0gif39hhnn7qccqvqca56hl3rc4s2i4sf5g7kkhpz6lapcgq84aj";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq mtl primitive
             transformers vector zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Twinside/Juicy.Pixels";
           description = "Picture loading/serialization (in png, jpeg, bitmap, gif, tga, tiff and radiance)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "JuicyPixels-repa" = callPackage
        ({ mkDerivation, base, bytestring, JuicyPixels, repa, stdenv
         , vector
         }:
         mkDerivation {
           pname = "JuicyPixels-repa";
           version = "0.7.1.0";
           sha256 = "b8f11203dd397885fadfd66a03f3720f164fc17f964f3dba6a494afc8411267e";
           libraryHaskellDepends = [
             base bytestring JuicyPixels repa vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Convenience functions to obtain array representations of images";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "JuicyPixels-scale-dct" = callPackage
        ({ mkDerivation, base, base-compat, carray, fft, JuicyPixels
         , stdenv
         }:
         mkDerivation {
           pname = "JuicyPixels-scale-dct";
           version = "0.1.1.2";
           sha256 = "9abd9d00520424912201b58343f252362b9f34760023d3324732ca00a906fe96";
           revision = "3";
           editedCabalFile = "0z1ks049q9jsc5ysh12idkqf3rz0bnvv74rhlaw24r5q2xj8lv8i";
           libraryHaskellDepends = [
             base base-compat carray fft JuicyPixels
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/JuicyPixels-scale-dct#readme";
           description = "Scale JuicyPixels images with DCT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "JuicyPixels-util" = callPackage
        ({ mkDerivation, base, JuicyPixels, stdenv, vector }:
         mkDerivation {
           pname = "JuicyPixels-util";
           version = "0.2";
           sha256 = "2c7b3fb6f3da6d77870bbc356db59afb05f1ab00392b060a8503b5895ee959ac";
           libraryHaskellDepends = [ base JuicyPixels vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/JuicyPixels-util";
           description = "Convert JuicyPixel images into RGBA format, flip, trim and so on";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "List" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "List";
           version = "0.5.2";
           sha256 = "27ddf9a9b348c3a2fc72ba8bed78ecacd32f26cc7ae1b8de8a066bd14ec8eaac";
           revision = "1";
           editedCabalFile = "13k1cqqjxbmnv4zcpb1dp7ywpngb94iqs9zmf74kw4s4cdvzpwhd";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yairchu/generator/tree";
           description = "List monad transformer and class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ListLike" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, dlist, fmlist
         , stdenv, text, vector
         }:
         mkDerivation {
           pname = "ListLike";
           version = "4.2.1";
           sha256 = "d6542ae5bef685e3571cd46b018c5adac2b6c854f72777ddd35a6823bcf08859";
           libraryHaskellDepends = [
             array base bytestring containers dlist fmlist text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://software.complete.org/listlike";
           description = "Generic support for list-like structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MASMGen" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "MASMGen";
           version = "0.5.0.0";
           sha256 = "ec88b0727eb25a3f9a7d5d71dbc3fe9e935cd11a1be698422d7b952a129bbab9";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           description = "Generate MASM code from haskell";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "MFlow" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
         , case-insensitive, clientsession, conduit, conduit-extra
         , containers, cpphs, directory, extensible-exceptions, http-types
         , monadloc, mtl, old-time, parsec, pwstore-fast, random
         , RefSerialize, resourcet, stdenv, stm, TCache, text, time
         , transformers, utf8-string, vector, wai, wai-extra, warp, warp-tls
         , Workflow
         }:
         mkDerivation {
           pname = "MFlow";
           version = "0.4.6.0";
           sha256 = "4e93f7488152d88359fd100a742c2ea96788284d262f3cd1b50d936f80f1a342";
           libraryHaskellDepends = [
             base blaze-html blaze-markup bytestring case-insensitive
             clientsession conduit conduit-extra containers directory
             extensible-exceptions http-types monadloc mtl old-time parsec
             pwstore-fast random RefSerialize resourcet stm TCache text time
             transformers utf8-string vector wai wai-extra warp warp-tls
             Workflow
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           doCheck = false;
           description = "stateful, RESTful web framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MemoTrie" = callPackage
        ({ mkDerivation, base, newtype-generics, stdenv }:
         mkDerivation {
           pname = "MemoTrie";
           version = "0.6.7";
           sha256 = "cdab03dc1394e982dd3144ac433b7548d51a55a1c44ddb864e5ac14057c41672";
           revision = "1";
           editedCabalFile = "17k7wv2r3ja90n29f8c53x3l6kc3z4g751g6g9rx2mk5irs71pzg";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base newtype-generics ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/conal/MemoTrie";
           description = "Trie-based memo functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MissingH" = callPackage
        ({ mkDerivation, array, base, containers, directory, filepath
         , hslogger, HUnit, mtl, network, old-locale, old-time, parsec
         , process, random, regex-compat, stdenv, time, unix
         }:
         mkDerivation {
           pname = "MissingH";
           version = "1.3.0.2";
           sha256 = "64b870214f406d83e48fa13f58f9e4ebf8b69ae898c99788d2d0f3ebfed55ab2";
           revision = "4";
           editedCabalFile = "0anc862890zcrjji4hd69annc7nqjvfis49jzdddg4yymlhvh5p4";
           libraryHaskellDepends = [
             array base containers directory filepath hslogger HUnit mtl network
             old-locale old-time parsec process random regex-compat time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://software.complete.org/missingh";
           description = "Large utility library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MonadCatchIO-transformers" = callPackage
        ({ mkDerivation, base, extensible-exceptions, monads-tf, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "MonadCatchIO-transformers";
           version = "0.3.1.3";
           sha256 = "10a49c32c22123e053377fe558d0c136c2b3746d15954d60f66f6bc80f0404bd";
           libraryHaskellDepends = [
             base extensible-exceptions monads-tf transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Monad-transformer compatible version of the Control.Exception module";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MonadPrompt" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "MonadPrompt";
           version = "1.0.0.5";
           sha256 = "b012cbbe83650f741c7b7f6eafcc89dec299b0ac74a758b6f3a8cdfc5d3bbeda";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           description = "MonadPrompt, implementation & examples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MonadRandom" = callPackage
        ({ mkDerivation, base, mtl, random, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "MonadRandom";
           version = "0.4.2.3";
           sha256 = "de40b12a70ec6425a9e54b33e2ac652e14d7c005a3b46d701d1e5696b98636c0";
           libraryHaskellDepends = [
             base mtl random transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Random-number generation monad";
           license = "unknown";
         }) {};
      "MusicBrainz" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
         , HTTP, http-conduit, http-types, monad-control, resourcet, stdenv
         , text, time, time-locale-compat, transformers, vector, xml-conduit
         , xml-types
         }:
         mkDerivation {
           pname = "MusicBrainz";
           version = "0.2.4";
           sha256 = "d221f8752fe4c0abdb6e681b1b1811af067b2bc202fa3ef869c5cebe631c3db8";
           revision = "1";
           editedCabalFile = "1bnj0wq9q6y2pxjnl1rk5ybdj16g17g7qkzrfnjrwmm7iq8xbm62";
           libraryHaskellDepends = [
             aeson base bytestring conduit conduit-extra HTTP http-conduit
             http-types monad-control resourcet text time time-locale-compat
             transformers vector xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/hMusicBrainz";
           description = "interface to MusicBrainz XML2 web service";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "Network-NineP" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, convertible
         , exceptions, hslogger, monad-loops, monad-peel, mstate, mtl
         , network, NineP, regex-posix, stateref, stdenv, transformers
         }:
         mkDerivation {
           pname = "Network-NineP";
           version = "0.4.1";
           sha256 = "9d7a456c672c1e7ef1075e27654b21ecacd8062917e1482c8060e404f3960f4a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers convertible exceptions hslogger
             monad-loops monad-peel mstate mtl network NineP regex-posix
             stateref transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "High-level abstraction over 9P protocol";
           license = "unknown";
         }) {};
      "NineP" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "NineP";
           version = "0.0.2.1";
           sha256 = "4bb1516b9fb340118960043e0c72aa62316be8ff3f78cc8c1354e2fac96dd8cc";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://9ph.googlecode.com";
           description = "9P2000 in pure Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "NoTrace" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "NoTrace";
           version = "0.3.0.1";
           sha256 = "a8efac60b33bb9a50b08036b94b75746150aa79e2cf4a10f3c627f4982cd5f4f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/CindyLinz/Haskell-NoTrace";
           description = "Remove all the functions come from Debug.Trace after debugging";
           license = stdenv.lib.licenses.mit;
         }) {};
      "NumInstances" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "NumInstances";
           version = "1.4";
           sha256 = "cbdb2a49346f59ceb5ab38592d7bc52e5205580d431d0ac6d852fd9880e59679";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/conal/NumInstances";
           description = "Instances of numeric classes for functions and tuples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ObjectName" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "ObjectName";
           version = "1.1.0.1";
           sha256 = "72dbef237580fd4e8567de2de752835bbadd3629f486d1586486d49a49aad210";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/svenpanne/ObjectName";
           description = "Explicitly handled object names";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Octree" = callPackage
        ({ mkDerivation, AC-Vector, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "Octree";
           version = "0.5.4.3";
           sha256 = "4fd8aa7fbbcc2387e06159b0d96c8ede26812ebe85b5d6931ce4bb8b1972b465";
           revision = "1";
           editedCabalFile = "1ysmpp7knrkxh68q6nq012877mn51sgzjrpls7d80pkg4pgkf42a";
           libraryHaskellDepends = [ AC-Vector base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mgajda/octree";
           description = "Simple unbalanced Octree for storing data about 3D points";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "OneTuple" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "OneTuple";
           version = "0.2.1";
           sha256 = "4b6f74b6d92df112b0f4eaf15ccdc5fbb763d59f07e9a2afa5690ef89159a2f4";
           revision = "1";
           editedCabalFile = "1kb7f21n9vwwrk4kipqdwdqs94k34zai6yy0kgdn22zi442yicjh";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Singleton Tuple";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Only" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "Only";
           version = "0.1";
           sha256 = "ab7aa193e8c257d3bda6b0b3c1cbcf74cdaa85ab08cb20c2dd62ba248c1ab265";
           revision = "1";
           editedCabalFile = "1ahk7p34kmh041mz7lyc10nhcxgv2i4z8nvzxvqm2x34gslmsbzr";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "The 1-tuple type or single-value \"collection\"";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "OpenGL" = callPackage
        ({ mkDerivation, base, bytestring, containers, GLURaw, ObjectName
         , OpenGLRaw, StateVar, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "OpenGL";
           version = "3.0.1.0";
           sha256 = "f45c0c65aa31108391d5d86bb65b3e945e0c1102b7d09db4b356c060f3afa2da";
           libraryHaskellDepends = [
             base bytestring containers GLURaw ObjectName OpenGLRaw StateVar
             text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Opengl";
           description = "A binding for the OpenGL graphics system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "OpenGLRaw" = callPackage
        ({ mkDerivation, base, bytestring, containers, fixed, half, libGL
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "OpenGLRaw";
           version = "3.2.4.0";
           sha256 = "e3f9910be96b375fdf30db5a2cb6d55869eab11d507aa14edee177495c7dcb2e";
           libraryHaskellDepends = [
             base bytestring containers fixed half text transformers
           ];
           librarySystemDepends = [ libGL ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Opengl";
           description = "A raw binding for the OpenGL graphics system";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libGL;};
      "PSQueue" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "PSQueue";
           version = "1.1";
           sha256 = "a8e0871ad10f916f55c3b9baec53eff23c4e97e09cf96d6c66771789e00a49cc";
           revision = "1";
           editedCabalFile = "0gpx33bkhpwya7prnqzwpbnylm4v4nm4x8m02ggmj7d6rkklb2qq";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Priority Search Queue";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "PortMidi" = callPackage
        ({ mkDerivation, alsaLib, base, stdenv }:
         mkDerivation {
           pname = "PortMidi";
           version = "0.1.6.0";
           sha256 = "54599bc0377847ab17b175641023ec495587ca82807fd2360e17f4c5575814b1";
           libraryHaskellDepends = [ base ];
           librarySystemDepends = [ alsaLib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/PortMidi";
           description = "A binding for PortMedia/PortMidi";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) alsaLib;};
      "QuasiText" = callPackage
        ({ mkDerivation, attoparsec, base, haskell-src-meta, stdenv
         , template-haskell, text, th-lift-instances
         }:
         mkDerivation {
           pname = "QuasiText";
           version = "0.1.2.6";
           sha256 = "e801d269e25263645ee66fc090040fe9b9c8a8e5bf10485801dd7a5a30e0f119";
           libraryHaskellDepends = [
             attoparsec base haskell-src-meta template-haskell text
             th-lift-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mikeplus64/QuasiText";
           description = "A QuasiQuoter for Text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "QuickCheck" = callPackage
        ({ mkDerivation, base, containers, random, stdenv, template-haskell
         , tf-random, transformers
         }:
         mkDerivation {
           pname = "QuickCheck";
           version = "2.8.2";
           sha256 = "98c64de1e2dbf801c54dcdcb8ddc33b3569e0da38b39d711ee6ac505769926aa";
           libraryHaskellDepends = [
             base containers random template-haskell tf-random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nick8325/quickcheck";
           description = "Automatic testing of Haskell programs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "RNAlien" = callPackage
        ({ mkDerivation, aeson, base, biocore, biofasta, BlastHTTP
         , blastxml, bytestring, cassava, ClustalParser, cmdargs, containers
         , directory, edit-distance, either-unwrap, EntrezHTTP, filepath
         , hierarchical-clustering, HTTP, http-conduit, hxt, matrix, network
         , parsec, process, pureMD5, random, split, stdenv, Taxonomy, text
         , time, transformers, vector, ViennaRNAParser
         }:
         mkDerivation {
           pname = "RNAlien";
           version = "1.1.3";
           sha256 = "d7d0c3fdbac52be1df3c122a400c3471c6bdeed5e148b742fb77364751029e5d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base biocore biofasta BlastHTTP blastxml bytestring cassava
             ClustalParser cmdargs containers directory edit-distance
             either-unwrap EntrezHTTP filepath hierarchical-clustering HTTP
             http-conduit hxt matrix network parsec process pureMD5 random
             Taxonomy text transformers vector ViennaRNAParser
           ];
           executableHaskellDepends = [
             base biocore biofasta bytestring cassava cmdargs containers
             directory either-unwrap filepath process random split time vector
             ViennaRNAParser
           ];
           doHaddock = false;
           doCheck = false;
           description = "Unsupervized construction of RNA family models";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "RSA" = callPackage
        ({ mkDerivation, base, binary, bytestring, crypto-api
         , crypto-pubkey-types, pureMD5, SHA, stdenv
         }:
         mkDerivation {
           pname = "RSA";
           version = "2.2.0";
           sha256 = "293056d43352716d7f9501aac7ac9871c338f00d40c97a54c927a798f8a4f2d7";
           libraryHaskellDepends = [
             base binary bytestring crypto-api crypto-pubkey-types pureMD5 SHA
           ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of RSA, using the padding schemes of PKCS#1 v2.1.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Rasterific" = callPackage
        ({ mkDerivation, base, bytestring, containers, dlist, FontyFruity
         , free, JuicyPixels, mtl, primitive, stdenv, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "Rasterific";
           version = "0.6.1.1";
           sha256 = "1887b28b9921dfb2d4d64cb888e5febce17db828103a7e2aed0a978d9fa78665";
           libraryHaskellDepends = [
             base bytestring containers dlist FontyFruity free JuicyPixels mtl
             primitive vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           description = "A pure haskell drawing engine";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ReadArgs" = callPackage
        ({ mkDerivation, base, stdenv, system-filepath, text }:
         mkDerivation {
           pname = "ReadArgs";
           version = "1.2.3";
           sha256 = "9f4b2a9dfa9f0d851f79853a56ffde3b35e218d5f2bf8354c91a1344a1251a69";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base system-filepath text ];
           executableHaskellDepends = [ base system-filepath text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/rampion/ReadArgs";
           description = "Simple command line argument parsing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "RefSerialize" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, hashtables
         , stdenv, stringsearch
         }:
         mkDerivation {
           pname = "RefSerialize";
           version = "0.3.1.4";
           sha256 = "dc38719d34a5e238dc7cda731f49a5367fc5a0bf7d4b1db44be5e2ac5a9781c2";
           libraryHaskellDepends = [
             base binary bytestring containers hashtables stringsearch
           ];
           doHaddock = false;
           doCheck = false;
           description = "Write to and read from ByteStrings maintaining internal memory references";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Rlang-QQ" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, Cabal, containers
         , data-binary-ieee754, directory, filepath, haskell-src-meta, HList
         , lens, mtl, process, repa, SHA, split, stdenv, syb
         , template-haskell, temporary, text, transformers, trifecta
         , utf8-string, vector, zlib
         }:
         mkDerivation {
           pname = "Rlang-QQ";
           version = "0.3.1.0";
           sha256 = "121e05ebb444c85fc4ad2b1cdeac4f7b140a5604c48b11cedc88b97d72658366";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base binary bytestring Cabal containers data-binary-ieee754
             directory filepath haskell-src-meta HList lens mtl process repa SHA
             split syb template-haskell temporary text transformers trifecta
             utf8-string vector zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~aavogt/Rlang-QQ";
           description = "quasiquoter for inline-R code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "SHA" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "SHA";
           version = "1.6.4.2";
           sha256 = "c470176f63cbe49fd0502a1b32ef22bc01b1af42385583b8be94547750958a8c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ array base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Implementations of the SHA suite of message digest functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "STMonadTrans" = callPackage
        ({ mkDerivation, array, base, mtl, stdenv }:
         mkDerivation {
           pname = "STMonadTrans";
           version = "0.3.4";
           sha256 = "44935ff710369da1614e00a40dabea6ba3a4dd02959d7b0e5ed17a915c3f0210";
           libraryHaskellDepends = [ array base mtl ];
           doHaddock = false;
           doCheck = false;
           description = "A monad transformer version of the ST monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "SVGFonts" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-markup, blaze-svg
         , containers, data-default-class, diagrams-core, diagrams-lib
         , directory, parsec, split, stdenv, text, tuple, vector, xml
         }:
         mkDerivation {
           pname = "SVGFonts";
           version = "1.5.0.1";
           sha256 = "7b3431a70f94e89e78e1e28c5730060c5af522526ac7a1318b51de2c4d4c4ef4";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base blaze-markup blaze-svg containers
             data-default-class diagrams-core diagrams-lib directory parsec
             split text tuple vector xml
           ];
           doHaddock = false;
           doCheck = false;
           description = "Fonts from the SVG-Font format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "SafeSemaphore" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm }:
         mkDerivation {
           pname = "SafeSemaphore";
           version = "0.10.1";
           sha256 = "21e5b737a378cae9e1faf85cab015316d4c84d4b37e6d9d202111cef8c4cef66";
           revision = "1";
           editedCabalFile = "1k61gqgfh6n3sj8ni8sfvpcm39nqc2msjfxk2pgmhfabvv48w5hv";
           libraryHaskellDepends = [ base containers stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ChrisKuklewicz/SafeSemaphore";
           description = "Much safer replacement for QSemN, QSem, and SampleVar";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "SegmentTree" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "SegmentTree";
           version = "0.3";
           sha256 = "6188c1b1276d7fa0391098a563df73dd522d20b57dc5321fe3418a9e3ca84fc1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Data structure for querying the set (or count) of intervals covering given point";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Spintax" = callPackage
        ({ mkDerivation, attoparsec, base, extra, mwc-random, stdenv, text
         }:
         mkDerivation {
           pname = "Spintax";
           version = "0.1.0.1";
           sha256 = "bf749b240dcec32068ca1b94f34bfd824722f57c63c0c81473fd8ff88533dfe7";
           libraryHaskellDepends = [ attoparsec base extra mwc-random text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/spintax";
           description = "Random text generation based on spintax";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Spock" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , case-insensitive, containers, crypto-random, directory, focus
         , hashable, http-types, hvect, list-t, monad-control, mtl
         , old-locale, path-pieces, random, reroute, resource-pool
         , resourcet, stdenv, stm, stm-containers, text, time, transformers
         , transformers-base, unordered-containers, vault, wai, wai-extra
         , warp
         }:
         mkDerivation {
           pname = "Spock";
           version = "0.10.0.1";
           sha256 = "ef80deb37728e89369f34c3a8cc9c4190d8aa50911a08a9e1e0c1993466595d2";
           revision = "1";
           editedCabalFile = "1x5bnb3g0fvjw12p3j24s8dpxnid36xgr80lq1j4xpz3mbiw57sc";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring case-insensitive containers
             crypto-random directory focus hashable http-types hvect list-t
             monad-control mtl old-locale path-pieces random reroute
             resource-pool resourcet stm stm-containers text time transformers
             transformers-base unordered-containers vault wai wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.spock.li";
           description = "Another Haskell web framework for rapid development";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Spock-digestive" = callPackage
        ({ mkDerivation, base, digestive-functors, http-types, mtl, Spock
         , stdenv, text, unordered-containers, wai
         }:
         mkDerivation {
           pname = "Spock-digestive";
           version = "0.2.0.0";
           sha256 = "e5571d88d7b9dcafc7f5c364c8499a1d8d698d1698f2615b5f26698c85080260";
           revision = "1";
           editedCabalFile = "0d8cmiyrq1yya9x6v60nggac20g6jcjsm9d07zz9i9a99c19q3h4";
           libraryHaskellDepends = [
             base digestive-functors http-types mtl Spock text
             unordered-containers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/Spock-digestive";
           description = "Digestive functors support for Spock";
           license = stdenv.lib.licenses.mit;
         }) {};
      "Spock-lucid" = callPackage
        ({ mkDerivation, base, blaze-builder, lucid, Spock, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "Spock-lucid";
           version = "0.3.0.0";
           sha256 = "9291c9105d45f1807a63a633475b8e32ad9f9b99d3eff0db247079d69f707f3c";
           libraryHaskellDepends = [
             base blaze-builder lucid Spock transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/Spock-lucid";
           description = "Lucid support for Spock";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Spock-worker" = callPackage
        ({ mkDerivation, base, containers, errors, lifted-base, mtl, Spock
         , stdenv, stm, text, time, transformers, vector
         }:
         mkDerivation {
           pname = "Spock-worker";
           version = "0.3.0.0";
           sha256 = "f5ec5c09125a6dd6c6cd0534a1eb7bc0d6bfe9908f7328d999bf14bd785835f3";
           revision = "1";
           editedCabalFile = "1i9llkqydqr3n8aqnqwx0d75h7yyf58zpm82ghyxbbzqi27sysaf";
           libraryHaskellDepends = [
             base containers errors lifted-base mtl Spock stm text time
             transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/Spock-worker";
           description = "Background workers for Spock";
           license = stdenv.lib.licenses.mit;
         }) {};
      "StateVar" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers }:
         mkDerivation {
           pname = "StateVar";
           version = "1.1.0.4";
           sha256 = "7ad68decb5c9a76f83c95ece5fa13d1b053e4fb1079bd2d3538f6b05014dffb7";
           libraryHaskellDepends = [ base stm transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-opengl/StateVar";
           description = "State variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Strafunski-StrategyLib" = callPackage
        ({ mkDerivation, base, directory, mtl, stdenv, syb, transformers }:
         mkDerivation {
           pname = "Strafunski-StrategyLib";
           version = "5.0.0.9";
           sha256 = "c8e464538cd27c4f2636eb25dcd1a1ef1df680f89600219baa2ca21ce2a98e1d";
           libraryHaskellDepends = [ base directory mtl syb transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Library for strategic programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "TCache" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory
         , hashtables, mtl, old-time, RefSerialize, stdenv, stm, text
         }:
         mkDerivation {
           pname = "TCache";
           version = "0.12.0";
           sha256 = "fab4e5fb6751a06324994577d6d4e5feae106496d28326e2c8c63c593ed55955";
           libraryHaskellDepends = [
             base bytestring containers directory hashtables mtl old-time
             RefSerialize stm text
           ];
           doHaddock = false;
           doCheck = false;
           description = "A Transactional cache with user-defined persistence";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Taxonomy" = callPackage
        ({ mkDerivation, aeson, base, bytestring, either-unwrap, fgl
         , graphviz, parsec, stdenv, text, vector
         }:
         mkDerivation {
           pname = "Taxonomy";
           version = "1.0.2";
           sha256 = "343e94d5cd555a99b242b50d253b0862c2174f7d3ea2b4935cdac642a414d21c";
           libraryHaskellDepends = [
             aeson base bytestring either-unwrap fgl graphviz parsec text vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Libary for parsing, processing and vizualization of taxonomy data";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "TaxonomyTools" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cassava, cmdargs
         , directory, either-unwrap, EntrezHTTP, fgl, hxt, parsec, process
         , stdenv, Taxonomy, vector
         }:
         mkDerivation {
           pname = "TaxonomyTools";
           version = "1.0.0";
           sha256 = "6019493009c6b720fdabae83c939460780dca06ec67251160814f1dca842f26a";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson base bytestring cassava cmdargs directory either-unwrap
             EntrezHTTP fgl hxt parsec process Taxonomy vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Tool for parsing, processing, comparing and visualizing taxonomy data";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "Unixutils" = callPackage
        ({ mkDerivation, base, bytestring, directory, exceptions, filepath
         , mtl, process, process-extras, pureMD5, regex-tdfa, stdenv, unix
         , zlib
         }:
         mkDerivation {
           pname = "Unixutils";
           version = "1.54.1";
           sha256 = "f9295529744cb2658364956f376ff506dc1876eb2b0148e5b09c1a4bc4732644";
           libraryHaskellDepends = [
             base bytestring directory exceptions filepath mtl process
             process-extras pureMD5 regex-tdfa unix zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/seereason/haskell-unixutils.git";
           description = "A crude interface between Haskell and Unix-like operating systems";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ViennaRNAParser" = callPackage
        ({ mkDerivation, base, parsec, process, stdenv, transformers }:
         mkDerivation {
           pname = "ViennaRNAParser";
           version = "1.2.9";
           sha256 = "f4e8964ce0710a0461d49e790784a8b82579f4c6079c5732b7fe1ae09fefb219";
           libraryHaskellDepends = [ base parsec process transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Libary for parsing ViennaRNA package output";
           license = "GPL";
         }) {};
      "Win32" = callPackage
        ({ mkDerivation, advapi32, base, bytestring, gdi32, shell32
         , shfolder, stdenv, user32, winmm
         }:
         mkDerivation {
           pname = "Win32";
           version = "2.3.1.0";
           sha256 = "685a695e9ec86efb06d3a2effb3e18f916c8696e71ca4811cb53befa04323ff9";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [
             advapi32 gdi32 shell32 shfolder user32 winmm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/win32";
           description = "A binding to part of the Win32 library";
           license = stdenv.lib.licenses.bsd3;
           platforms = stdenv.lib.platforms.none;
         }) {inherit (pkgs) advapi32; inherit (pkgs) gdi32; 
inherit (pkgs) shell32; inherit (pkgs) shfolder; 
inherit (pkgs) user32; inherit (pkgs) winmm;};
      "Win32-extras" = callPackage
        ({ mkDerivation, base, imm32, msimg32, stdenv, Win32 }:
         mkDerivation {
           pname = "Win32-extras";
           version = "0.2.0.1";
           sha256 = "f0dc0e62d87114953e111bb3c8a09f90d5dba490007c4f26d8b892a3f4c69902";
           revision = "1";
           editedCabalFile = "0gxp1a5sk9jb7x1mvz5jk68n8npvh8b9nlqcw9s2dn4wlyicm4mp";
           libraryHaskellDepends = [ base Win32 ];
           librarySystemDepends = [ imm32 msimg32 ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/shelarcy/Win32-extras/";
           description = "Provides missing Win32 API";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) imm32; inherit (pkgs) msimg32;};
      "Win32-notify" = callPackage
        ({ mkDerivation, base, containers, directory, stdenv, Win32 }:
         mkDerivation {
           pname = "Win32-notify";
           version = "0.3.0.1";
           sha256 = "c49159d8154f9ff7d30207901125ceadc2aa94baa3b2996ff0884e9f0158eb7f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers directory Win32 ];
           doHaddock = false;
           doCheck = false;
           description = "A binding to part of the Win32 library for file notification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Workflow" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, directory
         , exceptions, extensible-exceptions, mtl, old-time, RefSerialize
         , stdenv, stm, TCache, vector
         }:
         mkDerivation {
           pname = "Workflow";
           version = "0.8.3";
           sha256 = "c89b4b3a4a29fe576f8972ffa1e698eff8ac0ceb433642fc0b3f9c0308d22123";
           revision = "1";
           editedCabalFile = "0jy6hn1lx9wpq44ld96msgb6a2hb6cvryn1a39b4rq4iy3m45r8v";
           libraryHaskellDepends = [
             base binary bytestring containers directory exceptions
             extensible-exceptions mtl old-time RefSerialize stm TCache vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Workflow patterns over a monad for thread state logging & recovery";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "X11" = callPackage
        ({ mkDerivation, base, data-default, libX11, libXext, libXinerama
         , libXrandr, libXrender, libXScrnSaver, stdenv
         }:
         mkDerivation {
           pname = "X11";
           version = "1.6.1.2";
           sha256 = "5216d485f807bd53bf34fba170896a8930290a6ac28b8e611c28e751ad67f2cf";
           libraryHaskellDepends = [ base data-default ];
           librarySystemDepends = [
             libX11 libXext libXinerama libXrandr libXrender libXScrnSaver
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-pkg-janitors/X11";
           description = "A binding to the X11 graphics library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs.xorg) libXScrnSaver; inherit (pkgs.xorg) libXext; 
inherit (pkgs.xorg) libXinerama; inherit (pkgs.xorg) libXrender;};
      "Xauth" = callPackage
        ({ mkDerivation, base, libXau, stdenv }:
         mkDerivation {
           pname = "Xauth";
           version = "0.1";
           sha256 = "ba332dea9ec152b3f676d22461eee81a657e16987c3dfb8249e9dbe0cda56ed7";
           libraryHaskellDepends = [ base ];
           libraryPkgconfigDepends = [ libXau ];
           doHaddock = false;
           doCheck = false;
           description = "A binding to the X11 authentication library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Yampa" = callPackage
        ({ mkDerivation, base, deepseq, random, stdenv }:
         mkDerivation {
           pname = "Yampa";
           version = "0.10.5";
           sha256 = "ebb5fb1091f913b246fb2e9dd8278d642dbb88bfd248e34fff1ac796299cf6d7";
           libraryHaskellDepends = [ base deepseq random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Yampa";
           description = "Library for programming hybrid systems";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "YampaSynth" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, HCodecs
         , stdenv, Yampa
         }:
         mkDerivation {
           pname = "YampaSynth";
           version = "0.2";
           sha256 = "a1c6a0ea57aee855ca3f558f1b6d7ec167abb57333052d8a9f7b46ef323d0a09";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             array base bytestring containers HCodecs Yampa
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
           description = "Software synthesizer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "abstract-deque" = callPackage
        ({ mkDerivation, array, base, containers, random, stdenv, time }:
         mkDerivation {
           pname = "abstract-deque";
           version = "0.3";
           sha256 = "09aa10f38193a8275a7791b92a4f3a7192a304874637e2a35c897dde25d75ca2";
           libraryHaskellDepends = [ array base containers random time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "Abstract, parameterized interface to mutable Deques";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "abstract-par" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "abstract-par";
           version = "0.3.3";
           sha256 = "248a8739bd902462cb16755b690b55660e196e58cc7e6ef8157a72c2a3d5d860";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/monad-par";
           description = "Type classes generalizing the functionality of the 'monad-par' library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate" = callPackage
        ({ mkDerivation, array, base, containers, fclabels, ghc-prim
         , hashable, hashtables, pretty, stdenv, template-haskell
         , unordered-containers
         }:
         mkDerivation {
           pname = "accelerate";
           version = "0.15.1.0";
           sha256 = "db0f9a5bd8ba6e264561bb62b213384e70baae6fe90208ea2ee101f553556b1d";
           revision = "1";
           editedCabalFile = "0dgzfcc2yjxqq5llvm19lak16ymsqghalm33y0calgp07fwkp1hj";
           libraryHaskellDepends = [
             array base containers fclabels ghc-prim hashable hashtables pretty
             template-haskell unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AccelerateHS/accelerate/";
           description = "An embedded language for accelerated array processing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ace" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
         , data-default, parsec, stdenv, text
         }:
         mkDerivation {
           pname = "ace";
           version = "0.6";
           sha256 = "d3472b659d26cf7ea9afa207ec24ac0314598de997722e636e9bfa24b3900738";
           libraryHaskellDepends = [
             attoparsec base blaze-html blaze-markup data-default parsec text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Attempto Controlled English parser and printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "acid-state" = callPackage
        ({ mkDerivation, array, base, bytestring, cereal, containers
         , directory, extensible-exceptions, filepath, mtl, network
         , safecopy, stdenv, stm, template-haskell, unix
         }:
         mkDerivation {
           pname = "acid-state";
           version = "0.14.2";
           sha256 = "86dc1ebbcb4870e1c233764c3e038f38c8c8802694440baf83c3f7dc05ebe5c0";
           libraryHaskellDepends = [
             array base bytestring cereal containers directory
             extensible-exceptions filepath mtl network safecopy stm
             template-haskell unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://acid-state.seize.it/";
           description = "Add ACID guarantees to any serializable Haskell data structure";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "action-permutations" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "action-permutations";
           version = "0.0.0.1";
           sha256 = "a419ee59f996e5305afd96336a561a9fcf26844362eaa32ab6b747a8f9fd1466";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Execute a set of actions (e.g. parsers) in each possible order";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "active" = callPackage
        ({ mkDerivation, base, lens, linear, semigroupoids, semigroups
         , stdenv, vector
         }:
         mkDerivation {
           pname = "active";
           version = "0.2.0.10";
           sha256 = "0819b0ae7a690bba42f974ba3d1efb1b356919e0f9e278cb30653d022bce78b1";
           libraryHaskellDepends = [
             base lens linear semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Abstractions for animation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ad" = callPackage
        ({ mkDerivation, array, base, comonad, containers, data-reify, erf
         , free, nats, reflection, stdenv, transformers
         }:
         mkDerivation {
           pname = "ad";
           version = "4.3.2.1";
           sha256 = "84de5524f60a088f4a326956434c74f32b9c4961be616fb3f1fbea620413e39d";
           libraryHaskellDepends = [
             array base comonad containers data-reify erf free nats reflection
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/ad";
           description = "Automatic Differentiation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "adjunctions" = callPackage
        ({ mkDerivation, array, base, comonad, containers, contravariant
         , distributive, free, mtl, profunctors, semigroupoids, semigroups
         , stdenv, tagged, transformers, transformers-compat, void
         }:
         mkDerivation {
           pname = "adjunctions";
           version = "4.3";
           sha256 = "b948a14fafe8857f451ae3e474f5264c907b5a2d841d52bf78249ae4749c3ecc";
           revision = "1";
           editedCabalFile = "1079l9szyr7ybi9wcvv1vjsjfrqirkn9z3j7dann8vbk81a4z37q";
           libraryHaskellDepends = [
             array base comonad containers contravariant distributive free mtl
             profunctors semigroupoids semigroups tagged transformers
             transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/adjunctions/";
           description = "Adjunctions and representable functors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson" = callPackage
        ({ mkDerivation, attoparsec, base, base-compat, bytestring
         , containers, deepseq, dlist, fail, ghc-prim, hashable, scientific
         , semigroups, stdenv, tagged, template-haskell, text
         , th-abstraction, time, time-locale-compat, transformers
         , transformers-compat, unordered-containers, uuid-types, vector
         }:
         mkDerivation {
           pname = "aeson";
           version = "1.2.3.0";
           sha256 = "aacdc69295dc2a781b3fdc5fce4eb019610df4ae0dee6c2ab5234923d7c59cbf";
           libraryHaskellDepends = [
             attoparsec base base-compat bytestring containers deepseq dlist
             fail ghc-prim hashable scientific semigroups tagged
             template-haskell text th-abstraction time time-locale-compat
             transformers transformers-compat unordered-containers uuid-types
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/aeson";
           description = "Fast JSON parsing and encoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-better-errors" = callPackage
        ({ mkDerivation, aeson, base, bytestring, dlist, mtl, scientific
         , stdenv, text, transformers, transformers-compat
         , unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "aeson-better-errors";
           version = "0.9.1.0";
           sha256 = "68f001bf055ec7b755d91019f2a0ef136307d157a231acddad6b4cc561f67327";
           libraryHaskellDepends = [
             aeson base bytestring dlist mtl scientific text transformers
             transformers-compat unordered-containers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdgarrood/aeson-better-errors";
           description = "Better error messages when decoding JSON values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aeson-casing" = callPackage
        ({ mkDerivation, aeson, base, stdenv }:
         mkDerivation {
           pname = "aeson-casing";
           version = "0.1.0.5";
           sha256 = "cfec563dc6822f035858a7190153d8818c200be565806b43b70f198bf5410577";
           libraryHaskellDepends = [ aeson base ];
           doHaddock = false;
           doCheck = false;
           description = "Tools to change the formatting of field names in Aeson instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aeson-compat" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
         , containers, exceptions, hashable, nats, scientific, semigroups
         , stdenv, tagged, text, time, time-locale-compat
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-compat";
           version = "0.3.6";
           sha256 = "7aa365d9f44f708f25c939489528836aa10b411e0a3e630c8c2888670874d142";
           revision = "6";
           editedCabalFile = "1hvq2pp7k2wqlzd192l7dz1dhld7m3slhv84hnmh4jz8g618xzsc";
           libraryHaskellDepends = [
             aeson attoparsec base base-compat bytestring containers exceptions
             hashable nats scientific semigroups tagged text time
             time-locale-compat unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/aeson-compat#readme";
           description = "Compatibility layer for aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-extra" = callPackage
        ({ mkDerivation, aeson, aeson-compat, attoparsec, base, base-compat
         , bytestring, containers, exceptions, hashable, parsec
         , recursion-schemes, scientific, stdenv, template-haskell, text
         , time, time-parsers, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-extra";
           version = "0.3.2.0";
           sha256 = "7af0de540f971c156ec9ce16188233beefa24a4320e71f2344791bdf69ddec0d";
           libraryHaskellDepends = [
             aeson aeson-compat attoparsec base base-compat bytestring
             containers exceptions hashable parsec recursion-schemes scientific
             template-haskell text time time-parsers transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/aeson-extra#readme";
           description = "Extra goodies for aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-lens" = callPackage
        ({ mkDerivation, aeson, base, bytestring, lens, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-lens";
           version = "0.5.0.0";
           sha256 = "7ace668031da8119439e21b6ccbe329d37c533be2f5c5612389107d2676728df";
           libraryHaskellDepends = [
             aeson base bytestring lens text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Lens of Aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-pretty" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, cmdargs
         , stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-pretty";
           version = "0.7.2";
           sha256 = "6408b8b2bcd12cf591e4b93b4d9f5143449b33a59fbd3653f328e2515040570d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring text unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson attoparsec base bytestring cmdargs
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/informatikr/aeson-pretty";
           description = "JSON pretty-printing library and command-line tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-qq" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat
         , haskell-src-meta, parsec, scientific, stdenv, template-haskell
         , text, vector
         }:
         mkDerivation {
           pname = "aeson-qq";
           version = "0.8.1";
           sha256 = "2dcd2392902baac446e317621df509b09db9dca9b8c9187e53701226f18013fd";
           libraryHaskellDepends = [
             aeson attoparsec base base-compat haskell-src-meta parsec
             scientific template-haskell text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/zalora/aeson-qq";
           description = "JSON quasiquoter for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aeson-utils" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, scientific
         , stdenv, text
         }:
         mkDerivation {
           pname = "aeson-utils";
           version = "0.3.0.2";
           sha256 = "71814b1be8849f945395eb81217a2ad464f2943134c50c09afd8a3126add4b1f";
           revision = "7";
           editedCabalFile = "0lnlmsn5imbapdhbza1175wm04ynn1w75llkhlk1akpanx1dnd15";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring scientific text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Utilities for working with Aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "agda-snippets" = callPackage
        ({ mkDerivation, Agda, base, containers, mtl, network-uri, stdenv
         , transformers, xhtml
         }:
         mkDerivation {
           pname = "agda-snippets";
           version = "2.5.1";
           sha256 = "9dd2d5fe077df8e6f6af96615e653a4d147e4e51429f022fd69451054b2056d6";
           revision = "1";
           editedCabalFile = "0p5y72dba3hnwpfrh88946zzw50h03p2pa0qcrzydw310hxm220r";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             Agda base containers mtl network-uri xhtml
           ];
           executableHaskellDepends = [ Agda base network-uri transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/liamoc/agda-snippets#readme";
           description = "Render just the Agda snippets of a literate Agda file to HTML";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "agda-snippets-hakyll" = callPackage
        ({ mkDerivation, agda-snippets, base, directory, filepath, hakyll
         , network-uri, pandoc, pandoc-types, stdenv
         }:
         mkDerivation {
           pname = "agda-snippets-hakyll";
           version = "0.1.2.1";
           sha256 = "9f9b2e72b7c2d0aeed1cc8255c50464915f78665ae8c61e8466567ac22d3b6cf";
           libraryHaskellDepends = [
             agda-snippets base directory filepath hakyll network-uri pandoc
             pandoc-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liamoc/agda-snippets#readme";
           description = "Literate Agda support using agda-snippets, for Hakyll pages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "agentx" = callPackage
        ({ mkDerivation, base, binary, bitwise, bytestring, containers
         , data-default, Diff, fclabels, mtl, network, pipes
         , pipes-concurrency, pipes-network, safe, snmp, stdenv, time
         , transformers, unix
         }:
         mkDerivation {
           pname = "agentx";
           version = "0.2.0.0";
           sha256 = "e61dc3994aaf70cf8823064d56e839ee1af18ae6be30e294214f759064ccb65e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bitwise bytestring containers data-default Diff
             fclabels mtl network pipes pipes-concurrency pipes-network safe
             snmp time transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           description = "AgentX protocol for write SNMP subagents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "airship" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, blaze-builder
         , bytestring, bytestring-trie, case-insensitive, cryptohash
         , directory, either, filepath, http-date, http-media, http-types
         , lifted-base, microlens, mime-types, mmorph, monad-control, mtl
         , network, old-locale, random, stdenv, text, time, transformers
         , transformers-base, unix, unordered-containers, wai, wai-extra
         }:
         mkDerivation {
           pname = "airship";
           version = "0.5.0";
           sha256 = "f42e81e118a419125ed559f6041a7c17fd07020d2bb5052d1649301049689951";
           revision = "1";
           editedCabalFile = "1lpzixk76xsgvrq18n8sdgfl6a32cxf7b069cyxj6bgyy794l0db";
           libraryHaskellDepends = [
             attoparsec base base64-bytestring blaze-builder bytestring
             bytestring-trie case-insensitive cryptohash directory either
             filepath http-date http-media http-types lifted-base microlens
             mime-types mmorph monad-control mtl network old-locale random text
             time transformers transformers-base unix unordered-containers wai
             wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/helium/airship/";
           description = "A Webmachine-inspired HTTP library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "alarmclock" = callPackage
        ({ mkDerivation, base, stdenv, stm, time, unbounded-delays }:
         mkDerivation {
           pname = "alarmclock";
           version = "0.2.0.9";
           sha256 = "606b06d8e037258cdd51a4f0aa9869b33dfa9dc34eb605c2f6a7357778bd676d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base stm time unbounded-delays ];
           executableHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/davecturner/alarmclock";
           description = "Wake up and perform an action at a certain time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "alex" = callPackage
        ({ mkDerivation, array, base, containers, directory, happy
         , QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "alex";
           version = "3.1.7";
           sha256 = "89a1a13da6ccbeb006488d9574382e891cf7c0567752b330cc8616d748bf28d1";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array base containers directory QuickCheck
           ];
           executableToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/alex/";
           description = "Alex is a tool for generating lexical analysers in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "amazonka" = callPackage
        ({ mkDerivation, amazonka-core, base, bytestring, conduit
         , conduit-extra, directory, exceptions, http-conduit, ini, mmorph
         , monad-control, mtl, resourcet, retry, stdenv, text, time
         , transformers, transformers-base, transformers-compat
         }:
         mkDerivation {
           pname = "amazonka";
           version = "1.4.3";
           sha256 = "18aa7816d755df58a824fc252d34cb1f81c6cba2ca2a7194c3a3f0d630c26686";
           libraryHaskellDepends = [
             amazonka-core base bytestring conduit conduit-extra directory
             exceptions http-conduit ini mmorph monad-control mtl resourcet
             retry text time transformers transformers-base transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Comprehensive Amazon Web Services SDK";
           license = "unknown";
         }) {};
      "amazonka-apigateway" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-apigateway";
           version = "1.4.3";
           sha256 = "74fe95daa465255ad2a49f3f0b78242c5e1ec33d81d0e9dfffa833324894d948";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon API Gateway SDK";
           license = "unknown";
         }) {};
      "amazonka-autoscaling" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-autoscaling";
           version = "1.4.3";
           sha256 = "4a47502b75b54cae3ab3da1792f5862a1e726e551d25bc0ba54f7854a66fa3df";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Auto Scaling SDK";
           license = "unknown";
         }) {};
      "amazonka-certificatemanager" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-certificatemanager";
           version = "1.4.3";
           sha256 = "d1228f95581d90f53a29dba53c1d7a1d0eb7439e278c4c5aca70af01f3e30d55";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Certificate Manager SDK";
           license = "unknown";
         }) {};
      "amazonka-cloudformation" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudformation";
           version = "1.4.3";
           sha256 = "3b2069debd35ddfd08af2281902d7c063b267fd2a23b71057321cd2e55cd7690";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudFormation SDK";
           license = "unknown";
         }) {};
      "amazonka-cloudfront" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudfront";
           version = "1.4.3";
           sha256 = "5241ccb0d39cc055f97eb6496835783a97de0ce0b33c765a1325d01119abecbe";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudFront SDK";
           license = "unknown";
         }) {};
      "amazonka-cloudhsm" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudhsm";
           version = "1.4.3";
           sha256 = "6848989619b58c75fa1d72d122e96c621b881bf4c376b9325eeb54c8c3200c43";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudHSM SDK";
           license = "unknown";
         }) {};
      "amazonka-cloudsearch" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudsearch";
           version = "1.4.3";
           sha256 = "7126175d24355afa678c9dd59400fd1b1a40c18240d96de88bd831b0099c0c26";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudSearch SDK";
           license = "unknown";
         }) {};
      "amazonka-cloudsearch-domains" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudsearch-domains";
           version = "1.4.3";
           sha256 = "4416cb88845bd27c845ecac50029e7721f3d13d26d24ab6c9c571b5c2c543f7d";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudSearch Domain SDK";
           license = "unknown";
         }) {};
      "amazonka-cloudtrail" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudtrail";
           version = "1.4.3";
           sha256 = "04ea4c78e0d73f71e1144eb5a357e1e6bce16109453ab30c31d8e7a9ae77fa6f";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudTrail SDK";
           license = "unknown";
         }) {};
      "amazonka-cloudwatch" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudwatch";
           version = "1.4.3";
           sha256 = "98df67a18bfdf4c00736f6be41576877f8191ac936ab2f5666b160cb80c22d5f";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudWatch SDK";
           license = "unknown";
         }) {};
      "amazonka-cloudwatch-events" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudwatch-events";
           version = "1.4.3";
           sha256 = "fb839e3e4c402151e138b1d69356600f2d378d53631a3616b6228f620713df56";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudWatch Events SDK";
           license = "unknown";
         }) {};
      "amazonka-cloudwatch-logs" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudwatch-logs";
           version = "1.4.3";
           sha256 = "de201710b2d594519b1c9d8b20fab92e1a0f4e777e5c05ed1bd32c91ae260161";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudWatch Logs SDK";
           license = "unknown";
         }) {};
      "amazonka-codecommit" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-codecommit";
           version = "1.4.3";
           sha256 = "fe8d033203bccb7c8c7242a063a814cdbb8a22fb4a95e5fa4f01b200d547966b";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CodeCommit SDK";
           license = "unknown";
         }) {};
      "amazonka-codedeploy" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-codedeploy";
           version = "1.4.3";
           sha256 = "d216d3af7472428fecab9763e65e2f2ea412dfaaf8debbbe5e37ab158c5392d9";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CodeDeploy SDK";
           license = "unknown";
         }) {};
      "amazonka-codepipeline" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-codepipeline";
           version = "1.4.3";
           sha256 = "2422824f998a0808151310c88c780bfa411a0f56966f93f614694f4dd526fdb1";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CodePipeline SDK";
           license = "unknown";
         }) {};
      "amazonka-cognito-identity" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cognito-identity";
           version = "1.4.3";
           sha256 = "a45aa18f815e75da5e928ec8dfe7ed827394b0b1f4654bf059fe1f3897bfb232";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Cognito Identity SDK";
           license = "unknown";
         }) {};
      "amazonka-cognito-idp" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cognito-idp";
           version = "1.4.3";
           sha256 = "a7c23b78acf5ca6701540bd74bb5e20b007acbce0bf97905083e2e5dcab940e2";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Cognito Identity Provider SDK";
           license = "unknown";
         }) {};
      "amazonka-cognito-sync" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cognito-sync";
           version = "1.4.3";
           sha256 = "51a484d6dd44e9d6f9506bd8d97f04ccfa48a04e79aadb193b8644e17a696be7";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Cognito Sync SDK";
           license = "unknown";
         }) {};
      "amazonka-config" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-config";
           version = "1.4.3";
           sha256 = "d9c105b20e1269c55a59180ef61f040315643f873c0075b8b95e84723508e266";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Config SDK";
           license = "unknown";
         }) {};
      "amazonka-core" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bifunctors, bytestring
         , case-insensitive, conduit, conduit-extra, cryptonite, deepseq
         , exceptions, hashable, http-conduit, http-types, lens, memory, mtl
         , resourcet, scientific, semigroups, stdenv, tagged, text, time
         , transformers, transformers-compat, unordered-containers
         , xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "amazonka-core";
           version = "1.4.3";
           sha256 = "8270e26104bb0cbc7654d3522dce631c9804b433ec9ff5a2a0c7f844938eead0";
           revision = "2";
           editedCabalFile = "1n1vkjghck13drcbdm9k2yblfjzw0zfrqirznasal3wydzk3awf6";
           libraryHaskellDepends = [
             aeson attoparsec base bifunctors bytestring case-insensitive
             conduit conduit-extra cryptonite deepseq exceptions hashable
             http-conduit http-types lens memory mtl resourcet scientific
             semigroups tagged text time transformers transformers-compat
             unordered-containers xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Core data types and functionality for Amazonka libraries";
           license = "unknown";
         }) {};
      "amazonka-datapipeline" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-datapipeline";
           version = "1.4.3";
           sha256 = "04bb3873f247a6fc75b5f0a7822e28c1d212765b7918d490474b6bb0faf3d781";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Data Pipeline SDK";
           license = "unknown";
         }) {};
      "amazonka-devicefarm" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-devicefarm";
           version = "1.4.3";
           sha256 = "36ac89a5166ac8bf89d628b43ea7bd88e6624e9fedd6e7de2a7be5501a3d35cd";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Device Farm SDK";
           license = "unknown";
         }) {};
      "amazonka-directconnect" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-directconnect";
           version = "1.4.3";
           sha256 = "96f67da0a8afb2013c84fc5650e700736711105b7924ce8f288f7f61ba133c7d";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Direct Connect SDK";
           license = "unknown";
         }) {};
      "amazonka-dms" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-dms";
           version = "1.4.3";
           sha256 = "1714e72bc22176cab07ab9932cec4050e816c450afc3bf6a2810f3318066f8ff";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Database Migration Service SDK";
           license = "unknown";
         }) {};
      "amazonka-ds" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ds";
           version = "1.4.3";
           sha256 = "d3433eb5c52093f2274055595174bda99e32eb3a4c4760811c22f9c0bbcfe700";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Directory Service SDK";
           license = "unknown";
         }) {};
      "amazonka-dynamodb" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-dynamodb";
           version = "1.4.3";
           sha256 = "309d695e84fcf5fb2234031b5c650ae2d72ee9bb91bee1cc2522b95228e4d652";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon DynamoDB SDK";
           license = "unknown";
         }) {};
      "amazonka-dynamodb-streams" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-dynamodb-streams";
           version = "1.4.3";
           sha256 = "61cc56bdbd831438d1daa1149106df1b1f5f0d8f6d8b20cbafcb4ad2869206c5";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon DynamoDB Streams SDK";
           license = "unknown";
         }) {};
      "amazonka-ec2" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ec2";
           version = "1.4.3";
           sha256 = "caeb98e701196d9350d44cd6b1f7b1f5790cc1c4bbbb30dd70824d025c7cc1b7";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic Compute Cloud SDK";
           license = "unknown";
         }) {};
      "amazonka-ecr" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ecr";
           version = "1.4.3";
           sha256 = "e9c1475c8eb4b89cafc7df8f2e8d6c4cff16b349db5407d014ef49726d7b1861";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon EC2 Container Registry SDK";
           license = "unknown";
         }) {};
      "amazonka-ecs" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ecs";
           version = "1.4.3";
           sha256 = "4c10a7da68605f7a9656714cb134cf47d920b2aa02f0c38e0c06f8ddf9152471";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon EC2 Container Service SDK";
           license = "unknown";
         }) {};
      "amazonka-efs" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-efs";
           version = "1.4.3";
           sha256 = "c65054594451e774e1e9ad1fbfbf8a724dac86cbd4efa01aa5119d3d9f7a8301";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic File System SDK";
           license = "unknown";
         }) {};
      "amazonka-elasticache" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-elasticache";
           version = "1.4.3";
           sha256 = "673912e1f5db5762dd00da1312cc09e2265da0ac6a35d92ee2bbb6e88230f879";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon ElastiCache SDK";
           license = "unknown";
         }) {};
      "amazonka-elasticbeanstalk" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-elasticbeanstalk";
           version = "1.4.3";
           sha256 = "675730e477fcf3926605dc42bf08f3fba48f7272cc63cb5c845bb16c296fbd9b";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic Beanstalk SDK";
           license = "unknown";
         }) {};
      "amazonka-elasticsearch" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-elasticsearch";
           version = "1.4.3";
           sha256 = "9e7b1911946ce7a0df8c7ef13277f32a06a26e2a7a6334b3d1514cf089d014d5";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elasticsearch Service SDK";
           license = "unknown";
         }) {};
      "amazonka-elastictranscoder" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-elastictranscoder";
           version = "1.4.3";
           sha256 = "9a5d534e54f5421a37103b4117d07bcf16eb241a0bd153457037f1f83ccb8b2f";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic Transcoder SDK";
           license = "unknown";
         }) {};
      "amazonka-elb" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-elb";
           version = "1.4.3";
           sha256 = "81fae99dff50a8feb54150afdb5ef6a06b1be57b6d46957e37c503a730bd2d56";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic Load Balancing SDK";
           license = "unknown";
         }) {};
      "amazonka-emr" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-emr";
           version = "1.4.3";
           sha256 = "b31ab69a06ea6ba585a89c133a78ed0ea2cb89faa9e2a04b6d12228167fa8e75";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic MapReduce SDK";
           license = "unknown";
         }) {};
      "amazonka-gamelift" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-gamelift";
           version = "1.4.3";
           sha256 = "c7fa8f5e3d83a6c1b2848676e270534dac9c8084d702abcd2edc79b603766429";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon GameLift SDK";
           license = "unknown";
         }) {};
      "amazonka-glacier" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-glacier";
           version = "1.4.3";
           sha256 = "dddfa10e13eceba289a534fa6f7accd2969c8c6cc06b967e5bf35604c6738bec";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Glacier SDK";
           license = "unknown";
         }) {};
      "amazonka-iam" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-iam";
           version = "1.4.3";
           sha256 = "4208dcc7e9f4a5c351246d4c33f7215079dad2325e0e894186284d86c8243734";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Identity and Access Management SDK";
           license = "unknown";
         }) {};
      "amazonka-importexport" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-importexport";
           version = "1.4.3";
           sha256 = "ce555f40f865c0ef4680b6fd2344927f86f44bc04cb4f97d8bdd47c18de3ca64";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Import/Export SDK";
           license = "unknown";
         }) {};
      "amazonka-inspector" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-inspector";
           version = "1.4.3";
           sha256 = "0f54b9b7c5bf3317390e86e3351806116fc55dce8614f26c79af7bfed1bf28c8";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Inspector SDK";
           license = "unknown";
         }) {};
      "amazonka-iot" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-iot";
           version = "1.4.3";
           sha256 = "4b9f17daddab2f04f60d84109e8c78077bd1feae610f0053fbe7edf0317c3e91";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon IoT SDK";
           license = "unknown";
         }) {};
      "amazonka-iot-dataplane" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-iot-dataplane";
           version = "1.4.3";
           sha256 = "2c3ef08bc6a294591f029a7189a35acf5cbd9bc332f1f3f8f94cca0a8e9a5b96";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon IoT Data Plane SDK";
           license = "unknown";
         }) {};
      "amazonka-kinesis" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-kinesis";
           version = "1.4.3";
           sha256 = "6b9f597488893470ef9914857ec3e593aea3a41b2c69794d95065ce3e332e812";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Kinesis SDK";
           license = "unknown";
         }) {};
      "amazonka-kinesis-firehose" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-kinesis-firehose";
           version = "1.4.3";
           sha256 = "2add7d8f8b27cbc339c473244007683d7ceab6caa00258c9030ed8983d16853a";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Kinesis Firehose SDK";
           license = "unknown";
         }) {};
      "amazonka-kms" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-kms";
           version = "1.4.3";
           sha256 = "933a098970511c03b72698138329350ac722dd84dbd3fc76b49e2eb5504a73ed";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Key Management Service SDK";
           license = "unknown";
         }) {};
      "amazonka-lambda" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-lambda";
           version = "1.4.3";
           sha256 = "4ed68d68eaa379b41f0ccf4ef82981687bd029fea84b544a0137ce0408d01787";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Lambda SDK";
           license = "unknown";
         }) {};
      "amazonka-marketplace-analytics" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-marketplace-analytics";
           version = "1.4.3";
           sha256 = "cca9bd6001747c33714601b7b9cc85623e179e99f67e05e04d38be340d80dec7";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Marketplace Commerce Analytics SDK";
           license = "unknown";
         }) {};
      "amazonka-marketplace-metering" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-marketplace-metering";
           version = "1.4.3";
           sha256 = "577270b944784ea27d8cc0e911757c5a5fe18657892d2862e5e20e3e64b37a21";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Marketplace Metering SDK";
           license = "unknown";
         }) {};
      "amazonka-ml" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ml";
           version = "1.4.3";
           sha256 = "dd5731a2df42ecb1d07968436ed27c1a72b61a3e1b5a3b7c8c04d38ed9ada4dd";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Machine Learning SDK";
           license = "unknown";
         }) {};
      "amazonka-opsworks" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-opsworks";
           version = "1.4.3";
           sha256 = "8a3844b702d7d68e7f26b8a886e3c4ca3984b6f2522c13f0e7c5174f2e8ef273";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon OpsWorks SDK";
           license = "unknown";
         }) {};
      "amazonka-rds" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-rds";
           version = "1.4.3";
           sha256 = "4d58e361bdc88245b71e718edace7f2a360fecb7bf243a61d0eac1424abf2acf";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Relational Database Service SDK";
           license = "unknown";
         }) {};
      "amazonka-redshift" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-redshift";
           version = "1.4.3";
           sha256 = "af9d7957c68c0e66cb1301b611bc196adaead8eb2b88210d369dc01ed377fe68";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Redshift SDK";
           license = "unknown";
         }) {};
      "amazonka-route53" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-route53";
           version = "1.4.3";
           sha256 = "a7fb42486f54b7e1b858edc907a57be656b20a2da8a08c982e3d8bf0c592b0cf";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Route 53 SDK";
           license = "unknown";
         }) {};
      "amazonka-route53-domains" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-route53-domains";
           version = "1.4.3";
           sha256 = "1a773fc3c18faa770874fc708ff0cb6b7150a09836c3a9c6332b9d222a4fe18b";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Route 53 Domains SDK";
           license = "unknown";
         }) {};
      "amazonka-s3" = callPackage
        ({ mkDerivation, amazonka-core, base, lens, stdenv, text }:
         mkDerivation {
           pname = "amazonka-s3";
           version = "1.4.3";
           sha256 = "9ed6c9e7675e99a545a84ac2c979a7542ecd898dd6e4c2fbbbba2c4a40d8fc50";
           libraryHaskellDepends = [ amazonka-core base lens text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Storage Service SDK";
           license = "unknown";
         }) {};
      "amazonka-sdb" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-sdb";
           version = "1.4.3";
           sha256 = "7fac8b39c2210e09d1ef15f7c964b64397c1b6165638c92f4069be8002ebf1d3";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon SimpleDB SDK";
           license = "unknown";
         }) {};
      "amazonka-ses" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ses";
           version = "1.4.3";
           sha256 = "2ccab07f3c08d9145c2bc936048e5f973532871f1a366e0111a2bf70973d96a2";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Email Service SDK";
           license = "unknown";
         }) {};
      "amazonka-sns" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-sns";
           version = "1.4.3";
           sha256 = "681335a9d385af666d5c895b982fb757fa65862a0047d3a498d544f6d136544a";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Notification Service SDK";
           license = "unknown";
         }) {};
      "amazonka-sqs" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-sqs";
           version = "1.4.3";
           sha256 = "2e94eaab5fc5c9a4471bfe834ccf975c1776b268cb291281740db62148825ece";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Queue Service SDK";
           license = "unknown";
         }) {};
      "amazonka-ssm" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ssm";
           version = "1.4.3";
           sha256 = "260a3e4178f48f4df2bb2574809ac7c81c7208fa9d77225c6101844bb21c38c1";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Systems Management Service SDK";
           license = "unknown";
         }) {};
      "amazonka-storagegateway" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-storagegateway";
           version = "1.4.3";
           sha256 = "5522fa5aa0bfed529b5b85385d2000aedf5b1c8fb5400bf280d4b131275b7b47";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Storage Gateway SDK";
           license = "unknown";
         }) {};
      "amazonka-sts" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-sts";
           version = "1.4.3";
           sha256 = "d36e38218fe83a696c13dfef9362028cb23f73b96fb468bb9b809ef69598606c";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Security Token Service SDK";
           license = "unknown";
         }) {};
      "amazonka-support" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-support";
           version = "1.4.3";
           sha256 = "d9acfb0d35f3c987dd534c0a59959cef44825facfc4665ba20bf286e4023d70f";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Support SDK";
           license = "unknown";
         }) {};
      "amazonka-swf" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-swf";
           version = "1.4.3";
           sha256 = "0443d02c23d93eca09f6b91ad7aa1e32ab02e6b92e0bb6595ab65ce5f13ab469";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Workflow Service SDK";
           license = "unknown";
         }) {};
      "amazonka-test" = callPackage
        ({ mkDerivation, aeson, amazonka-core, base, bifunctors, bytestring
         , case-insensitive, conduit, conduit-extra, groom, http-client
         , http-types, process, resourcet, stdenv, tasty, tasty-hunit
         , template-haskell, temporary, text, time, unordered-containers
         , yaml
         }:
         mkDerivation {
           pname = "amazonka-test";
           version = "1.4.3";
           sha256 = "10310abf1036afb3f2ea688b300d738700f780a2459a10f306b1bedff9019d9b";
           libraryHaskellDepends = [
             aeson amazonka-core base bifunctors bytestring case-insensitive
             conduit conduit-extra groom http-client http-types process
             resourcet tasty tasty-hunit template-haskell temporary text time
             unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Common functionality for Amazonka library test-suites";
           license = "unknown";
         }) {};
      "amazonka-waf" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-waf";
           version = "1.4.3";
           sha256 = "7e9c9d7ca82c8d1e95e7aabf696980040f8644d96c011438e06c51dd41655a85";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon WAF SDK";
           license = "unknown";
         }) {};
      "amazonka-workspaces" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-workspaces";
           version = "1.4.3";
           sha256 = "61828d17aec286062dd453e69b730e180a651f59387c7355872d1cae47805d78";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon WorkSpaces SDK";
           license = "unknown";
         }) {};
      "amqp" = callPackage
        ({ mkDerivation, base, binary, bytestring, clock, connection
         , containers, data-binary-ieee754, monad-control, network
         , network-uri, split, stdenv, stm, text, vector, xml
         }:
         mkDerivation {
           pname = "amqp";
           version = "0.13.1";
           sha256 = "3ea6523228f1c2bf0622d52ebf73c9e3c2e2af637a7ea29908c07ff9fa0dd4ae";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring clock connection containers
             data-binary-ieee754 monad-control network network-uri split stm
             text vector
           ];
           executableHaskellDepends = [ base containers xml ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hreinhardt/amqp";
           description = "Client library for AMQP servers (currently only RabbitMQ)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "angel" = callPackage
        ({ mkDerivation, base, configurator, containers, mtl, old-locale
         , optparse-applicative, process, stdenv, stm, text, time
         , transformers, unix, unordered-containers
         }:
         mkDerivation {
           pname = "angel";
           version = "0.6.2";
           sha256 = "caff0b06481dc3858b059e2faa12afdad66152c0341020dc53cceacf28e2e358";
           revision = "1";
           editedCabalFile = "0gx208vshdw6bm2id4a5rcacdw44n5ia0q6jmjhk1qfx4s2krp5q";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base configurator containers mtl old-locale optparse-applicative
             process stm text time transformers unix unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/MichaelXavier/Angel";
           description = "Process management and supervision daemon";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "annotated-wl-pprint" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "annotated-wl-pprint";
           version = "0.7.0";
           sha256 = "0c262d7fe13a9a50216438ec882c13e25f31236b886a5692e3c35b85cd773d18";
           revision = "1";
           editedCabalFile = "138k24qxvl90l7dwdw1b3w36mpw93n0xi0nljblqg88pxg7jcvjx";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/david-christiansen/annotated-wl-pprint";
           description = "The Wadler/Leijen Pretty Printer, with annotation support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "anonymous-sums" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "anonymous-sums";
           version = "0.4.0.0";
           sha256 = "116626dd139f7ba57b66d790915ff21cdf09f267da16f873f396ae76aad16749";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/anonymous-sums";
           description = "Anonymous sum types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ansi-terminal" = callPackage
        ({ mkDerivation, base, colour, stdenv }:
         mkDerivation {
           pname = "ansi-terminal";
           version = "0.7.1.1";
           sha256 = "6fc87697dfff772f7fbb4fe49e29c366b184f9ad288520831a9e0b572aa554fc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base colour ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/ansi-terminal";
           description = "Simple ANSI terminal support, with Windows compatibility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ansi-wl-pprint" = callPackage
        ({ mkDerivation, ansi-terminal, base, semigroups, stdenv }:
         mkDerivation {
           pname = "ansi-wl-pprint";
           version = "0.6.8.2";
           sha256 = "a630721bd57678c3bfeb6c703f8249e434cbf85f40daceec4660fb8c6725cb3e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ ansi-terminal base semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/ansi-wl-pprint";
           description = "The Wadler/Leijen Pretty Printer for colored ANSI terminal output";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "api-field-json-th" = callPackage
        ({ mkDerivation, aeson, base, lens, split, stdenv, template-haskell
         , text
         }:
         mkDerivation {
           pname = "api-field-json-th";
           version = "0.1.0.1";
           sha256 = "88befb216037f0460950cd91960db2ba7789231b6ab829b04b2b9dd60a007626";
           libraryHaskellDepends = [
             aeson base lens split template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nakaji-dayo/api-field-json-th";
           description = "option of aeson's deriveJSON";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "apiary" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, blaze-html
         , blaze-markup, bytestring, bytestring-read, case-insensitive
         , data-default-class, exceptions, hashable, http-date, http-types
         , mime-types, monad-control, mtl, process, resourcet, stdenv
         , stringsearch, template-haskell, text, time, transformers
         , transformers-base, types-compat, unix-compat
         , unordered-containers, vault, wai, wai-extra, web-routing
         }:
         mkDerivation {
           pname = "apiary";
           version = "2.0.2";
           sha256 = "b9a08995b45d7b9bbea2239a417ce0409c5c36515cda412fdc62f8e64e9bb594";
           libraryHaskellDepends = [
             aeson base blaze-builder blaze-html blaze-markup bytestring
             bytestring-read case-insensitive data-default-class exceptions
             hashable http-date http-types mime-types monad-control mtl process
             resourcet stringsearch template-haskell text time transformers
             transformers-base types-compat unix-compat unordered-containers
             vault wai wai-extra web-routing
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/apiary";
           description = "Simple and type safe web framework that generate web API documentation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "apiary-authenticate" = callPackage
        ({ mkDerivation, apiary, apiary-session, authenticate, base
         , blaze-builder, bytestring, cereal, data-default-class
         , http-client, http-client-tls, http-types, monad-control
         , resourcet, stdenv, text, types-compat, wai, web-routing
         }:
         mkDerivation {
           pname = "apiary-authenticate";
           version = "1.4.0";
           sha256 = "40dbdb0d6799ba7091ae9b72929c7d62a74dd251b5a6e01f8979314d75dbd107";
           revision = "5";
           editedCabalFile = "0jndacr6vcnh14d7bd10v9jl2qcpzfwr223j7x1f6zza70r2p5rl";
           libraryHaskellDepends = [
             apiary apiary-session authenticate base blaze-builder bytestring
             cereal data-default-class http-client http-client-tls http-types
             monad-control resourcet text types-compat wai web-routing
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/apiary";
           description = "authenticate support for apiary web framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "apiary-clientsession" = callPackage
        ({ mkDerivation, apiary, apiary-cookie, apiary-session, base
         , bytestring, cereal, clientsession, data-default-class, stdenv
         , time, unix-compat, vault
         }:
         mkDerivation {
           pname = "apiary-clientsession";
           version = "1.4.0";
           sha256 = "a6bba1337d2ee7ded7303f2801b09b9d93cdafb93f5115328c797bef3e6126fd";
           revision = "3";
           editedCabalFile = "06kcmwm1mrvqmbl510ni2j1rdsrzhs81xsjia5wlyhn4jr4192ag";
           libraryHaskellDepends = [
             apiary apiary-cookie apiary-session base bytestring cereal
             clientsession data-default-class time unix-compat vault
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/apiary";
           description = "clientsession support for apiary web framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "apiary-cookie" = callPackage
        ({ mkDerivation, apiary, base, blaze-builder, blaze-html
         , bytestring, cookie, stdenv, time, types-compat, wai, web-routing
         }:
         mkDerivation {
           pname = "apiary-cookie";
           version = "1.4.0";
           sha256 = "3dcf4cf38377685340ec5c6ab105a0df3ba2b0a4d0d7079fc88593bd15eeeb04";
           revision = "4";
           editedCabalFile = "0qc5nzjak8zb5i3kavz7hi1qy6ywalsrgj2wrxdb53jwac76gigc";
           libraryHaskellDepends = [
             apiary base blaze-builder blaze-html bytestring cookie time
             types-compat wai web-routing
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/apiary";
           description = "Cookie support for apiary web framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "apiary-eventsource" = callPackage
        ({ mkDerivation, apiary, base, blaze-builder, stdenv, wai-extra }:
         mkDerivation {
           pname = "apiary-eventsource";
           version = "1.4.0";
           sha256 = "a7c9f566fea8501864ac194d744dfe94c0ee04d174ccb51161c4a64243bd0176";
           revision = "2";
           editedCabalFile = "15fc0hdrcic1nk62znn3dcq6dp00d0msl38kb7pdapvkpnyh1z0g";
           libraryHaskellDepends = [ apiary base blaze-builder wai-extra ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/apiary";
           description = "eventsource support for apiary web framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "apiary-logger" = callPackage
        ({ mkDerivation, apiary, base, data-default-class, fast-logger
         , lifted-base, monad-control, monad-logger, stdenv, transformers
         , transformers-base, types-compat
         }:
         mkDerivation {
           pname = "apiary-logger";
           version = "1.4.0";
           sha256 = "884cf856a25685db351f76ab2df43126456cfe4c1a8640b72ac055623518c05d";
           revision = "4";
           editedCabalFile = "1qs3fxaiybyb4g9d4w393yxwsxr4b6wzg5va7qmlqpcavr9l1224";
           libraryHaskellDepends = [
             apiary base data-default-class fast-logger lifted-base
             monad-control monad-logger transformers transformers-base
             types-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/apiary";
           description = "fast-logger support for apiary web framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "apiary-memcached" = callPackage
        ({ mkDerivation, apiary, base, bytestring, data-default-class
         , memcached-binary, monad-control, stdenv, text, transformers
         , types-compat
         }:
         mkDerivation {
           pname = "apiary-memcached";
           version = "1.4.0";
           sha256 = "7e3d225c9ac983d798b88a1e8ebc0221852174d0f0765daa8e9e20e6d79193e7";
           revision = "2";
           editedCabalFile = "1rqxpw0rhzqf678jpn7vdircp96q86f0j2w7id2a4bpgmixhfy9s";
           libraryHaskellDepends = [
             apiary base bytestring data-default-class memcached-binary
             monad-control text transformers types-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/apiary";
           description = "memcached client for apiary web framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "apiary-mongoDB" = callPackage
        ({ mkDerivation, apiary, base, bson, data-default-class
         , lifted-base, monad-control, mongoDB, resource-pool, stdenv, text
         , time, transformers, types-compat
         }:
         mkDerivation {
           pname = "apiary-mongoDB";
           version = "1.4.0";
           sha256 = "8d97a32e5d55334d1a4f5d318d6a590a74c0b8ad6c84877956728318b89f36eb";
           revision = "2";
           editedCabalFile = "1pk0axkr5zrlbyqskznh050ahvpnccdpa0ixfn3i5sw26nnva4ny";
           libraryHaskellDepends = [
             apiary base bson data-default-class lifted-base monad-control
             mongoDB resource-pool text time transformers types-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/apiary";
           description = "mongoDB support for apiary web framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "apiary-persistent" = callPackage
        ({ mkDerivation, apiary, apiary-logger, base, monad-control
         , monad-logger, persistent, resource-pool, resourcet, stdenv
         , transformers, transformers-base, types-compat, web-routing
         }:
         mkDerivation {
           pname = "apiary-persistent";
           version = "1.4.0";
           sha256 = "09c6c5730d6ad65b544e994f2d73f5412aae92aac093fd308234c8bea68f4a02";
           revision = "3";
           editedCabalFile = "17i3l8aj2k1hzlmyf2h4jl5savbrdvnvz2i8riwcmwfqgnmcfdc2";
           libraryHaskellDepends = [
             apiary apiary-logger base monad-control monad-logger persistent
             resource-pool resourcet transformers transformers-base types-compat
             web-routing
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/apiary";
           description = "persistent support for apiary web framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "apiary-session" = callPackage
        ({ mkDerivation, apiary, base, stdenv, types-compat, wai
         , web-routing
         }:
         mkDerivation {
           pname = "apiary-session";
           version = "1.4.0";
           sha256 = "434cd8b985a95bd4c72dde7ac521768d1c1402f3cc8b4835dded6736bdbcd74a";
           revision = "3";
           editedCabalFile = "04yrlp26dbhhybqvviajmd85vrcdbscmbw4nmag32wfnz5xdb0qr";
           libraryHaskellDepends = [
             apiary base types-compat wai web-routing
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/apiary";
           description = "session support for apiary web framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "apiary-websockets" = callPackage
        ({ mkDerivation, apiary, base, stdenv, wai-websockets, web-routing
         , websockets
         }:
         mkDerivation {
           pname = "apiary-websockets";
           version = "1.4.0";
           sha256 = "e15e7e9281b72d9fa2419c1d3dbbf0c11e08dc139fe0d0242a5612a181ff545b";
           revision = "2";
           editedCabalFile = "1s8mpk1h6a6yxmwivclawwn20s2zs094cvbphl8ymil8mm505n3j";
           libraryHaskellDepends = [
             apiary base wai-websockets web-routing websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/apiary";
           description = "websockets support for apiary web framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "app-settings" = callPackage
        ({ mkDerivation, base, containers, directory, mtl, parsec, stdenv
         , text
         }:
         mkDerivation {
           pname = "app-settings";
           version = "0.2.0.9";
           sha256 = "ee844c5ed2847539c84d13d81e827fd2a4f0f9b0b53308f65d24244a027e9024";
           libraryHaskellDepends = [
             base containers directory mtl parsec text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/emmanueltouzery/app-settings";
           description = "A library to manage application settings (INI file-like)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "appar" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "appar";
           version = "0.1.4";
           sha256 = "58ea66abe4dd502d2fc01eecdb0828d5e214704a3c1b33b1f8b33974644c4b26";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "A simple applicative parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "apply-refact" = callPackage
        ({ mkDerivation, base, containers, directory, filemanip, filepath
         , ghc, ghc-exactprint, mtl, optparse-applicative, process, refact
         , stdenv, syb, temporary, transformers, unix-compat
         }:
         mkDerivation {
           pname = "apply-refact";
           version = "0.2.0.0";
           sha256 = "f74abeae9f6ad6e3ab5b00b108e99c4351ff26f691f5a0c1d3662b2b18648d5c";
           revision = "2";
           editedCabalFile = "1incnljf58n65g7iip3hnw337w5wf590l76gi9hrhpnqfk94klwx";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers directory filemanip ghc ghc-exactprint mtl process
             refact syb temporary transformers unix-compat
           ];
           executableHaskellDepends = [
             base containers directory filemanip filepath ghc ghc-exactprint mtl
             optparse-applicative process refact syb temporary transformers
             unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Perform refactorings specified by the refact library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "approximate" = callPackage
        ({ mkDerivation, base, binary, bytes, cereal, comonad, deepseq
         , ghc-prim, hashable, hashable-extras, lens, log-domain, pointed
         , safecopy, semigroupoids, semigroups, stdenv, vector
         }:
         mkDerivation {
           pname = "approximate";
           version = "0.2.2.3";
           sha256 = "20fdc16cbd36bd592c6e2c5b6bd38866e8c3eb010e71607e6f609e6355302bac";
           libraryHaskellDepends = [
             base binary bytes cereal comonad deepseq ghc-prim hashable
             hashable-extras lens log-domain pointed safecopy semigroupoids
             semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/analytics/approximate/";
           description = "Approximate discrete values and numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "arbtt" = callPackage
        ({ mkDerivation, aeson, array, base, binary, bytestring
         , bytestring-progress, containers, deepseq, directory, filepath
         , libXScrnSaver, parsec, pcre-light, stdenv, strict
         , terminal-progress-bar, time, transformers, unix, utf8-string, X11
         }:
         mkDerivation {
           pname = "arbtt";
           version = "0.9.0.11";
           sha256 = "9133fb9cc88568c3baec403e674e95cfe0ebedc1ff974499d97e93d916bdefef";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson array base binary bytestring bytestring-progress containers
             deepseq directory filepath parsec pcre-light strict
             terminal-progress-bar time transformers unix utf8-string X11
           ];
           executableSystemDepends = [ libXScrnSaver ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://arbtt.nomeata.de/";
           description = "Automatic Rule-Based Time Tracker";
           license = "GPL";
         }) {};
      "arithmoi" = callPackage
        ({ mkDerivation, array, base, containers, ghc-prim, integer-gmp
         , mtl, random, semigroups, stdenv
         }:
         mkDerivation {
           pname = "arithmoi";
           version = "0.4.3.0";
           sha256 = "daa3343d4be19d0a8574c542c9188f6f3075098c86c69d3bc66acd5091d5d196";
           configureFlags = [ "-f-llvm" ];
           libraryHaskellDepends = [
             array base containers ghc-prim integer-gmp mtl random semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cartazio/arithmoi";
           description = "Efficient basic number-theoretic functions. Primes, powers, integer logarithms.";
           license = stdenv.lib.licenses.mit;
         }) {};
      "arrow-list" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "arrow-list";
           version = "0.7";
           sha256 = "33f836f23648aa2cea11533f7a9941127c397eecdca105b2084dded9e039d5d8";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/silkapp/arrow-list";
           description = "List arrows for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ascii-progress" = callPackage
        ({ mkDerivation, async, base, concurrent-output, data-default
         , stdenv, time
         }:
         mkDerivation {
           pname = "ascii-progress";
           version = "0.3.3.0";
           sha256 = "7e3fa6b80c09a83c9ba8a0644ef304ca92d65b76383b8dd023ff9f89ebec913e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base concurrent-output data-default time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-ascii-progress";
           description = "A simple progress bar for the console";
           license = stdenv.lib.licenses.mit;
         }) {};
      "asciidiagram" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , FontyFruity, JuicyPixels, lens, linear, mtl, optparse-applicative
         , rasterific-svg, stdenv, svg-tree, text, vector
         }:
         mkDerivation {
           pname = "asciidiagram";
           version = "1.3.3";
           sha256 = "694948f5f408aa7dfcab17ffefb74e413f1d3dacf2c523bfbf9ecaf972645f18";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers FontyFruity JuicyPixels lens linear mtl
             rasterific-svg svg-tree text vector
           ];
           executableHaskellDepends = [
             base bytestring directory filepath FontyFruity JuicyPixels
             optparse-applicative rasterific-svg svg-tree text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty rendering of Ascii diagram into svg or png";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "asn1-encoding" = callPackage
        ({ mkDerivation, asn1-types, base, bytestring, hourglass, stdenv }:
         mkDerivation {
           pname = "asn1-encoding";
           version = "0.9.4";
           sha256 = "a78058f7db08fbd72f2b40c72af324a4d31ea95d70b4bfa372107b980394dde8";
           libraryHaskellDepends = [ asn1-types base bytestring hourglass ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-asn1";
           description = "ASN1 data reader and writer in RAW, BER and DER forms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "asn1-parse" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
         , stdenv
         }:
         mkDerivation {
           pname = "asn1-parse";
           version = "0.9.4";
           sha256 = "c6a328f570c69db73f8d2416f9251e8a03753f90d5d19e76cbe69509a3ceb708";
           libraryHaskellDepends = [
             asn1-encoding asn1-types base bytestring
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-asn1";
           description = "Simple monadic parser for ASN1 stream types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "asn1-types" = callPackage
        ({ mkDerivation, base, bytestring, hourglass, memory, stdenv }:
         mkDerivation {
           pname = "asn1-types";
           version = "0.3.2";
           sha256 = "0c571fff4a10559c6a630d4851ba3cdf1d558185ce3dcfca1136f9883d647217";
           libraryHaskellDepends = [ base bytestring hourglass memory ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-asn1-types";
           description = "ASN.1 types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "async" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "async";
           version = "2.1.1";
           sha256 = "24134b36921f9874abb73be90886b4c23a67a9b4990f2d8e32d08dbfa5f74f90";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/async";
           description = "Run IO operations asynchronously and wait for their results";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "async-dejafu" = callPackage
        ({ mkDerivation, base, dejafu, exceptions, stdenv }:
         mkDerivation {
           pname = "async-dejafu";
           version = "0.1.2.2";
           sha256 = "ff459f69420e8ef8c26d5c7f2158d49501d1ee06a4c3a664b8826fb90f517db0";
           libraryHaskellDepends = [ base dejafu exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Run MonadConc operations asynchronously and wait for their results";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "atndapi" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, data-default
         , http-conduit, http-types, lifted-base, monad-control
         , monad-logger, mtl, parsec, resourcet, stdenv, text, time
         , transformers
         }:
         mkDerivation {
           pname = "atndapi";
           version = "0.1.1.0";
           sha256 = "1c4be357e322c13dd0197252fca5a2eff6ebdd913920e2a9ae66e295aadbfeda";
           libraryHaskellDepends = [
             aeson base bytestring conduit data-default http-conduit http-types
             lifted-base monad-control monad-logger mtl parsec resourcet text
             time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ynishi/atndapi#readme";
           description = "An interface of ATND API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "atom-conduit" = callPackage
        ({ mkDerivation, base, conduit, conduit-parse, exceptions, foldl
         , lens-simple, mono-traversable, parsers, stdenv, text, time
         , timerep, uri-bytestring, xml-conduit, xml-conduit-parse
         , xml-types
         }:
         mkDerivation {
           pname = "atom-conduit";
           version = "0.3.1.1";
           sha256 = "d0603a5a726fade01a9fe6c5859d81c6f53d8770dc0db8b889e2717e63a3d2b3";
           revision = "1";
           editedCabalFile = "1b8xihp2rhifnbcz61yik7lsn1qvh3426adnfns8wh62w7m4bg4f";
           libraryHaskellDepends = [
             base conduit conduit-parse exceptions foldl lens-simple
             mono-traversable parsers text time timerep uri-bytestring
             xml-conduit xml-conduit-parse xml-types
           ];
           doHaddock = false;
           doCheck = false;
           description = "Streaming parser/renderer for the Atom 1.0 standard (RFC 4287).";
           license = "unknown";
         }) {};
      "atomic-primops" = callPackage
        ({ mkDerivation, base, ghc-prim, primitive, stdenv }:
         mkDerivation {
           pname = "atomic-primops";
           version = "0.8.0.4";
           sha256 = "47e1e393848c0538aa1733a90a63bd08a00915ec7499d90014aaecc792db9864";
           libraryHaskellDepends = [ base ghc-prim primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "A safe approach to CAS and other atomic ops in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "atomic-write" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, stdenv
         , temporary, text, unix-compat
         }:
         mkDerivation {
           pname = "atomic-write";
           version = "0.2.0.5";
           sha256 = "dbc7b4c31c734ad12d8f6c05b5d1384ee57f50ad8ff1a703d560b39e2f0458c5";
           libraryHaskellDepends = [
             base bytestring directory filepath temporary text unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/atomic-write";
           description = "Atomically write to a file";
           license = stdenv.lib.licenses.mit;
         }) {};
      "attoparsec" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq, fail
         , scientific, semigroups, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "attoparsec";
           version = "0.13.1.0";
           sha256 = "52dc74d4955e457ce4f76f5c9d6dba05c1d07e2cd2a542d6251c6dbc66ce3f64";
           revision = "1";
           editedCabalFile = "1x3fmx33cv27j00gsdk5fn82kn9pq740wfqhhnqf14s7hadd57m3";
           libraryHaskellDepends = [
             array base bytestring containers deepseq fail scientific semigroups
             text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/attoparsec";
           description = "Fast combinator parsing for bytestrings and text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-enumerator" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, enumerator, stdenv
         , text
         }:
         mkDerivation {
           pname = "attoparsec-enumerator";
           version = "0.3.4";
           sha256 = "be95a763ebbec5529f486e62e49ce6709f14e688138fc36cff5590613690f588";
           libraryHaskellDepends = [
             attoparsec base bytestring enumerator text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/attoparsec-enumerator/";
           description = "Pass input from an enumerator to an Attoparsec parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "attoparsec-expr" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv }:
         mkDerivation {
           pname = "attoparsec-expr";
           version = "0.1.1.2";
           sha256 = "8d4cd436112ce9007d2831776d4c5102a5322c48993229d2d41e259c07bb457c";
           libraryHaskellDepends = [ attoparsec base ];
           doHaddock = false;
           doCheck = false;
           description = "Port of parsec's expression parser to attoparsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-trans" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, transformers }:
         mkDerivation {
           pname = "attoparsec-trans";
           version = "0.1.1.0";
           sha256 = "472999fbb9ba157b4cdabb3fd933b9e3c8414879843963ab1c21e708e1a14b53";
           libraryHaskellDepends = [ attoparsec base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/srijs/haskell-attoparsec-trans";
           description = "Interleaved effects for attoparsec parsers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "authenticate" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
         , case-insensitive, conduit, containers, http-conduit, http-types
         , monad-control, network-uri, resourcet, stdenv, tagstream-conduit
         , text, transformers, unordered-containers, xml-conduit
         }:
         mkDerivation {
           pname = "authenticate";
           version = "1.3.3.2";
           sha256 = "a65ff7791e646ea847fc6b8369addeecf6d2c3055a0b7ebe1421881103656e30";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-builder bytestring case-insensitive
             conduit containers http-conduit http-types monad-control
             network-uri resourcet tagstream-conduit text transformers
             unordered-containers xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/authenticate";
           description = "Authentication methods for Haskell web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "authenticate-oauth" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
         , crypto-pubkey-types, data-default, http-client, http-types
         , random, RSA, SHA, stdenv, time, transformers
         }:
         mkDerivation {
           pname = "authenticate-oauth";
           version = "1.5.1.2";
           sha256 = "294279ff1a4e746eedb5186d8230c34b2ffa770f020d30341424a59fedb76a33";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder bytestring crypto-pubkey-types
             data-default http-client http-types random RSA SHA time
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/authenticate";
           description = "Library to authenticate with OAuth for Haskell web applications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "auto" = callPackage
        ({ mkDerivation, base, base-orphans, bytestring, cereal, containers
         , deepseq, MonadRandom, profunctors, random, semigroups, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "auto";
           version = "0.4.3.0";
           sha256 = "c836cdc107b3d131129340b74285c55b8d65dc217e3c6f0a79bdc742a0062c8e";
           libraryHaskellDepends = [
             base base-orphans bytestring cereal containers deepseq MonadRandom
             profunctors random semigroups transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/auto";
           description = "Denotative, locally stateful programming DSL & platform";
           license = stdenv.lib.licenses.mit;
         }) {};
      "auto-update" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "auto-update";
           version = "0.1.4";
           sha256 = "5e96c151024e8bcaf4eaa932e16995872b2017f46124b967e155744d9580b425";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "Efficiently run periodic, on-demand actions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "autoexporter" = callPackage
        ({ mkDerivation, base, Cabal, directory, filepath, stdenv }:
         mkDerivation {
           pname = "autoexporter";
           version = "0.2.2";
           sha256 = "2ad4c6d948984c0a5542f5ce87d806b3597088083bc179217d36d08380880d03";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base Cabal directory filepath ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/autoexporter#readme";
           description = "Automatically re-export modules";
           license = stdenv.lib.licenses.mit;
         }) {};
      "avers" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
         , bytestring, clock, containers, cryptohash, filepath, inflections
         , MonadRandom, mtl, network, network-uri, resource-pool
         , rethinkdb-client-driver, safe, scrypt, stdenv, stm
         , template-haskell, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "avers";
           version = "0.0.15";
           sha256 = "538d2461859dae2edd6a6b2abcd5ca45447a1927017fa94cb777c896c2bf7e5e";
           revision = "2";
           editedCabalFile = "0s7j552xi7g26g77sm5w86j49qi4c3xsrd86zhd0cxqybxxp8sqw";
           libraryHaskellDepends = [
             aeson attoparsec base base16-bytestring bytestring clock containers
             cryptohash filepath inflections MonadRandom mtl network network-uri
             resource-pool rethinkdb-client-driver safe scrypt stm
             template-haskell text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "empty";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "avers-api" = callPackage
        ({ mkDerivation, aeson, avers, base, bytestring, cookie
         , http-api-data, servant, stdenv, text, time, vector
         }:
         mkDerivation {
           pname = "avers-api";
           version = "0.0.5";
           sha256 = "469fa007854e5836e816cdf66d650f7b89601dd9644cf859ff680bb6b69d124c";
           libraryHaskellDepends = [
             aeson avers base bytestring cookie http-api-data servant text time
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/wereHamster/avers-api";
           description = "Types describing the core and extended Avers APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "avers-server" = callPackage
        ({ mkDerivation, aeson, avers, avers-api, base, base64-bytestring
         , bytestring, bytestring-conversion, containers, cookie, cryptohash
         , either, http-types, mtl, resource-pool, rethinkdb-client-driver
         , servant, servant-server, stdenv, stm, text, time, transformers
         , wai, wai-websockets, websockets
         }:
         mkDerivation {
           pname = "avers-server";
           version = "0.0.5";
           sha256 = "c72bd19a4f46c733875c887a0efcc7340f9c5b4571a5f74773d3d835297b2176";
           libraryHaskellDepends = [
             aeson avers avers-api base base64-bytestring bytestring
             bytestring-conversion containers cookie cryptohash either
             http-types mtl resource-pool rethinkdb-client-driver servant
             servant-server stm text time transformers wai wai-websockets
             websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/wereHamster/avers-server";
           description = "Server implementation of the Avers API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aws" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
         , base64-bytestring, blaze-builder, byteable, bytestring
         , case-insensitive, cereal, conduit, conduit-extra, containers
         , cryptohash, data-default, directory, filepath, http-conduit
         , http-types, lifted-base, monad-control, mtl, network, old-locale
         , resourcet, safe, scientific, stdenv, tagged, text, time
         , transformers, unordered-containers, utf8-string, vector
         , xml-conduit
         }:
         mkDerivation {
           pname = "aws";
           version = "0.13.2";
           sha256 = "998a9ddc9bc3e74a292e733aac1e9af0ec654d17aa1834319f9f6af4d907ff59";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base base16-bytestring base64-bytestring
             blaze-builder byteable bytestring case-insensitive cereal conduit
             conduit-extra containers cryptohash data-default directory filepath
             http-conduit http-types lifted-base monad-control mtl network
             old-locale resourcet safe scientific tagged text time transformers
             unordered-containers utf8-string vector xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aristidb/aws";
           description = "Amazon Web Services (AWS) for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "b9" = callPackage
        ({ mkDerivation, aeson, async, base, bifunctors, binary, boxes
         , bytestring, conduit, conduit-extra, ConfigFile, directory
         , filepath, free, hashable, mtl, optparse-applicative, parallel
         , parsec, pretty, pretty-show, process, QuickCheck, random
         , semigroups, stdenv, syb, template, text, time, transformers
         , unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "b9";
           version = "0.5.21";
           sha256 = "a7db049d73b0800399cef22fa016932cd5699d6faf9f6056a350eae1952f6cb4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson async base bifunctors binary boxes bytestring conduit
             conduit-extra ConfigFile directory filepath free hashable mtl
             parallel parsec pretty pretty-show process QuickCheck random
             semigroups syb template text time transformers unordered-containers
             vector yaml
           ];
           executableHaskellDepends = [
             base bytestring directory optparse-applicative
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sheyll/b9-vm-image-builder";
           description = "A tool and library for building virtual machine images";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bake" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cmdargs, containers
         , deepseq, direct-sqlite, directory, disk-free-space, extra
         , filepath, hashable, HTTP, http-types, old-locale, process, random
         , safe, shake, smtp-mail, sqlite-simple, stdenv, text, time
         , transformers, unordered-containers, wai, warp
         }:
         mkDerivation {
           pname = "bake";
           version = "0.4";
           sha256 = "ff0b6eb38e68f2542713074da3c64368e3a56c029dadb9c1e011262c223abbf7";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring cmdargs containers deepseq direct-sqlite
             directory disk-free-space extra filepath hashable HTTP http-types
             old-locale random safe shake smtp-mail sqlite-simple text time
             transformers unordered-containers wai warp
           ];
           executableHaskellDepends = [
             aeson base bytestring cmdargs containers deepseq direct-sqlite
             directory disk-free-space extra filepath hashable HTTP http-types
             old-locale process random safe shake smtp-mail sqlite-simple text
             time transformers unordered-containers wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/bake#readme";
           description = "Continuous integration system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bank-holidays-england" = callPackage
        ({ mkDerivation, base, containers, stdenv, time }:
         mkDerivation {
           pname = "bank-holidays-england";
           version = "0.1.0.5";
           sha256 = "0619db7812762ea3af48db434dbcad81e26525d733126073dfe3dbd357a83760";
           libraryHaskellDepends = [ base containers time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/davecturner/bank-holidays-england";
           description = "Calculation of bank holidays in England and Wales";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "barrier" = callPackage
        ({ mkDerivation, base, blaze-svg, bytestring, stdenv
         , template-haskell, text, unordered-containers
         }:
         mkDerivation {
           pname = "barrier";
           version = "0.1.1";
           sha256 = "6395da01eea1984c7bcc85c624b1b5dfbe0b6b764adeed7b04c9fa4d8de91ed9";
           revision = "1";
           editedCabalFile = "167akvi72l47gcqbq5609m24469pq0xmv0kjbmivnrxs796gh890";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base blaze-svg bytestring template-haskell text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/barrier";
           description = "Shields.io style badge generator";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-compat" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "base-compat";
           version = "0.9.1";
           sha256 = "1033b48146b9ffcf4f7c75a321ea0b1525c1b662230f46c41957a1b501b6464a";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           description = "A compatibility layer for base";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-noprelude" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "base-noprelude";
           version = "4.8.2.0";
           sha256 = "bd4ab7685a14d82f7586074b1af88e22a8401e552a439286710592e3a2d763c7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/base-noprelude";
           description = "\"base\" package sans \"Prelude\" module";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base-orphans" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "base-orphans";
           version = "0.5.4";
           sha256 = "04075283606b3633f4b0c72f849a6df1b0519421ad099d07d3e72de589056263";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-compat/base-orphans#readme";
           description = "Backwards-compatible orphan instances for base";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-prelude" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "base-prelude";
           version = "1.0.1.1";
           sha256 = "dccf0a9a3b45f950bac92b6d87997c0a2a4304e40027204b12d018698b7a31b5";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/base-prelude";
           description = "The most complete prelude formed solely from the \"base\" package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-unicode-symbols" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "base-unicode-symbols";
           version = "0.2.2.4";
           sha256 = "a2f841430fec32edba778b74bde83bf0170ada7c5e2e59d7187c8f06d92dcca9";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
           description = "Unicode alternatives for common functions and operators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base16-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "base16-bytestring";
           version = "0.1.1.6";
           sha256 = "5afe65a152c5418f5f4e3579a5e0d5ca19c279dc9bf31c1a371ccbe84705c449";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/base16-bytestring";
           description = "Fast base16 (hex) encoding and decoding for ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base32string" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, stdenv, text }:
         mkDerivation {
           pname = "base32string";
           version = "0.9.1";
           sha256 = "9e931613aeba5f630f9292fc99131388f406e4b34d8f050515ed93aaf632ea32";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ aeson base binary bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Fast and safe representation of a Base-32 string";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base58string" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, stdenv, text }:
         mkDerivation {
           pname = "base58string";
           version = "0.10.0";
           sha256 = "3b72607dd76e30a5054acea656c3805f7191e27d67884a7db5fbc73c17e9c088";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ aeson base binary bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Fast and safe representation of a Base-58 string";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base64-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "base64-bytestring";
           version = "1.0.0.1";
           sha256 = "ab25abf4b00a2f52b270bc3ed43f1d59f16c8eec9d7dffb14df1e9265b233b50";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/base64-bytestring";
           description = "Fast base64 encoding and decoding for ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base64-string" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "base64-string";
           version = "0.2";
           sha256 = "3ec896ca7261ad4ddeffbaa3bdf4d5cb61775250c303fca9929aa9a56acc705e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://urchin.earth.li/~ian/cabal/base64-string/";
           description = "Base64 implementation for String's";
           license = "unknown";
         }) {};
      "basement" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "basement";
           version = "0.0.6";
           sha256 = "9ca23b940006d8c6a7bc9c07c4ef1bf5ddb47ce82d384c5f341996e22cb95ff7";
           revision = "1";
           editedCabalFile = "0jlj6jy1fsh5xc3z1finjxsq838n3v7qz4zv344l37s1w9z8pwlf";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-foundation/foundation";
           description = "Foundation scrap box of array & string";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "basic-prelude" = callPackage
        ({ mkDerivation, base, bytestring, containers, filepath, hashable
         , lifted-base, ReadArgs, safe, stdenv, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "basic-prelude";
           version = "0.5.2";
           sha256 = "96666a0ddd6b12eaa4d172cf76e0a4b3846da49d96a2b68d627e949ea7c75752";
           libraryHaskellDepends = [
             base bytestring containers filepath hashable lifted-base ReadArgs
             safe text transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/basic-prelude";
           description = "An enhanced core prelude; a common foundation for alternate preludes";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bcrypt" = callPackage
        ({ mkDerivation, base, bytestring, entropy, memory, stdenv }:
         mkDerivation {
           pname = "bcrypt";
           version = "0.0.8";
           sha256 = "9cd100975d7349190a1d8ed6459d9e2677a74385ce86b35f2da3f5c582e11100";
           libraryHaskellDepends = [ base bytestring entropy memory ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell bindings to the bcrypt password hash";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "benchpress" = callPackage
        ({ mkDerivation, base, bytestring, mtl, stdenv, time }:
         mkDerivation {
           pname = "benchpress";
           version = "0.2.2.8";
           sha256 = "39fbf32e333466931c8de7dafa922de8a010ee57cd0a8fde8961da310d04057d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base mtl time ];
           executableHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/WillSewell/benchpress";
           description = "Micro-benchmarking with detailed statistics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bencode" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, parsec
         , stdenv
         }:
         mkDerivation {
           pname = "bencode";
           version = "0.6.0.0";
           sha256 = "3b8efdfecee9bc486d9bcdbb633b7128ca235360f102478a7e0f8c895281f68a";
           libraryHaskellDepends = [
             base binary bytestring containers parsec
           ];
           doHaddock = false;
           doCheck = false;
           description = "Parser and printer for bencoded data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bento" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "bento";
           version = "0.1.0";
           sha256 = "eba28420daba13af9de264ec0e3d605535496536b9aff9bc23798cdbcc209192";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/bento#readme";
           description = "🍱 Manage stateful components";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bifunctors" = callPackage
        ({ mkDerivation, base, comonad, containers, semigroups, stdenv
         , tagged, template-haskell, transformers
         }:
         mkDerivation {
           pname = "bifunctors";
           version = "5.2";
           sha256 = "46e173dac5863a7b8404b44ab1ead2de94e743d24a2de571ff086cfb8748de14";
           revision = "2";
           editedCabalFile = "091fysjy5gs3lixaaqngbh5bckshiafavb8z2i7yx5fqbji3d5bw";
           libraryHaskellDepends = [
             base comonad containers semigroups tagged template-haskell
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/bifunctors/";
           description = "Bifunctors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bimap" = callPackage
        ({ mkDerivation, base, containers, exceptions, stdenv }:
         mkDerivation {
           pname = "bimap";
           version = "0.3.2";
           sha256 = "148fc2d9784aa79faf49a979881a2304102a70d13e32fa8ce9f18ab466dc3db8";
           libraryHaskellDepends = [ base containers exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joelwilliamson/bimap";
           description = "Bidirectional mapping between two key types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bimap-server" = callPackage
        ({ mkDerivation, aeson, base, bimap, binary, directory, http-types
         , stdenv, unix, wai, warp
         }:
         mkDerivation {
           pname = "bimap-server";
           version = "0.1.0.1";
           sha256 = "09dfd1865812f40e317b610cbe05cc65ba6ea7215428748e1038ff7fc38ef535";
           libraryHaskellDepends = [
             aeson base bimap binary directory http-types unix wai warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "Two-column database server";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, stdenv }:
         mkDerivation {
           pname = "binary";
           version = "0.8.4.1";
           sha256 = "8d13c700fe96c84644a2af37003f488668fe9cd1f8e5b316fc929de26ce7e7ba";
           revision = "1";
           editedCabalFile = "0l5xmps9hbpxmr1zh9f9da6xs2fva4vddqfgqzimhm66zr00782n";
           libraryHaskellDepends = [ array base bytestring containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kolmodin/binary";
           description = "Binary serialisation for Haskell values using lazy ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-bits" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "binary-bits";
           version = "0.5";
           sha256 = "16534a018a4754d8d1eab051711c23fb741f41a0d141b289001c52824b5be794";
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Bit parsing/writing on top of binary";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-conduit" = callPackage
        ({ mkDerivation, base, binary, bytestring, conduit, resourcet
         , stdenv, vector
         }:
         mkDerivation {
           pname = "binary-conduit";
           version = "1.2.4.1";
           sha256 = "445cbb60bcff6da468e27b1db6a8d576b0b43ff284c3dcca4ae4c13f1ca6ca82";
           libraryHaskellDepends = [
             base binary bytestring conduit resourcet vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/qnikst/binary-conduit/";
           description = "data serialization/deserialization conduit library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "binary-list" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, phantom-state
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "binary-list";
           version = "1.1.1.2";
           sha256 = "6b21e58ea4091b9572cb24a92dfb1ddc14fcea82d2272d30a83eb1b430dd1878";
           libraryHaskellDepends = [
             base binary bytestring deepseq phantom-state transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Lists of length a power of two";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-orphans" = callPackage
        ({ mkDerivation, aeson, base, binary, case-insensitive, hashable
         , scientific, semigroups, stdenv, tagged, text, text-binary, time
         , unordered-containers, vector, vector-binary-instances
         }:
         mkDerivation {
           pname = "binary-orphans";
           version = "0.1.5.1";
           sha256 = "c60442199ad6139654a6a672dc66d321dbe8a23199fb5269ef295b2adc23af4c";
           revision = "5";
           editedCabalFile = "1psh595l5jxk80qflvb0fpjp8jqbman3j0zhdpkbs88knjz1yww7";
           libraryHaskellDepends = [
             aeson base binary case-insensitive hashable scientific semigroups
             tagged text text-binary time unordered-containers vector
             vector-binary-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/binary-orphans#readme";
           description = "Orphan instances for binary";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-parser" = callPackage
        ({ mkDerivation, base-prelude, bytestring, stdenv, success, text
         , transformers
         }:
         mkDerivation {
           pname = "binary-parser";
           version = "0.5.2";
           sha256 = "712d30f26f8423704437e02bd5cc98cfff48fdbac0499e8cb41998f289245545";
           libraryHaskellDepends = [
             base-prelude bytestring success text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/binary-parser";
           description = "A highly-efficient but limited parser API specialised for bytestrings";
           license = stdenv.lib.licenses.mit;
         }) {};
      "binary-search" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "binary-search";
           version = "1.0.0.3";
           sha256 = "b0e32df46aeddceac57bd6afa940f84f275f82fb251479e10fadd7c14414f6fa";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Binary and exponential searches";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-shared" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, mtl, stdenv
         }:
         mkDerivation {
           pname = "binary-shared";
           version = "0.8.3";
           sha256 = "830116505018fc43de09867bea9039b0bfa29e77564efa8c3f3b708933c098b2";
           libraryHaskellDepends = [ base binary bytestring containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leksah.org";
           description = "Sharing for the binary package";
           license = "GPL";
         }) {};
      "binary-tagged" = callPackage
        ({ mkDerivation, aeson, array, base, base16-bytestring, binary
         , bytestring, containers, generics-sop, hashable, nats, scientific
         , semigroups, SHA, stdenv, tagged, text, time, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "binary-tagged";
           version = "0.1.4.2";
           sha256 = "311fab8c2bac00cb6785cb144e25ed58b2efce85e5dc64e30e2b5a2a16cdc784";
           revision = "8";
           editedCabalFile = "0a8xcrx2lm8yzcnrf76c1wynn238i87yz3lqlgrg5n9csdc0bhj1";
           libraryHaskellDepends = [
             aeson array base base16-bytestring binary bytestring containers
             generics-sop hashable nats scientific semigroups SHA tagged text
             time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/binary-tagged#readme";
           description = "Tagged binary serialisation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-typed" = callPackage
        ({ mkDerivation, base, binary, bytestring, murmur-hash, stdenv }:
         mkDerivation {
           pname = "binary-typed";
           version = "1.0";
           sha256 = "85f3708802c52bca66bc5fdc560704cedd1cc63e313fcaab7638196ff7d05609";
           revision = "1";
           editedCabalFile = "1jnmdi3bnyiyvqlmgh5k8cdcbnl594yq3wrs6cjipw0ik06ar0y2";
           libraryHaskellDepends = [ base binary bytestring murmur-hash ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/quchen/binary-typed";
           description = "Type-safe binary serialization";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "bindings-DSL" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "bindings-DSL";
           version = "1.0.23";
           sha256 = "eb6c76448eeb2a9a17135b08eec0dd09e1917a9f6ab702cea0b2070bd19c10e7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jwiegley/bindings-dsl/wiki";
           description = "FFI domain specific language, on top of hsc2hs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bindings-GLFW" = callPackage
        ({ mkDerivation, base, bindings-DSL, libGL, libX11, libXcursor
         , libXext, libXfixes, libXi, libXinerama, libXrandr, libXxf86vm
         , stdenv, template-haskell
         }:
         mkDerivation {
           pname = "bindings-GLFW";
           version = "3.1.2.2";
           sha256 = "537385a35b0ca0f6980f9a785434dcca5e0f8b75475dafa2e9c9d719dd503fc9";
           libraryHaskellDepends = [ base bindings-DSL template-haskell ];
           librarySystemDepends = [
             libGL libX11 libXcursor libXext libXfixes libXi libXinerama
             libXrandr libXxf86vm
           ];
           doHaddock = false;
           doCheck = false;
           description = "Low-level bindings to GLFW OpenGL library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libGL; inherit (pkgs.xorg) libXext; 
inherit (pkgs.xorg) libXfixes;};
      "bindings-posix" = callPackage
        ({ mkDerivation, base, bindings-DSL, stdenv }:
         mkDerivation {
           pname = "bindings-posix";
           version = "1.2.6";
           sha256 = "cefd0c942dab939ea0c944f56a430aef9fc1afeb66dd74de75af38e0161eeafb";
           libraryHaskellDepends = [ base bindings-DSL ];
           doHaddock = false;
           doCheck = false;
           description = "Low level bindings to posix";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bioace" = callPackage
        ({ mkDerivation, base, bioalign, biocore, bytestring, parsec
         , stdenv
         }:
         mkDerivation {
           pname = "bioace";
           version = "0.0.1";
           sha256 = "6f43645b2a0ccbca20069aa25fae6fc2ae1704a3a0c48b069852fbfb8ce16222";
           libraryHaskellDepends = [
             base bioalign biocore bytestring parsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://patch-tag.com/r/dfornika/bioace/home";
           description = "Library for reading ace assembly files";
           license = "GPL";
         }) {};
      "bioalign" = callPackage
        ({ mkDerivation, base, biocore, bytestring, stdenv }:
         mkDerivation {
           pname = "bioalign";
           version = "0.0.5";
           sha256 = "b9152e81abbd7c79099520b69aeca3ff21970f1151b3c072a2994ea31b7acf00";
           libraryHaskellDepends = [ base biocore bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://patch-tag.com/r/dfornika/biophd/home";
           description = "Data structures and helper functions for calculating alignments";
           license = "GPL";
         }) {};
      "biocore" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, stringable }:
         mkDerivation {
           pname = "biocore";
           version = "0.3.1";
           sha256 = "212b7d7395138d4c231968e1f5bb047c03f61adc6c5eb36162602f42c24db41a";
           libraryHaskellDepends = [ base bytestring stringable ];
           doHaddock = false;
           doCheck = false;
           description = "A bioinformatics library";
           license = "LGPL";
         }) {};
      "biofasta" = callPackage
        ({ mkDerivation, base, biocore, bytestring, stdenv }:
         mkDerivation {
           pname = "biofasta";
           version = "0.0.3";
           sha256 = "6221a89cde259e8f9a2d4da11230a8a53d78b24d3367e70be5e7b1279e06e7d0";
           libraryHaskellDepends = [ base biocore bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://patch-tag.com/r/dfornika/biofasta/home";
           description = "Library for reading fasta sequence files";
           license = "GPL";
         }) {};
      "biofastq" = callPackage
        ({ mkDerivation, base, biocore, bytestring, stdenv }:
         mkDerivation {
           pname = "biofastq";
           version = "0.1";
           sha256 = "74e51887569c4900f5de266eca0dd28082c8abdf6ef0f34787a91baec562a310";
           libraryHaskellDepends = [ base biocore bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://biohaskell.org/";
           description = "A library for reading FASTQ files";
           license = "LGPL";
         }) {};
      "biophd" = callPackage
        ({ mkDerivation, base, binary, biocore, bytestring, parsec, stdenv
         , text
         }:
         mkDerivation {
           pname = "biophd";
           version = "0.0.4";
           sha256 = "a31005a449218e3f383ede0a177c48ef8c7ec21ae7bc5d122bd6eb6a9e1bfb82";
           libraryHaskellDepends = [
             base binary biocore bytestring parsec text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://patch-tag.com/r/dfornika/biophd/home";
           description = "Library for reading phd sequence files";
           license = "GPL";
         }) {};
      "biopsl" = callPackage
        ({ mkDerivation, base, biocore, bytestring, cmdargs, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "biopsl";
           version = "0.4";
           sha256 = "b2be254020a276df342ede835a1c1b1b989763098d7d8a5536c0b86c5f7a3bed";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base biocore bytestring ];
           executableHaskellDepends = [ cmdargs unordered-containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://biohaskell.org/";
           description = "Library and executables for working with PSL files";
           license = "LGPL";
         }) {};
      "bitcoin-api" = callPackage
        ({ mkDerivation, aeson, base, base58string, binary, bitcoin-block
         , bitcoin-script, bitcoin-tx, bitcoin-types, bytestring, hexstring
         , lens, lens-aeson, stdenv, text, unordered-containers, wreq
         }:
         mkDerivation {
           pname = "bitcoin-api";
           version = "0.12.1";
           sha256 = "c978de1519b24c5c04ff518ad1209f74f91df31d65e23592dc639219df6b3e30";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base58string binary bitcoin-block bitcoin-script
             bitcoin-tx bitcoin-types bytestring hexstring lens lens-aeson text
             unordered-containers wreq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Provides access to the RPC API of Bitcoin Core";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-api-extra" = callPackage
        ({ mkDerivation, base, binary, bitcoin-api, bitcoin-block
         , bitcoin-tx, bytestring, conduit, lens, stdenv, stm, stm-chans
         , stm-conduit, text, transformers
         }:
         mkDerivation {
           pname = "bitcoin-api-extra";
           version = "0.9.1";
           sha256 = "c423c6007d0f830dd2bbc0e1bc9219980e6fb2bde684890e265e1bfce4bdd7fc";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bitcoin-api bitcoin-block bitcoin-tx bytestring conduit
             lens stm stm-chans stm-conduit text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Higher level constructs on top of the bitcoin-api package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-block" = callPackage
        ({ mkDerivation, base, binary, bitcoin-tx, bitcoin-types
         , bytestring, cryptohash, hexstring, largeword, lens, stdenv
         }:
         mkDerivation {
           pname = "bitcoin-block";
           version = "0.13.1";
           sha256 = "d7f57c0fe71045dab85d223dc15d64db3a15cc7fd8446bfe4ebd98cd9d417d5a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bitcoin-tx bitcoin-types bytestring cryptohash
             hexstring largeword lens
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Utility functions for manipulating bitcoin blocks";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-script" = callPackage
        ({ mkDerivation, base, base16-bytestring, binary, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "bitcoin-script";
           version = "0.11.1";
           sha256 = "398c1d86e918731b5b2026351bb3b0b90b20606517e7c21e42f05d6c6e197b4c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base base16-bytestring binary bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Compilation, manipulation and decompilation of Bitcoin scripts";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-tx" = callPackage
        ({ mkDerivation, base, binary, bitcoin-script, bitcoin-types
         , bytestring, cryptohash, hexstring, lens, stdenv
         }:
         mkDerivation {
           pname = "bitcoin-tx";
           version = "0.13.1";
           sha256 = "3bb88265353066c394e96a56b2dc555fa13d37ca7f820978b793196c6829cc00";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bitcoin-script bitcoin-types bytestring cryptohash
             hexstring lens
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Utility functions for manipulating bitcoin transactions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-types" = callPackage
        ({ mkDerivation, base, base58string, binary, bytestring, hexstring
         , stdenv, text
         }:
         mkDerivation {
           pname = "bitcoin-types";
           version = "0.9.2";
           sha256 = "b72f9448508b64706d5f443748dc9b8abde8e749959187ce3d8356cde0d6c40b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base base58string binary bytestring hexstring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Provides consistent low-level types used commonly among Bitcoin implementations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bits" = callPackage
        ({ mkDerivation, base, bytes, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "bits";
           version = "0.4";
           sha256 = "e626310d69e0808586a9c7cc965a0c2eb3413d643271e523fef8037fc8f4458b";
           libraryHaskellDepends = [ base bytes mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/analytics/bits";
           description = "Various bit twiddling and bitwise serialization primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bitwise" = callPackage
        ({ mkDerivation, array, base, bytestring, stdenv }:
         mkDerivation {
           pname = "bitwise";
           version = "0.1.1.1";
           sha256 = "cde04615108c8e1e4b9f3a6fd7115b6fe40068385489fc5fc3d41e3700d69486";
           revision = "2";
           editedCabalFile = "1dqddxjf4kpb16k51z40qlnl0shw6gmpf1c1ckdn4q8jm61bmlgn";
           libraryHaskellDepends = [ array base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://code.mathr.co.uk/bitwise";
           description = "fast multi-dimensional unboxed bit packed Bool arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blake2" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "blake2";
           version = "0.1.0";
           sha256 = "d4cdb38b973125fdd80a12f335ec536dc5c5d1dfd5611c9ebe46c3bf78841ce5";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/centromere/blake2";
           description = "A library providing BLAKE2";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "blank-canvas" = callPackage
        ({ mkDerivation, aeson, base, base-compat, base64-bytestring
         , bytestring, colour, containers, data-default-class, http-types
         , kansas-comet, mime-types, scotty, stdenv, stm, text, text-show
         , transformers, vector, wai, wai-extra, warp
         }:
         mkDerivation {
           pname = "blank-canvas";
           version = "0.6";
           sha256 = "2a0e5c4fc50b1ce43e56b1a11056186c21d565e225da36f90c58f8c0a70f48b3";
           revision = "12";
           editedCabalFile = "011gssnsg4svv0mz58cvkmy2nr994d4v6ch29yilgh6rna0qfkd9";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base-compat base64-bytestring bytestring colour
             containers data-default-class http-types kansas-comet mime-types
             scotty stm text text-show transformers vector wai wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ku-fpg/blank-canvas/wiki";
           description = "HTML5 Canvas Graphics Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blastxml" = callPackage
        ({ mkDerivation, base, biocore, bytestring, parallel, stdenv
         , tagsoup
         }:
         mkDerivation {
           pname = "blastxml";
           version = "0.3.2";
           sha256 = "0c0089c42306c8189a9a26905677372d26adfde03772ae79b4742771d0de986a";
           libraryHaskellDepends = [
             base biocore bytestring parallel tagsoup
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://biohaskell.org/";
           description = "Library for reading Blast XML output";
           license = "LGPL";
         }) {};
      "blaze-bootstrap" = callPackage
        ({ mkDerivation, base, blaze-html, stdenv, text }:
         mkDerivation {
           pname = "blaze-bootstrap";
           version = "0.1.0.1";
           sha256 = "53b54c0b55ae7a436ec7e5d4e29d50fceb1ccd459ef715236358a3c661d05163";
           libraryHaskellDepends = [ base blaze-html text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/blaze-bootstrap";
           description = "Blaze helper functions for bootstrap pages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "blaze-builder" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, stdenv, text }:
         mkDerivation {
           pname = "blaze-builder";
           version = "0.4.0.2";
           sha256 = "9ad3e4661bf5556d650fb9aa56a3ad6e6eec7575e87d472e8ab6d15eaef163d4";
           revision = "1";
           editedCabalFile = "1n8z1zcvrslsa9dvflx8528hsialmnljl1zzdjf1azs24xdq2npm";
           libraryHaskellDepends = [ base bytestring deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lpsmith/blaze-builder";
           description = "Efficient buffered output";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-builder-enumerator" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring
         , bytestring-builder, enumerator, stdenv, streaming-commons
         , transformers
         }:
         mkDerivation {
           pname = "blaze-builder-enumerator";
           version = "0.2.1.0";
           sha256 = "50f52918a130e81971d01782ead343cdc9bfbf7270ec1e5630943e6b5d23bf96";
           revision = "1";
           editedCabalFile = "1bjgki6c3glllf49qpmw08c75mzgv6cldxc8c75cy8hx60rnsy98";
           libraryHaskellDepends = [
             base blaze-builder bytestring bytestring-builder enumerator
             streaming-commons transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/meiersi/blaze-builder-enumerator";
           description = "Enumeratees for the incremental conversion of builders to bytestrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-html" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-markup, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "blaze-html";
           version = "0.8.1.3";
           sha256 = "8c16e717d353f981e0cd67b50f89ef6f94ab9c56662b3e58bd8a6c552433d637";
           libraryHaskellDepends = [
             base blaze-builder blaze-markup bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jaspervdj.be/blaze";
           description = "A blazingly fast HTML combinator library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-markup" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, stdenv, text }:
         mkDerivation {
           pname = "blaze-markup";
           version = "0.7.1.1";
           sha256 = "638da5984ecd5bcc87f5836786ff93352058a8856bea428d7ffd25bc26c54303";
           revision = "1";
           editedCabalFile = "09dg7r0n0z9cflkjqb8g8z5jplskaypzpn7gn2wsc8bd1ii8qz5k";
           libraryHaskellDepends = [ base blaze-builder bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jaspervdj.be/blaze";
           description = "A blazingly fast markup combinator library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-svg" = callPackage
        ({ mkDerivation, base, blaze-markup, mtl, stdenv }:
         mkDerivation {
           pname = "blaze-svg";
           version = "0.3.6";
           sha256 = "90dff37d78bffe5ee2587bab4281c158d5d1bd3901fe359bfdcc1cb6fb387179";
           libraryHaskellDepends = [ base blaze-markup mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/deepakjois/blaze-svg";
           description = "SVG combinator library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-textual" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, ghc-prim
         , integer-gmp, old-locale, stdenv, text, time, vector
         }:
         mkDerivation {
           pname = "blaze-textual";
           version = "0.2.1.0";
           sha256 = "1042795ab0bab891c034c24a51bafecbb89870ccd28af39534ab3d9ae7f46c2d";
           libraryHaskellDepends = [
             base blaze-builder bytestring ghc-prim integer-gmp old-locale text
             time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/blaze-textual";
           description = "Fast rendering of common datatypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bloodhound" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring, containers
         , data-default-class, exceptions, hashable, http-client, http-types
         , mtl, mtl-compat, network-uri, scientific, semigroups, stdenv
         , text, time, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "bloodhound";
           version = "0.11.0.0";
           sha256 = "df3c708675ad1e113aa31f6d1492bcf55dbef6c7e86e6202b118670a6fcbb939";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring containers data-default-class
             exceptions hashable http-client http-types mtl mtl-compat
             network-uri scientific semigroups text time transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bitemyapp/bloodhound";
           description = "ElasticSearch client library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bloomfilter" = callPackage
        ({ mkDerivation, array, base, bytestring, deepseq, stdenv }:
         mkDerivation {
           pname = "bloomfilter";
           version = "2.0.1.0";
           sha256 = "6c5e0d357d5d39efe97ae2776e8fb533fa50c1c05397c7b85020b0f098ad790f";
           libraryHaskellDepends = [ array base bytestring deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/bloomfilter";
           description = "Pure and impure Bloom Filter implementations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bmp" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "bmp";
           version = "1.2.5.2";
           sha256 = "bdd8681204d79176a974100958a020bb65471752ae7819e5fad7856abd700839";
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.ouroborus.net/bmp";
           description = "Read and write uncompressed BMP image files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bool-extras" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "bool-extras";
           version = "0.4.0";
           sha256 = "c1e8cfc6e716f089a7d24fe0cb33e2f4792ff97f81084604139d5902dc201501";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://tom.lokhorst.eu/bool-extras";
           description = "A fold function for Bool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "boomerang" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell, text }:
         mkDerivation {
           pname = "boomerang";
           version = "1.4.5.2";
           sha256 = "86de45d4407deba2f5441e3867fdc603a7b0cee35080bed181fdefe2c8a0a2be";
           libraryHaskellDepends = [ base mtl template-haskell text ];
           doHaddock = false;
           doCheck = false;
           description = "Library for invertible parsing and printing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "both" = callPackage
        ({ mkDerivation, base, semigroups, stdenv, zero }:
         mkDerivation {
           pname = "both";
           version = "0.1.1.0";
           sha256 = "6f4ee8b7745fb3054282240fe941dd74cf2481f1a07b170d211c2b8791340e8e";
           libraryHaskellDepends = [ base semigroups zero ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/both";
           description = "Like Maybe, but with a different Monoid instance";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bound" = callPackage
        ({ mkDerivation, base, bifunctors, binary, bytes, cereal, comonad
         , hashable, hashable-extras, prelude-extras, profunctors, stdenv
         , template-haskell, transformers
         }:
         mkDerivation {
           pname = "bound";
           version = "1.0.7";
           sha256 = "ad0388ade83ca0b3cf02b182e663f553a83b3a8116ada8f39543318bf516340e";
           libraryHaskellDepends = [
             base bifunctors binary bytes cereal comonad hashable
             hashable-extras prelude-extras profunctors template-haskell
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/bound/";
           description = "Making de Bruijn Succ Less";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bower-json" = callPackage
        ({ mkDerivation, aeson, aeson-better-errors, base, bytestring
         , deepseq, mtl, scientific, stdenv, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "bower-json";
           version = "0.8.1";
           sha256 = "3fb3cdecc55a0997a9d4d9c3443bcf39b7feed09feb8629fc89b48b1ca7b713f";
           libraryHaskellDepends = [
             aeson aeson-better-errors base bytestring deepseq mtl scientific
             text transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdgarrood/bower-json";
           description = "Read bower.json from Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "boxes" = callPackage
        ({ mkDerivation, base, split, stdenv }:
         mkDerivation {
           pname = "boxes";
           version = "0.1.4";
           sha256 = "4e3ee9a88a28ed14a61b2c885b111922f201f56392ff68d350418ff6e98dfdd8";
           revision = "1";
           editedCabalFile = "073kkci1pm6rci7mnq9v006679jk41bfzc0jfi7my4c7idwd1ijd";
           libraryHaskellDepends = [ base split ];
           doHaddock = false;
           doCheck = false;
           description = "2D text pretty-printing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "brick" = callPackage
        ({ mkDerivation, base, containers, contravariant, data-default
         , deepseq, lens, stdenv, template-haskell, text, text-zipper
         , transformers, vector, vty
         }:
         mkDerivation {
           pname = "brick";
           version = "0.4.1";
           sha256 = "bea0df7fdcb476fc955f7301e77bfb8845008ab0e36cab2c2dcc1cf679a4595d";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers contravariant data-default deepseq lens
             template-haskell text text-zipper transformers vector vty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtdaugherty/brick/";
           description = "A declarative terminal user interface library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "broadcast-chan" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "broadcast-chan";
           version = "0.1.1";
           sha256 = "ad5bd65a301aff6df38c4111f02e73cce3bcfed7bfae6c66c2e70310f1e985f2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/merijn/broadcast-chan";
           description = "Broadcast channel type that avoids 0 reader space leaks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bson" = callPackage
        ({ mkDerivation, base, binary, bytestring, cryptohash
         , data-binary-ieee754, mtl, network, stdenv, text, time
         }:
         mkDerivation {
           pname = "bson";
           version = "0.3.2.3";
           sha256 = "9b3aba435365cdfbbd0ba8ccb3400e961d56329da57f6de2e1e391004c374982";
           libraryHaskellDepends = [
             base binary bytestring cryptohash data-binary-ieee754 mtl network
             text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mongodb-haskell/bson";
           description = "BSON documents are JSON-like objects with a standard binary encoding";
           license = "unknown";
         }) {};
      "bson-lens" = callPackage
        ({ mkDerivation, base, bson, lens, stdenv, text }:
         mkDerivation {
           pname = "bson-lens";
           version = "0.1.1";
           sha256 = "d73bb417def2d8cb1efebfc22482a859e119bcc4005dd10106c82dff5ceeb160";
           libraryHaskellDepends = [ base bson lens text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jb55/bson-lens";
           description = "BSON lenses";
           license = stdenv.lib.licenses.mit;
         }) {};
      "btrfs" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, time, unix }:
         mkDerivation {
           pname = "btrfs";
           version = "0.1.2.2";
           sha256 = "0a362bd0aef9c11212c095a3da17279a5c1ac490eee49822a04138503212e7b5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring time unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/hs-btrfs";
           description = "Bindings to the btrfs API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "buffer-builder" = callPackage
        ({ mkDerivation, base, bytestring, mtl, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "buffer-builder";
           version = "0.2.4.4";
           sha256 = "01c0bafb776784a08c041abfc89c3eaee3236bf5555b98e9542676dc43db2dd8";
           libraryHaskellDepends = [
             base bytestring mtl text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chadaustin/buffer-builder";
           description = "Library for efficiently building up buffers, one piece at a time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bumper" = callPackage
        ({ mkDerivation, base, Cabal, containers, fclabels, process
         , regex-compat, split, stdenv, strict
         }:
         mkDerivation {
           pname = "bumper";
           version = "0.6.0.3";
           sha256 = "7cfce3a38be30744a2eb322ad1e5271cd665fa62b4fe21bdf9aa00fcdbc4daa8";
           revision = "3";
           editedCabalFile = "0r4fj5mxl452786jw6pr2nwhs5sszlxb9nwcrakr44jysm181lhw";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base Cabal containers fclabels process regex-compat split strict
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/silkapp/bumper";
           description = "Automatically bump package versions, also transitively";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bustle" = callPackage
        ({ mkDerivation, base, bytestring, cairo, containers, dbus
         , directory, filepath, gio, glib, gtk3, hgettext, mtl, pango
         , parsec, pcap, process, setlocale, stdenv, system-glib, text, time
         }:
         mkDerivation {
           pname = "bustle";
           version = "0.5.4";
           sha256 = "921c2cbbb957dcb02c3aa8fd1eeff3534cb437fa9eeca1c25206ad1e741a3f14";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryPkgconfigDepends = [ system-glib ];
           executableHaskellDepends = [
             base bytestring cairo containers dbus directory filepath gio glib
             gtk3 hgettext mtl pango parsec pcap process setlocale text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.freedesktop.org/wiki/Software/Bustle/";
           description = "Draw sequence diagrams of D-Bus traffic";
           license = "unknown";
         }) {system-glib = pkgs.glib;};
      "byteable" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "byteable";
           version = "0.1.1";
           sha256 = "243b34a1b5b64b39e39fe58f75c18f6cad5b668b10cabcd86816cbde27783fe2";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-byteable";
           description = "Type class for sequence of bytes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytedump" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "bytedump";
           version = "1.0";
           sha256 = "ae17b5040f0423eec792505f14d1d3e53f5ff81ddf83524f1c5dc7a16c0dc0dd";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-bytedump";
           description = "Flexible byte dump helpers for human readers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "byteorder" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "byteorder";
           version = "1.0.4";
           sha256 = "bd20bbb586947f99c38a4c93d9d0266f49f6fc581767b51ba568f6d5d52d2919";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://community.haskell.org/~aslatter/code/byteorder";
           description = "Exposes the native endianness or byte ordering of the system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytes" = callPackage
        ({ mkDerivation, base, binary, bytestring, cereal, containers
         , hashable, mtl, scientific, stdenv, text, time, transformers
         , transformers-compat, unordered-containers, void
         }:
         mkDerivation {
           pname = "bytes";
           version = "0.15.2";
           sha256 = "0bfaaf70154d3622be1ee620dd75e9c93cf4d4a21544d83f281d01439f261f34";
           revision = "1";
           editedCabalFile = "15lwy9l91rvzqpq3q174bxljwaby049mkilica3bp78m7b5wnb0h";
           libraryHaskellDepends = [
             base binary bytestring cereal containers hashable mtl scientific
             text time transformers transformers-compat unordered-containers
             void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ekmett/bytes";
           description = "Sharing code for serialization between binary and cereal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "byteset" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "byteset";
           version = "0.1.1.0";
           sha256 = "13499c5b279f022097e9ae1d0aeef3fcea12b7f18f50157d4950aec58741afa1";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           description = "Set of bytes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytestring-builder" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, stdenv }:
         mkDerivation {
           pname = "bytestring-builder";
           version = "0.10.6.0.0";
           sha256 = "9c439987d11150ad3f73158ad3be1f9d1f70572cd2cf8fdf585765403f116fd6";
           libraryHaskellDepends = [ base bytestring deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "The new bytestring builder, packaged outside of GHC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytestring-conversion" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, case-insensitive
         , double-conversion, stdenv, text
         }:
         mkDerivation {
           pname = "bytestring-conversion";
           version = "0.3.1";
           sha256 = "13b7ea48737dc7a7fd4c894ff1fb9344cf8d9ef8f4201e813d578b613e874ef8";
           revision = "2";
           editedCabalFile = "1x8c42cfzb6fdvgkxxdxcpdf16csimlzsgahb1axnplmr6b3ba63";
           libraryHaskellDepends = [
             attoparsec base bytestring case-insensitive double-conversion text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/twittner/bytestring-conversion/";
           description = "Type-classes to convert values to and from ByteString";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "bytestring-handle" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "bytestring-handle";
           version = "0.1.0.5";
           sha256 = "a2c426f35ba32822e45bcc2e6d4945bbb2ee10b8540bb0965ab6f3304325bb83";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/ganesh/bytestring-handle";
           description = "ByteString-backed Handles";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytestring-lexing" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "bytestring-lexing";
           version = "0.5.0.2";
           sha256 = "01f9add3f25067a89c5ae9ab1f2fd8ab75ec9f386987ee0d83f73ec855b43f73";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Parse and produce literals efficiently from strict or lazy bytestrings";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "bytestring-mmap" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "bytestring-mmap";
           version = "0.2.2";
           sha256 = "7bbcaeeccec5cf448ba59c9ed4de95bcc47b11ae2b9bcddb6201decb88eb69af";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~dons/code/bytestring-mmap/";
           description = "mmap support for strict ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytestring-progress" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, terminal-progress-bar
         , time
         }:
         mkDerivation {
           pname = "bytestring-progress";
           version = "1.0.7";
           sha256 = "97b0950b6dff0154aa463f1e2921dc560478e1156e482bd5bde8a62bd3f83730";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring terminal-progress-bar time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/acw/bytestring-progress";
           description = "A library for tracking the consumption of a lazy ByteString";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytestring-read" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, types-compat }:
         mkDerivation {
           pname = "bytestring-read";
           version = "0.3.1";
           sha256 = "0048cd84ec6c0c684fa8bb65bc20f280ee3e3dc164bf02d59ba139e8caaac635";
           revision = "3";
           editedCabalFile = "15cin8zaybdahryza823zrb2d5dybsjmvjcik8sl8v70jnwzyayc";
           libraryHaskellDepends = [ base bytestring types-compat ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/bytestring-read";
           description = "fast ByteString to number converting library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bytestring-tree-builder" = callPackage
        ({ mkDerivation, base, base-prelude, bytestring, semigroups, stdenv
         , text
         }:
         mkDerivation {
           pname = "bytestring-tree-builder";
           version = "0.2.7.1";
           sha256 = "ae03a5b2e24068870dfcff6c6dc8d6d243aaebdb7c66746d499e7cf6cfd16bd5";
           libraryHaskellDepends = [
             base base-prelude bytestring semigroups text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/bytestring-tree-builder";
           description = "A very efficient ByteString builder implementation based on the binary tree";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bytestring-trie" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "bytestring-trie";
           version = "0.2.4.1";
           sha256 = "2fe4feb526a03d32aaf673506623b3af4ce3fee126f745a8852c5fd676a61363";
           revision = "1";
           editedCabalFile = "0f56pb1k1va7bs9rpn0b8hclxhn5pcjln857k50myhyzrwz8qg7r";
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "An efficient finite map from (byte)strings to values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bzlib" = callPackage
        ({ mkDerivation, base, bytestring, bzip2, stdenv }:
         mkDerivation {
           pname = "bzlib";
           version = "0.5.0.5";
           sha256 = "9ee7d0ac7461b330820af928c13c6668bf4fe3601f171c42432a85c33718017e";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ bzip2 ];
           doHaddock = false;
           doCheck = false;
           description = "Compression and decompression in the bzip2 format";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) bzip2;};
      "bzlib-conduit" = callPackage
        ({ mkDerivation, base, bindings-DSL, bytestring, bzip2, conduit
         , conduit-extra, data-default, mtl, resourcet, stdenv
         }:
         mkDerivation {
           pname = "bzlib-conduit";
           version = "0.2.1.4";
           sha256 = "2d707004ccc83d9aa283805574c7253db5089854abb3a7350587de62f2b2fd1d";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bindings-DSL bytestring conduit conduit-extra data-default mtl
             resourcet
           ];
           librarySystemDepends = [ bzip2 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/bzlib-conduit";
           description = "Streaming compression/decompression via conduits";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) bzip2;};
      "c2hs" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, directory
         , dlist, filepath, language-c, pretty, process, stdenv
         }:
         mkDerivation {
           pname = "c2hs";
           version = "0.28.1";
           sha256 = "95b04ef42cf43a1078e9c8a4bf9264dd26e8653b441b3fb7f2296c8b3a0752bb";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             array base bytestring containers directory dlist filepath
             language-c pretty process
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/c2hs";
           description = "C->Haskell FFI tool that gives some cross-language type safety";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "cabal-debian" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, bifunctors, Cabal
         , containers, data-default, debian, deepseq, Diff, directory
         , exceptions, filepath, hsemail, HUnit, lens, memoize, mtl
         , network-uri, newtype-generics, optparse-applicative, parsec
         , pretty, process, pureMD5, regex-tdfa, set-extra, stdenv, syb
         , text, unix, Unixutils, utf8-string
         }:
         mkDerivation {
           pname = "cabal-debian";
           version = "4.32.5";
           sha256 = "7e78c2ed2fbb2ea57bef4eb4a8b8b1a1b8b741097132759eb28353124711d24e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-wl-pprint base bifunctors Cabal containers data-default debian
             deepseq Diff directory exceptions filepath hsemail HUnit lens
             memoize mtl network-uri newtype-generics optparse-applicative
             parsec pretty process pureMD5 regex-tdfa set-extra syb text unix
             Unixutils utf8-string
           ];
           executableHaskellDepends = [
             base Cabal debian lens mtl pretty Unixutils
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ddssff/cabal-debian";
           description = "Create a Debianization for a Cabal package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-dependency-licenses" = callPackage
        ({ mkDerivation, base, Cabal, containers, directory, filepath
         , stdenv
         }:
         mkDerivation {
           pname = "cabal-dependency-licenses";
           version = "0.1.2.0";
           sha256 = "436a3d8745d6645cac1b51f54974f38811fbc37a3784ac0bdba3c3ddb22f2494";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base Cabal containers directory filepath
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jaspervdj/cabal-dependency-licenses";
           description = "Compose a list of a project's transitive dependencies with their licenses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-file-th" = callPackage
        ({ mkDerivation, base, Cabal, directory, pretty, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "cabal-file-th";
           version = "0.2.4";
           sha256 = "0b55d7ffacd0c6324fa7c8b8f148e788e6b899fb9bf8795285dea66575bed91c";
           libraryHaskellDepends = [
             base Cabal directory pretty template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nkpart/cabal-file-th";
           description = "Template Haskell expressions for reading fields from a project's cabal file";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-helper" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, directory, filepath
         , ghc-prim, mtl, process, stdenv, template-haskell, temporary
         , transformers, utf8-string
         }:
         mkDerivation {
           pname = "cabal-helper";
           version = "0.6.3.1";
           sha256 = "c19a9a87c54f6649e0f8cbb3a070244bff9fcc5b9ae783c00c049867fb1a7afe";
           revision = "1";
           editedCabalFile = "0hc09m5s8lmnlck2pkwdyg2wi9vsf8qw11q6v67rrhqxkqyns4v3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base Cabal directory filepath ghc-prim mtl process transformers
           ];
           executableHaskellDepends = [
             base bytestring Cabal directory filepath ghc-prim process
             template-haskell temporary transformers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple interface to some of Cabal's configuration state used by ghc-mod";
           license = stdenv.lib.licenses.agpl3;
         }) {};
      "cabal-install" = callPackage
        ({ mkDerivation, array, base, bytestring, Cabal, containers
         , directory, filepath, HTTP, mtl, network, network-uri, pretty
         , process, random, stdenv, stm, time, unix, zlib
         }:
         mkDerivation {
           pname = "cabal-install";
           version = "1.22.9.0";
           sha256 = "874035e5730263653c7aa459f270efbffc06da92ea0c828e09ebc04400e94940";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array base bytestring Cabal containers directory filepath HTTP mtl
             network network-uri pretty process random stm time unix zlib
           ];
           doHaddock = false;
           doCheck = false;
           postInstall = ''
             mkdir $out/etc
             mv bash-completion $out/etc/bash_completion.d
           '';
           homepage = "http://www.haskell.org/cabal/";
           description = "The command-line interface for Cabal and Hackage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-rpm" = callPackage
        ({ mkDerivation, base, Cabal, directory, filepath, old-locale
         , process, stdenv, time, unix
         }:
         mkDerivation {
           pname = "cabal-rpm";
           version = "0.9.11";
           sha256 = "ba5c748e84cfda23dee92d9381b34f013bf2840452bebe53d3f0c2e1bd31d581";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base Cabal directory filepath old-locale process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/juhp/cabal-rpm";
           description = "RPM packaging tool for Haskell Cabal-based packages";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "cabal-sort" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, directory
         , explicit-exception, fgl, filepath, process, stdenv, transformers
         , utility-ht
         }:
         mkDerivation {
           pname = "cabal-sort";
           version = "0.0.5.3";
           sha256 = "0c7bd60b1919edae4844850ce9f88a39c647b3911b3fda221cbf2c288f9c228c";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring Cabal containers directory explicit-exception fgl
             filepath process transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           description = "Topologically sort cabal packages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-src" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , containers, directory, filepath, http-conduit, http-types
         , network, process, resourcet, shelly, stdenv, system-fileio
         , system-filepath, tar, text, transformers
         }:
         mkDerivation {
           pname = "cabal-src";
           version = "0.3.0.2";
           sha256 = "49616c6e93f0e6df7204f97c7903b52c62b76b29368c697fd65af79be66bede6";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring conduit conduit-extra containers directory filepath
             http-conduit http-types network process resourcet shelly
             system-fileio system-filepath tar text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/cabal-src";
           description = "Alternative install procedure to avoid the diamond dependency issue";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cacophony" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, deepseq, free, lens
         , memory, mtl, stdenv
         }:
         mkDerivation {
           pname = "cacophony";
           version = "0.6.0";
           sha256 = "2a1b2cf962fbf2743efb36439428b89882add585a4877436533b9fc755d98a9c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring cryptonite deepseq free lens memory mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/centromere/cacophony";
           description = "A library implementing the Noise protocol";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "cairo" = callPackage
        ({ mkDerivation, array, base, bytestring, cairo, gtk2hs-buildtools
         , mtl, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "cairo";
           version = "0.13.1.1";
           sha256 = "58ae22451e7812a88531eaf91ae1250c277f48d0a88d1cae2438bd76f79e89f6";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base bytestring mtl text utf8-string
           ];
           libraryPkgconfigDepends = [ cairo ];
           libraryToolDepends = [ gtk2hs-buildtools ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Binding to the Cairo library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) cairo;};
      "calculator" = callPackage
        ({ mkDerivation, base, containers, gtk, haskeline, hmatrix, parsec
         , plot-gtk-ui, stdenv, transformers
         }:
         mkDerivation {
           pname = "calculator";
           version = "0.4.1.2";
           sha256 = "a96befbbc0d91c7f141a99f44f5eda56651383481b16bea0356758b8f1dfd21d";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base containers gtk haskeline hmatrix parsec plot-gtk-ui
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sumitsahrawat/calculator";
           description = "A calculator repl, with variables, functions & Mathematica like dynamic plots";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "call-stack" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "call-stack";
           version = "0.1.0";
           sha256 = "f25f5e0992a39371079cc25c2a14b5abb872fa7d868a32753aac3a258b83b1e2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/call-stack#readme";
           description = "Use GHC call-stacks in a backward compatible way";
           license = stdenv.lib.licenses.mit;
         }) {};
      "carray" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, ix-shapable
         , QuickCheck, stdenv, syb
         }:
         mkDerivation {
           pname = "carray";
           version = "0.1.6.5";
           sha256 = "6b253bd77cbe3cf1ed05ed60fa45f72f2ed5f6a0db5395ba26d58317b146786b";
           revision = "1";
           editedCabalFile = "161qczm8lp16v5v7mar67qwsd3vmiaz9fp26kl1vxhsyj7svpjln";
           libraryHaskellDepends = [
             array base binary bytestring ix-shapable QuickCheck syb
           ];
           doHaddock = false;
           doCheck = false;
           description = "A C-compatible array library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cartel" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv, time
         , transformers
         }:
         mkDerivation {
           pname = "cartel";
           version = "0.16.0.0";
           sha256 = "67594fa408d74553038b677b650863f457309d69d968b01f4dda3bdf46a8b6b3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base directory filepath time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/cartel";
           description = "Specify Cabal files in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "case-insensitive" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, hashable, semigroups
         , stdenv, text
         }:
         mkDerivation {
           pname = "case-insensitive";
           version = "1.2.0.7";
           sha256 = "160d3898fd0d8b50bed820ff633e6292438f069adec5267c42b8bcf0f386cac8";
           libraryHaskellDepends = [
             base bytestring deepseq hashable semigroups text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/case-insensitive";
           description = "Case insensitive string comparison";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cased" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "cased";
           version = "0.1.0.0";
           sha256 = "8394e6705ed83152875e1de1c51c54c26b04a2359919d8958d66997b2b60ad23";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jb55/cased";
           description = "Track string casing in its type";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cases" = callPackage
        ({ mkDerivation, attoparsec, base-prelude, loch-th, stdenv, text }:
         mkDerivation {
           pname = "cases";
           version = "0.1.3.1";
           sha256 = "472bd45f1e9361b250e1b48aeaa92494fce5283f4154856cb13d1a8376897987";
           libraryHaskellDepends = [ attoparsec base-prelude loch-th text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/cases";
           description = "A converter for spinal, snake and camel cases";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cassava" = callPackage
        ({ mkDerivation, array, attoparsec, base, blaze-builder, bytestring
         , containers, deepseq, hashable, stdenv, text, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "cassava";
           version = "0.4.5.1";
           sha256 = "7c622ae9dc647508662a1cda3fe3f6d7032786e4e3d15f8488de9e9330cf9d9f";
           revision = "2";
           editedCabalFile = "0n94n43yvn3jghkja2diimh4jil2698721wclih78kak9832lsh3";
           configureFlags = [ "-f-bytestring--lt-0_10_4" ];
           libraryHaskellDepends = [
             array attoparsec base blaze-builder bytestring containers deepseq
             hashable text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cassava";
           description = "A CSV parsing and encoding library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cautious-file" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, directory, filepath
         , process, stdenv, unix
         }:
         mkDerivation {
           pname = "cautious-file";
           version = "1.0.2";
           sha256 = "38fa615f6b2154c65016662d7fa7c173c2f56ae3621b469aa6016795f9b385eb";
           revision = "2";
           editedCabalFile = "02ysmm577c4z0s3mqrpdpmzvs18y834ic90iwi5czcnj02zvg22s";
           setupHaskellDepends = [ base Cabal process ];
           libraryHaskellDepends = [
             base bytestring directory filepath unix
           ];
           doHaddock = false;
           doCheck = false;
           description = "Ways to write a file cautiously, to reduce the chances of problems such as data loss due to crashes or power failures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cayley-client" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, exceptions
         , http-client, http-conduit, lens, lens-aeson, mtl, stdenv, text
         , transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "cayley-client";
           version = "0.1.5.1";
           sha256 = "3a2eab27b2aa711141d43248a5505154945e8563d846e1db3379f486b140563c";
           revision = "2";
           editedCabalFile = "0yr0m9nbqx44pvxrbanycwcb7nccari6ccdqn16h28z7w4v5yhbf";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring exceptions http-client
             http-conduit lens lens-aeson mtl text transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/cayley-client";
           description = "A Haskell client for the Cayley graph database";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cborg" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, fail
         , ghc-prim, half, integer-gmp, primitive, semigroups, stdenv, text
         }:
         mkDerivation {
           pname = "cborg";
           version = "0.2.0.0";
           sha256 = "808cbd40a3a53e798cc34b38c400154d1209536113f5dc5fd8a17a64e6c77fb7";
           revision = "2";
           editedCabalFile = "1fim6qbzimff8hpzv6bw558pzkh65cql8gdjinghc7w9c5my6y7l";
           libraryHaskellDepends = [
             array base bytestring containers fail ghc-prim half integer-gmp
             primitive semigroups text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Concise Binary Object Representation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cereal" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, fail
         , ghc-prim, stdenv
         }:
         mkDerivation {
           pname = "cereal";
           version = "0.5.2.0";
           sha256 = "b50e77ad340d672d0f2c53ce526a088ecdf74f1ed34f6bb2f95deab725dd2b14";
           libraryHaskellDepends = [
             array base bytestring containers fail ghc-prim
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GaloisInc/cereal";
           description = "A binary serialization library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cereal-conduit" = callPackage
        ({ mkDerivation, base, bytestring, cereal, conduit, resourcet
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "cereal-conduit";
           version = "0.7.3";
           sha256 = "05bf926a6292ad6e17f2667c248c33f820266ea8a703749923cc936a824c00a2";
           libraryHaskellDepends = [
             base bytestring cereal conduit resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/conduit";
           description = "Turn Data.Serialize Gets and Puts into Sources, Sinks, and Conduits";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cereal-vector" = callPackage
        ({ mkDerivation, base, bytestring, cereal, stdenv, vector }:
         mkDerivation {
           pname = "cereal-vector";
           version = "0.2.0.1";
           sha256 = "ff0685a6c39e7aae32f8b4165e2ae06f284c867298ad4f7b776c1c1b2859f933";
           libraryHaskellDepends = [ base bytestring cereal vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acfoltzer/cereal-vector";
           description = "Serialize instances for Data.Vector types.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cgi" = callPackage
        ({ mkDerivation, base, bytestring, containers, exceptions, mtl
         , multipart, network, network-uri, parsec, stdenv, time, xhtml
         }:
         mkDerivation {
           pname = "cgi";
           version = "3001.3.0.2";
           sha256 = "92111387216c4941271a833a1214d61ad21aaf3337ae48ea6d99d4a035bd77c1";
           libraryHaskellDepends = [
             base bytestring containers exceptions mtl multipart network
             network-uri parsec time xhtml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cheecheeo/haskell-cgi";
           description = "A library for writing CGI programs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "charset" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, semigroups
         , stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "charset";
           version = "0.3.7.1";
           sha256 = "3d415d2883bd7bf0cc9f038e8323f19c71e07dd12a3c712f449ccb8b4daac0be";
           libraryHaskellDepends = [
             array base bytestring containers semigroups unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/charset";
           description = "Fast unicode character sets based on complemented PATRICIA tries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "charsetdetect-ae" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "charsetdetect-ae";
           version = "1.1.0.1";
           sha256 = "1da16c91136cfe357e40522cdabcb4afc7a9f8a36a29492812e224563b1dcbf8";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/charsetdetect-ae";
           description = "Character set detection using Mozilla's Universal Character Set Detector";
           license = "LGPL";
         }) {};
      "cheapskate" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, containers
         , data-default, mtl, stdenv, syb, text, uniplate, xss-sanitize
         }:
         mkDerivation {
           pname = "cheapskate";
           version = "0.1.0.5";
           sha256 = "7a63b7ffc4976d006c5f693569a5ffd7a887e83d126d1dce9bbe8b5fbaabfa32";
           revision = "1";
           editedCabalFile = "1m88nnrdd2bzvpnaypzi38xa1criwyj5j6c6pzqjkkivmhk3bw99";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-html containers data-default mtl syb text uniplate
             xss-sanitize
           ];
           executableHaskellDepends = [ base blaze-html bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/cheapskate";
           description = "Experimental markdown processor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cheapskate-highlight" = callPackage
        ({ mkDerivation, base, blaze-html, cheapskate, highlighting-kate
         , stdenv, text
         }:
         mkDerivation {
           pname = "cheapskate-highlight";
           version = "0.1.0.0";
           sha256 = "5af7afb26b4ea80952963b44db695cbf18da34d3e8a7d32382a7dbfa4832d370";
           revision = "1";
           editedCabalFile = "1c8kxqdqf0j962xjdrrjfcbjsl0c1kax31rjykymv7w16d6hmlj4";
           libraryHaskellDepends = [
             base blaze-html cheapskate highlighting-kate text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/cheapskate-highlight";
           description = "Code highlighting for cheapskate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cheapskate-lucid" = callPackage
        ({ mkDerivation, base, blaze-html, cheapskate, lucid, stdenv }:
         mkDerivation {
           pname = "cheapskate-lucid";
           version = "0.1.0.0";
           sha256 = "f582e512befd2707a7056c1d15541967de2e0ce5702bc2197a3fced58a777245";
           revision = "1";
           editedCabalFile = "197nx95xw21i7zyvgzcgnr36ab6vrk17c66iz8ndwz61vp1jf6hc";
           libraryHaskellDepends = [ base blaze-html cheapskate lucid ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/cheapskate-lucid";
           description = "Use cheapskate with Lucid";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "check-email" = callPackage
        ({ mkDerivation, base, bytestring, email-validate, resolv, stdenv
         }:
         mkDerivation {
           pname = "check-email";
           version = "1.0";
           sha256 = "dfbba577c18ca1180d8d4b38cd0a54a6f0ca5a886e502cb83c8ab07675463cb7";
           revision = "1";
           editedCabalFile = "0x8dq8ja9di728b2fcqji655xrp9ckw58ryd02286rg7xrp63y1r";
           libraryHaskellDepends = [ base bytestring email-validate ];
           librarySystemDepends = [ resolv ];
           doHaddock = false;
           doCheck = false;
           description = "Confirm whether an email is valid and probably existant";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) resolv;};
      "checkers" = callPackage
        ({ mkDerivation, array, base, QuickCheck, random, stdenv }:
         mkDerivation {
           pname = "checkers";
           version = "0.4.6";
           sha256 = "2adc9cd2bfcc5c7bf8dbcf79160344757392a29b55ca131cda48e60168df970f";
           libraryHaskellDepends = [ array base QuickCheck random ];
           doHaddock = false;
           doCheck = false;
           description = "Check properties on standard classes and data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "chell" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, options, patience
         , random, stdenv, template-haskell, text, transformers
         }:
         mkDerivation {
           pname = "chell";
           version = "0.4.0.1";
           sha256 = "5f0abd31f4b00483e4667090c89828eda6a1c6ba5d77ecec418ad0fe972a6951";
           libraryHaskellDepends = [
             ansi-terminal base bytestring options patience random
             template-haskell text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/chell/";
           description = "A simple and intuitive library for automated testing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "chell-quickcheck" = callPackage
        ({ mkDerivation, base, chell, QuickCheck, random, stdenv }:
         mkDerivation {
           pname = "chell-quickcheck";
           version = "0.2.5";
           sha256 = "9a119daa3ff6046efd3024c48356b76650d01c27734f6b9b66259b59ba657309";
           libraryHaskellDepends = [ base chell QuickCheck random ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/chell/";
           description = "QuickCheck support for the Chell testing library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "chunked-data" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , mono-traversable, semigroups, stdenv, text, transformers, vector
         }:
         mkDerivation {
           pname = "chunked-data";
           version = "0.2.0";
           sha256 = "9aa0f3c81f9b0d7c1dde206501415f01638f20eebfbe1386dfd802bcc1bab272";
           revision = "3";
           editedCabalFile = "0251jrg9msn04b405q2kc6wrfw9991masha7khwb951p8biz1lcg";
           libraryHaskellDepends = [
             base blaze-builder bytestring containers mono-traversable
             semigroups text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/chunked-data";
           description = "Typeclasses for dealing with various chunked data representations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cipher-aes" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv
         }:
         mkDerivation {
           pname = "cipher-aes";
           version = "0.2.11";
           sha256 = "d3b171895698c73da24d7ce97543f725d26637f038de670c0fd4012ca7f95015";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-cipher-aes";
           description = "Fast AES cipher implementation with advanced mode of operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-aes128" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cereal, crypto-api
         , process, stdenv, tagged
         }:
         mkDerivation {
           pname = "cipher-aes128";
           version = "0.7.0.3";
           sha256 = "6f27bea8bcd1987072fc75b6b423ae9c691574324b6a328ec1e2866f84412e3a";
           revision = "1";
           editedCabalFile = "1c3lr80vcdrajlvks9ny9s8m2n2kc9jw14nh65668dfikp0pqc61";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal process ];
           libraryHaskellDepends = [
             base bytestring cereal crypto-api tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TomMD/cipher-aes128";
           description = "AES and common modes using AES-NI when available";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-blowfish" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv, vector
         }:
         mkDerivation {
           pname = "cipher-blowfish";
           version = "0.0.3";
           sha256 = "8f41170a851dba6d0b6f07298af3213baca09ab2a8aaf2adb733631feb3b6641";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Blowfish cipher";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-camellia" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv, vector
         }:
         mkDerivation {
           pname = "cipher-camellia";
           version = "0.0.2";
           sha256 = "8d0cd137cdb890646bb5d3bb52b20fa6d74e1b0c35d7d524d60edd9d43ace2a7";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Camellia block cipher primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-des" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv
         }:
         mkDerivation {
           pname = "cipher-des";
           version = "0.0.6";
           sha256 = "85f1bccdec625a120ecf83b861afcb6478f8f899ceaa06fc083e642b54ff4ac7";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "DES and 3DES primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-rc4" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , stdenv
         }:
         mkDerivation {
           pname = "cipher-rc4";
           version = "0.1.4";
           sha256 = "c67e731bc9e7f3882e33609c3d9ec97b4e9bbd2f95cd882926acfb621970384d";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cipher-rc4";
           description = "Fast RC4 cipher implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "circle-packing" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "circle-packing";
           version = "0.1.0.5";
           sha256 = "041ad1ce696a66f747bb4c65102387cd15b7b026a4b1462d19b341733c2f5c9f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Simple heuristic for packing discs of varying radii in a circle";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clash-ghc" = callPackage
        ({ mkDerivation, array, base, bifunctors, bytestring, clash-lib
         , clash-prelude, clash-systemverilog, clash-verilog, clash-vhdl
         , containers, deepseq, directory, filepath, ghc, ghc-typelits-extra
         , ghc-typelits-natnormalise, hashable, haskeline, lens, mtl
         , process, stdenv, text, time, transformers, unbound-generics, unix
         , unordered-containers
         }:
         mkDerivation {
           pname = "clash-ghc";
           version = "0.6.24";
           sha256 = "03fddd334133dafc57110657542b1024749fd06d66cecad62853aad4d402acf8";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array base bifunctors bytestring clash-lib clash-prelude
             clash-systemverilog clash-verilog clash-vhdl containers deepseq
             directory filepath ghc ghc-typelits-extra ghc-typelits-natnormalise
             hashable haskeline lens mtl process text time transformers
             unbound-generics unix unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "CAES Language for Synchronous Hardware";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "clash-lib" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, clash-prelude
         , concurrent-supply, containers, deepseq, directory, errors, fgl
         , filepath, ghc, hashable, integer-gmp, lens, mtl, pretty, process
         , stdenv, template-haskell, text, time, transformers
         , unbound-generics, unordered-containers, uu-parsinglib
         , wl-pprint-text
         }:
         mkDerivation {
           pname = "clash-lib";
           version = "0.6.21";
           sha256 = "2b0135d15e5e3b66a59ccdb40a3bf38bb8895bf67c49eb9b54a80082752b98ad";
           revision = "1";
           editedCabalFile = "0qnj5dcb5rdvha6lq0xycw2cv6m035zbnqa64py9lz49jizaziad";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring clash-prelude concurrent-supply
             containers deepseq directory errors fgl filepath ghc hashable
             integer-gmp lens mtl pretty process template-haskell text time
             transformers unbound-generics unordered-containers uu-parsinglib
             wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "CAES Language for Synchronous Hardware - As a Library";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "clash-prelude" = callPackage
        ({ mkDerivation, array, base, data-default, deepseq, ghc-prim
         , ghc-typelits-extra, ghc-typelits-natnormalise, integer-gmp, lens
         , QuickCheck, reflection, singletons, stdenv, template-haskell
         , th-lift
         }:
         mkDerivation {
           pname = "clash-prelude";
           version = "0.10.14";
           sha256 = "bf99eabf5a0ac6a86523c95a122242d3f5631d1b1870ba83d8e7319f245ef7f2";
           revision = "1";
           editedCabalFile = "069znqchj1kvq3v2ssv7iqlxmvlyfzwqam5lc339f6gwh77ydnms";
           libraryHaskellDepends = [
             array base data-default deepseq ghc-prim ghc-typelits-extra
             ghc-typelits-natnormalise integer-gmp lens QuickCheck reflection
             singletons template-haskell th-lift
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "CAES Language for Synchronous Hardware - Prelude library";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "clash-systemverilog" = callPackage
        ({ mkDerivation, base, clash-lib, clash-prelude, fgl, lens, mtl
         , stdenv, text, unordered-containers, wl-pprint-text
         }:
         mkDerivation {
           pname = "clash-systemverilog";
           version = "0.6.10";
           sha256 = "20c33d2966648ecf383793308b0292437cccd06c4bd5535c1f280689180a2d6b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base clash-lib clash-prelude fgl lens mtl text unordered-containers
             wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "CAES Language for Synchronous Hardware - SystemVerilog backend";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "clash-verilog" = callPackage
        ({ mkDerivation, base, clash-lib, clash-prelude, fgl, lens, mtl
         , stdenv, text, unordered-containers, wl-pprint-text
         }:
         mkDerivation {
           pname = "clash-verilog";
           version = "0.6.10";
           sha256 = "943c2c8752a3b44badce60595ffc5bbea2c87316681cd69460d75053e00fb26c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base clash-lib clash-prelude fgl lens mtl text unordered-containers
             wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "CAES Language for Synchronous Hardware - Verilog backend";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "clash-vhdl" = callPackage
        ({ mkDerivation, base, clash-lib, clash-prelude, fgl, lens, mtl
         , stdenv, text, unordered-containers, wl-pprint-text
         }:
         mkDerivation {
           pname = "clash-vhdl";
           version = "0.6.16";
           sha256 = "42f4be26a545144c0e950c2a0b3d59516e93e73ed2c6d32d3c449e233d32b0c8";
           revision = "1";
           editedCabalFile = "0g0vq0wjhgzz69pm83g0r0g2plwz6prv5b96hiz3cm1a4ac6i0dj";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base clash-lib clash-prelude fgl lens mtl text unordered-containers
             wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "CAES Language for Synchronous Hardware - VHDL backend";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "classy-prelude" = callPackage
        ({ mkDerivation, base, basic-prelude, bifunctors, bytestring
         , chunked-data, containers, dlist, enclosed-exceptions, exceptions
         , ghc-prim, hashable, lifted-base, mono-traversable, mtl
         , mutable-containers, primitive, semigroups, stdenv, stm, text
         , time, time-locale-compat, transformers, transformers-base
         , unordered-containers, vector, vector-instances
         }:
         mkDerivation {
           pname = "classy-prelude";
           version = "0.12.8";
           sha256 = "afa89959a687d74b851a2a3fce1b2d397cc40041ff5223ec9317bd723d47ca7f";
           libraryHaskellDepends = [
             base basic-prelude bifunctors bytestring chunked-data containers
             dlist enclosed-exceptions exceptions ghc-prim hashable lifted-base
             mono-traversable mtl mutable-containers primitive semigroups stm
             text time time-locale-compat transformers transformers-base
             unordered-containers vector vector-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/classy-prelude";
           description = "A typeclass-based Prelude";
           license = stdenv.lib.licenses.mit;
         }) {};
      "classy-prelude-conduit" = callPackage
        ({ mkDerivation, base, bytestring, classy-prelude, conduit
         , conduit-combinators, monad-control, resourcet, stdenv
         , transformers, void
         }:
         mkDerivation {
           pname = "classy-prelude-conduit";
           version = "0.12.8";
           sha256 = "5ba261f04339ea8533abbe760257f9108433c9183c644e87bca5ba637ed1663d";
           libraryHaskellDepends = [
             base bytestring classy-prelude conduit conduit-combinators
             monad-control resourcet transformers void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/classy-prelude";
           description = "conduit instances for classy-prelude";
           license = stdenv.lib.licenses.mit;
         }) {};
      "classy-prelude-yesod" = callPackage
        ({ mkDerivation, aeson, base, classy-prelude
         , classy-prelude-conduit, data-default, http-conduit, http-types
         , persistent, stdenv, yesod, yesod-newsfeed, yesod-static
         }:
         mkDerivation {
           pname = "classy-prelude-yesod";
           version = "0.12.8";
           sha256 = "fa2c5c8407b0b7e10abeb360d237eec9e629cb34098dc1e84a23baf106f85f5e";
           libraryHaskellDepends = [
             aeson base classy-prelude classy-prelude-conduit data-default
             http-conduit http-types persistent yesod yesod-newsfeed
             yesod-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/classy-prelude";
           description = "Provide a classy prelude including common Yesod functionality";
           license = stdenv.lib.licenses.mit;
         }) {};
      "clay" = callPackage
        ({ mkDerivation, base, mtl, stdenv, text }:
         mkDerivation {
           pname = "clay";
           version = "0.10.1";
           sha256 = "3bb820281b8824055f5a087273f6578ccd5b6f6575891ec88933d9ebdf920a54";
           revision = "2";
           editedCabalFile = "1p30kw4b7pzbn8yyimgr9rbrgp75gl5dvi0whyhrk6ddjisrr2gh";
           libraryHaskellDepends = [ base mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://fvisser.nl/clay";
           description = "CSS preprocessor as embedded Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clckwrks" = callPackage
        ({ mkDerivation, acid-state, aeson, aeson-qq, attoparsec, base
         , blaze-html, bytestring, cereal, containers, directory, filepath
         , happstack-authenticate, happstack-hsp, happstack-jmacro
         , happstack-server, happstack-server-tls, hsp, hsx-jmacro, hsx2hs
         , ixset, jmacro, lens, mtl, network, network-uri, old-locale
         , openssl, process, random, reform, reform-happstack, reform-hsp
         , safecopy, stdenv, stm, text, time, time-locale-compat
         , unordered-containers, userid, utf8-string, uuid-orphans
         , uuid-types, vector, web-plugins, web-routes, web-routes-happstack
         , web-routes-hsp, web-routes-th, xss-sanitize
         }:
         mkDerivation {
           pname = "clckwrks";
           version = "0.23.19.2";
           sha256 = "1453a56daccb669931ef6c1a1e6311abc6fef28341c9c75de0fcc34e03e4fb84";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             acid-state aeson aeson-qq attoparsec base blaze-html bytestring
             cereal containers directory filepath happstack-authenticate
             happstack-hsp happstack-jmacro happstack-server
             happstack-server-tls hsp hsx-jmacro hsx2hs ixset jmacro lens mtl
             network network-uri old-locale process random reform
             reform-happstack reform-hsp safecopy stm text time
             time-locale-compat unordered-containers userid utf8-string
             uuid-orphans uuid-types vector web-plugins web-routes
             web-routes-happstack web-routes-hsp web-routes-th xss-sanitize
           ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clckwrks.com/";
           description = "A secure, reliable content management system (CMS) and blogging platform";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openssl;};
      "clckwrks-cli" = callPackage
        ({ mkDerivation, acid-state, base, clckwrks, haskeline, mtl
         , network, parsec, stdenv
         }:
         mkDerivation {
           pname = "clckwrks-cli";
           version = "0.2.16";
           sha256 = "424fcaa1f1b6b39be1d727073b9b9ab37c9a201f6c2eca5a8c30d469919c12e7";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             acid-state base clckwrks haskeline mtl network parsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clckwrks.com/";
           description = "a command-line interface for adminstrating some aspects of clckwrks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clckwrks-plugin-media" = callPackage
        ({ mkDerivation, acid-state, attoparsec, base, blaze-html, cereal
         , clckwrks, containers, directory, filepath, gd, happstack-server
         , hsp, hsx2hs, ixset, magic, mtl, reform, reform-happstack
         , reform-hsp, safecopy, stdenv, text, web-plugins, web-routes
         , web-routes-th
         }:
         mkDerivation {
           pname = "clckwrks-plugin-media";
           version = "0.6.16";
           sha256 = "7e4dbb81a28a3e4bf81c5d1ef5d0820a858877c00d1f2c98488d391a4a478598";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             acid-state attoparsec base blaze-html cereal clckwrks containers
             directory filepath gd happstack-server hsp ixset magic mtl reform
             reform-happstack reform-hsp safecopy text web-plugins web-routes
             web-routes-th
           ];
           libraryToolDepends = [ hsx2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://clckwrks.com/";
           description = "media plugin for clckwrks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clckwrks-plugin-page" = callPackage
        ({ mkDerivation, acid-state, aeson, attoparsec, base, clckwrks
         , containers, directory, filepath, happstack-hsp, happstack-server
         , hsp, hsx2hs, ixset, mtl, old-locale, random, reform
         , reform-happstack, reform-hsp, safecopy, stdenv, tagsoup
         , template-haskell, text, time, time-locale-compat, uuid
         , uuid-orphans, web-plugins, web-routes, web-routes-happstack
         , web-routes-th
         }:
         mkDerivation {
           pname = "clckwrks-plugin-page";
           version = "0.4.3.5";
           sha256 = "fb52a13751c322fde387786e93fdd41e4bb5a6019136fd8daa9d622d15e5d498";
           libraryHaskellDepends = [
             acid-state aeson attoparsec base clckwrks containers directory
             filepath happstack-hsp happstack-server hsp hsx2hs ixset mtl
             old-locale random reform reform-happstack reform-hsp safecopy
             tagsoup template-haskell text time time-locale-compat uuid
             uuid-orphans web-plugins web-routes web-routes-happstack
             web-routes-th
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clckwrks.com/";
           description = "support for CMS/Blogging in clckwrks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clckwrks-theme-bootstrap" = callPackage
        ({ mkDerivation, base, clckwrks, happstack-authenticate, hsp
         , hsx-jmacro, hsx2hs, jmacro, mtl, stdenv, text, web-plugins
         }:
         mkDerivation {
           pname = "clckwrks-theme-bootstrap";
           version = "0.4.2";
           sha256 = "6b613719a51e4df718559b3517d9e6322ced8e75a874e69fcfc38d1648f22348";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base clckwrks happstack-authenticate hsp hsx-jmacro hsx2hs jmacro
             mtl text web-plugins
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clckwrks.com/";
           description = "simple bootstrap based template for clckwrks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clientsession" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, cereal
         , cipher-aes, cprng-aes, crypto-api, crypto-random, directory
         , entropy, setenv, skein, stdenv, tagged
         }:
         mkDerivation {
           pname = "clientsession";
           version = "0.9.1.2";
           sha256 = "5915adc4de26d2a8b03f1a445bac0b0f5d10a5b0380a4eed71b79a20a727d068";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base64-bytestring bytestring cereal cipher-aes cprng-aes
             crypto-api crypto-random directory entropy setenv skein tagged
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/clientsession/tree/master";
           description = "Securely store session data in a client-side cookie";
           license = stdenv.lib.licenses.mit;
         }) {};
      "clock" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "clock";
           version = "0.7.2";
           sha256 = "886601978898d3a91412fef895e864576a7125d661e1f8abc49a2a08840e691f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/corsis/clock";
           description = "High-resolution clock functions: monotonic, realtime, cputime";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clumpiness" = callPackage
        ({ mkDerivation, base, containers, stdenv, tree-fun }:
         mkDerivation {
           pname = "clumpiness";
           version = "0.17.0.0";
           sha256 = "fd4b303d206eaf242c779bb65c42256e42220c8497a6bcf3bc59589b9396c495";
           libraryHaskellDepends = [ base containers tree-fun ];
           doHaddock = false;
           doCheck = false;
           description = "Calculate the clumpiness of leaf properties in a tree";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "clustering" = callPackage
        ({ mkDerivation, base, binary, containers, matrices, mwc-random
         , parallel, primitive, stdenv, vector
         }:
         mkDerivation {
           pname = "clustering";
           version = "0.2.1";
           sha256 = "5078c28e185fd26770726cb2632ff043d99b6918d7a5d135c30bd53fc27ab9cb";
           libraryHaskellDepends = [
             base binary containers matrices mwc-random parallel primitive
             vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "High performance clustering algorithms";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cmark" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "cmark";
           version = "0.5.4";
           sha256 = "06f62f52870103be29c92eabfed84be96b4b38a12c3c0b96dffe61b3a0dfa807";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jgm/cmark-hs";
           description = "Fast, accurate CommonMark (Markdown) parser and renderer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cmdargs" = callPackage
        ({ mkDerivation, base, filepath, process, stdenv, template-haskell
         , transformers
         }:
         mkDerivation {
           pname = "cmdargs";
           version = "0.10.14";
           sha256 = "38b60053c11394a1876d2744950eece66ca9e4364298c1383f247894044bce58";
           revision = "3";
           editedCabalFile = "0r26jrlyqbj6x28b7ykrq0ns1f7srklyljazah6b9lf1zbmiy77b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base filepath process template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/cmdargs#readme";
           description = "Command line argument processing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "code-builder" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "code-builder";
           version = "0.1.3";
           sha256 = "559e47a44cec85a8e95df92e5d2693cacc9761503c30be3b83eaebd95360a4ab";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Simple system for generating code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "codec-jvm" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , fetchgit, mtl, stdenv, stringsearch, text, transformers
         }:
         mkDerivation {
           pname = "codec-jvm";
           version = "0.1";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           postUnpack = "sourceRoot+=/codec-jvm; echo source root reset to $sourceRoot";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base binary bytestring containers mtl stringsearch text
             transformers
           ];
           executableHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           license = stdenv.lib.licenses.asl20;
         }) {};
      "codex" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, cryptohash
         , directory, either, filepath, hackage-db, http-client, lens
         , machines, machines-directory, MissingH, monad-loops, network
         , process, stdenv, tar, text, transformers, wreq, yaml, zlib
         }:
         mkDerivation {
           pname = "codex";
           version = "0.4.0.10";
           sha256 = "1dd23ef2991b14e6c212b91b86ef2c14de86ece126ab7bcf4ed926d1413ad812";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring Cabal containers cryptohash directory either
             filepath hackage-db http-client lens machines machines-directory
             process tar text transformers wreq yaml zlib
           ];
           executableHaskellDepends = [
             base bytestring Cabal directory either filepath hackage-db MissingH
             monad-loops network process transformers wreq yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aloiscochard/codex";
           description = "A ctags file generator for cabal project dependencies";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "colour" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "colour";
           version = "2.3.3";
           sha256 = "8d15a63494f8e2a06fe6dc38baee8e948adfae0e93749b9e3ce0fd8ece09b6e2";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Colour";
           description = "A model for human colour/color perception";
           license = stdenv.lib.licenses.mit;
         }) {};
      "commutative" = callPackage
        ({ mkDerivation, base, random, semigroups, stdenv }:
         mkDerivation {
           pname = "commutative";
           version = "0.0.1.4";
           sha256 = "0de746012c73543b5dcf649434046e36d5e158e0967e8e2ae122e85d5457c9cf";
           libraryHaskellDepends = [ base random semigroups ];
           doHaddock = false;
           doCheck = false;
           description = "Commutative binary operations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "comonad" = callPackage
        ({ mkDerivation, base, containers, contravariant, distributive
         , semigroups, stdenv, tagged, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "comonad";
           version = "4.2.7.2";
           sha256 = "b762261ef545a16881b66409398752e249a8e654a34088c66d9fabf9ba5a3b2b";
           revision = "1";
           editedCabalFile = "03yfb6x9654x5bfhgx5rfvkfjnnvip6lm6malifpacjjghwi9lnb";
           libraryHaskellDepends = [
             base containers contravariant distributive semigroups tagged
             transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/comonad/";
           description = "Comonads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "comonad-transformers" = callPackage
        ({ mkDerivation, base, comonad, stdenv }:
         mkDerivation {
           pname = "comonad-transformers";
           version = "4.0";
           sha256 = "dfec0c4ce1eccd34c228951454a8f2ebab0bfbdf1cde68a70688196db2b9ff8f";
           libraryHaskellDepends = [ base comonad ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/comonad-transformers/";
           description = "This package has been merged into comonad 4.0";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "comonads-fd" = callPackage
        ({ mkDerivation, base, comonad, stdenv }:
         mkDerivation {
           pname = "comonads-fd";
           version = "4.0";
           sha256 = "3a70386e2ef3d6f444585f082de42e842a47dfe7bdbd807550839faf1bd8b7a7";
           libraryHaskellDepends = [ base comonad ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/comonads-fd/";
           description = "This package has been merged into comonad 4.0";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "compactmap" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "compactmap";
           version = "0.1.4.1";
           sha256 = "6475d10742293f3a5b2ce1538846223deecffd9f0d5a59f70695b6ee78b606a9";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           description = "A read-only memory-efficient key-value store";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "compdata" = callPackage
        ({ mkDerivation, base, containers, deepseq, derive, mtl, QuickCheck
         , stdenv, template-haskell, th-expand-syns, transformers, tree-view
         }:
         mkDerivation {
           pname = "compdata";
           version = "0.10.1";
           sha256 = "61572f134ec555695905c28db76c8f1f50df531337e56d5c74a16a52c58840cb";
           revision = "1";
           editedCabalFile = "1srhyn1m9ls7hcsr84y56y41pl0mp58lldcd2vzgsdwspd95zb5y";
           libraryHaskellDepends = [
             base containers deepseq derive mtl QuickCheck template-haskell
             th-expand-syns transformers tree-view
           ];
           doHaddock = false;
           doCheck = false;
           description = "Compositional Data Types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "composition" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "composition";
           version = "1.0.2.1";
           sha256 = "7123300f5eca5a7cec4eb731dc0e9c2c44aabe26b37e6579582a7267d9f7ad6a";
           doHaddock = false;
           doCheck = false;
           description = "Combinators for unorthodox function composition";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "composition-extra" = callPackage
        ({ mkDerivation, base, composition, contravariant, stdenv }:
         mkDerivation {
           pname = "composition-extra";
           version = "2.0.0";
           sha256 = "c998244a8fd160af3dd7ee93c417f665af51a46a04ce6b7d4623f46596ba7129";
           libraryHaskellDepends = [ base composition contravariant ];
           doHaddock = false;
           doCheck = false;
           description = "Combinators for unorthodox structure composition";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "composition-tree" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "composition-tree";
           version = "0.2.0.3";
           sha256 = "40243191eb557a9a5d7a6986dee5aa56968a3f36901a2ca6035310cfc4b255cc";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liamoc/composition-tree";
           description = "Composition trees for arbitrary monoids";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "compressed" = callPackage
        ({ mkDerivation, base, comonad, containers, fingertree, hashable
         , keys, pointed, reducers, semigroupoids, semigroups, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "compressed";
           version = "3.10";
           sha256 = "9cd5724f8ad297b00924bdcf9b641f614122385c8aad8f2682cece20880549f8";
           revision = "1";
           editedCabalFile = "1fv1ix8bsqbsrzp44i7nz0wp1dwi3l2wdvqvp46a8vbakp5nif8a";
           libraryHaskellDepends = [
             base comonad containers fingertree hashable keys pointed reducers
             semigroupoids semigroups unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/compressed/";
           description = "Compressed containers and reducers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "concatenative" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "concatenative";
           version = "1.0.1";
           sha256 = "ed5997924518f0ca6b8afcd4e1ee10d30675bb4c4ba164a4d70b4ddbd8c6bc17";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://patch-tag.com/r/salazar/concatenative/snapshot/current/content/pretty";
           description = "A library for postfix control flow";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "conceit" = callPackage
        ({ mkDerivation, base, bifunctors, semigroupoids, semigroups
         , stdenv, void
         }:
         mkDerivation {
           pname = "conceit";
           version = "0.4.0.0";
           sha256 = "8972aafc4143cf2f6039d99747a9f1d191762636fd4453e7fc5bdb7c604a980b";
           libraryHaskellDepends = [
             base bifunctors semigroupoids semigroups void
           ];
           doHaddock = false;
           doCheck = false;
           description = "Concurrent actions that may fail with a value";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "concurrent-extra" = callPackage
        ({ mkDerivation, base, stdenv, stm, unbounded-delays }:
         mkDerivation {
           pname = "concurrent-extra";
           version = "0.7.0.10";
           sha256 = "6f27cc0a90f5f25b3c0a1e9e3c0e3b407538908c061c5b7da34461b76e1adc12";
           libraryHaskellDepends = [ base stm unbounded-delays ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/concurrent-extra";
           description = "Extra concurrency primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "concurrent-output" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, directory, exceptions
         , process, stdenv, stm, terminal-size, text, transformers, unix
         }:
         mkDerivation {
           pname = "concurrent-output";
           version = "1.7.7";
           sha256 = "d3f7330fa5f194ba759af30f4be0b8aaa509dc84ed24e8340a8cdbe470c6dfd1";
           libraryHaskellDepends = [
             ansi-terminal async base directory exceptions process stm
             terminal-size text transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           description = "Ungarble output from several threads or commands";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "concurrent-supply" = callPackage
        ({ mkDerivation, base, ghc-prim, hashable, stdenv }:
         mkDerivation {
           pname = "concurrent-supply";
           version = "0.1.8";
           sha256 = "ccf827dcd221298ae93fad6021c63a06707456de0671706b44f1f2fed867f21f";
           libraryHaskellDepends = [ base ghc-prim hashable ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/concurrent-supply/";
           description = "A fast concurrent unique identifier supply with a pure API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "conduit" = callPackage
        ({ mkDerivation, base, exceptions, lifted-base, mmorph
         , monad-control, mtl, resourcet, stdenv, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "conduit";
           version = "1.2.8";
           sha256 = "80d5df4c70adf2b7e87138c55fba25e05be30eaef0c9a7926d97ae0c0cdb17fb";
           libraryHaskellDepends = [
             base exceptions lifted-base mmorph monad-control mtl resourcet
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/conduit";
           description = "Streaming data processing library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-combinators" = callPackage
        ({ mkDerivation, base, base16-bytestring, base64-bytestring
         , bytestring, chunked-data, conduit, conduit-extra, filepath
         , monad-control, mono-traversable, mwc-random, primitive, resourcet
         , stdenv, text, transformers, transformers-base, unix, unix-compat
         , vector, void
         }:
         mkDerivation {
           pname = "conduit-combinators";
           version = "1.0.8.3";
           sha256 = "3b81e379c4dcb1cb6212bcbad1d0714e46f400ebf9ae2abe23621db500406dbe";
           libraryHaskellDepends = [
             base base16-bytestring base64-bytestring bytestring chunked-data
             conduit conduit-extra filepath monad-control mono-traversable
             mwc-random primitive resourcet text transformers transformers-base
             unix unix-compat vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable";
           description = "Commonly used conduit functions, for both chunked and unchunked data";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-connection" = callPackage
        ({ mkDerivation, base, bytestring, conduit, connection, resourcet
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "conduit-connection";
           version = "0.1.0.3";
           sha256 = "798eb9c87a37f8f8a15a8edc6674f975dad38ed8c19acf52b6439f88c280439a";
           libraryHaskellDepends = [
             base bytestring conduit connection resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdroege/conduit-connection";
           description = "Conduit source and sink for Network.Connection.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "conduit-extra" = callPackage
        ({ mkDerivation, async, attoparsec, base, blaze-builder, bytestring
         , conduit, directory, exceptions, filepath, monad-control, network
         , primitive, process, resourcet, stdenv, stm, streaming-commons
         , text, transformers, transformers-base
         }:
         mkDerivation {
           pname = "conduit-extra";
           version = "1.1.15";
           sha256 = "7bef29eb0db59c236519b0c5cac82183ed7741a535a57e0772aac1158e90bb8d";
           revision = "2";
           editedCabalFile = "0wz0g2mrrzdfr3ypr0h0q7i7r0my2dzyxi5fl58nx4as7kjcyhqx";
           libraryHaskellDepends = [
             async attoparsec base blaze-builder bytestring conduit directory
             exceptions filepath monad-control network primitive process
             resourcet stm streaming-commons text transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/conduit";
           description = "Batteries included conduit: adapters for common libraries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-iconv" = callPackage
        ({ mkDerivation, base, bytestring, conduit, stdenv }:
         mkDerivation {
           pname = "conduit-iconv";
           version = "0.1.1.1";
           sha256 = "54a25274f4f3590a6b35ac86a3753dc867a505867cae5d363f775781f4b6ac05";
           libraryHaskellDepends = [ base bytestring conduit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdroege/conduit-iconv";
           description = "Conduit for character encoding conversion";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "conduit-parse" = callPackage
        ({ mkDerivation, base, conduit, dlist, mtl, parsers, safe
         , safe-exceptions, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "conduit-parse";
           version = "0.1.2.0";
           sha256 = "15621f6b0e452d30fbd7738d98a6dfcdcb078f4d51044ed6e32ea227f07bce17";
           revision = "1";
           editedCabalFile = "0bsvcxpnv4z2cj4nzzisbh5mk9gp0lrf5f4xsnzg44ddr431525p";
           libraryHaskellDepends = [
             base conduit dlist mtl parsers safe safe-exceptions text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0ral/conduit-parse";
           description = "Parsing framework based on conduit";
           license = "unknown";
         }) {};
      "configuration-tools" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, attoparsec, base
         , base-unicode-symbols, base64-bytestring, bytestring, Cabal
         , case-insensitive, connection, data-default, deepseq, directory
         , dlist, enclosed-exceptions, filepath, http-client
         , http-client-tls, http-types, monad-control, mtl, network-uri
         , optparse-applicative, process, profunctors, stdenv, text, tls
         , transformers, unordered-containers, x509, x509-system
         , x509-validation, yaml
         }:
         mkDerivation {
           pname = "configuration-tools";
           version = "0.2.15";
           sha256 = "8231a7a893add8ae78ccb2b25e0fa98b0c0fd7d7a5f6e2e88d3711e93576121e";
           libraryHaskellDepends = [
             aeson ansi-wl-pprint attoparsec base base-unicode-symbols
             base64-bytestring bytestring Cabal case-insensitive connection
             data-default deepseq directory dlist enclosed-exceptions filepath
             http-client http-client-tls http-types monad-control mtl
             network-uri optparse-applicative process profunctors text tls
             transformers unordered-containers x509 x509-system x509-validation
             yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alephcloud/hs-configuration-tools";
           description = "Tools for specifying and parsing configurations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "configurator" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, directory, hashable
         , stdenv, text, unix-compat, unordered-containers
         }:
         mkDerivation {
           pname = "configurator";
           version = "0.3.0.0";
           sha256 = "6eb9996b672e9f7112ca23482c42fa533553312c3c13f38a8a06476e67c031b4";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bytestring directory hashable text unix-compat
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/configurator";
           description = "Configuration management";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "configurator-export" = callPackage
        ({ mkDerivation, base, base-compat, configurator, pretty
         , semigroups, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "configurator-export";
           version = "0.1.0.1";
           sha256 = "9dbd62ef29c97792ccdfdb1b3b79aedfa527dce49a9ac5054f21b29a7f9b824c";
           libraryHaskellDepends = [
             base base-compat configurator pretty semigroups text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mstksg/configurator-export";
           description = "Pretty printer and exporter for configurations from the \"configurator\" library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "connection" = callPackage
        ({ mkDerivation, base, byteable, bytestring, containers
         , data-default-class, network, socks, stdenv, tls, x509, x509-store
         , x509-system, x509-validation
         }:
         mkDerivation {
           pname = "connection";
           version = "0.2.6";
           sha256 = "03c16c28094a92ccf8fd58c61a4555b60158615914676c5c65c998a69ece37b0";
           libraryHaskellDepends = [
             base byteable bytestring containers data-default-class network
             socks tls x509 x509-store x509-system x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-connection";
           description = "Simple and easy network connections API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "constraints" = callPackage
        ({ mkDerivation, base, binary, deepseq, ghc-prim, hashable, mtl
         , stdenv, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "constraints";
           version = "0.8";
           sha256 = "4cd08765345a151f21a0a4c5ef0a85661f4e53ffe807a623d5502d9ed3ae1588";
           revision = "1";
           editedCabalFile = "0y0fb118m9v9dj82i8r78j0cdb0v195hgnappmbrglwcklips8zy";
           libraryHaskellDepends = [
             base binary deepseq ghc-prim hashable mtl transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/constraints/";
           description = "Constraint manipulation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "consul-haskell" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , connection, either, http-client, http-client-tls, http-types
         , lifted-async, lifted-base, monad-control, network, stdenv, stm
         , text, transformers
         }:
         mkDerivation {
           pname = "consul-haskell";
           version = "0.3";
           sha256 = "073efdcba614f92e3add447e21e5df032a1f46ec987aa3e12de2353e38121634";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring connection either
             http-client http-client-tls http-types lifted-async lifted-base
             monad-control network stm text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alphaHeavy/consul-haskell";
           description = "A consul client for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "containers-unicode-symbols" = callPackage
        ({ mkDerivation, base, base-unicode-symbols, containers, stdenv }:
         mkDerivation {
           pname = "containers-unicode-symbols";
           version = "0.3.1.1";
           sha256 = "4655f286a2d116cb5f2b89f472df54df739bf904ac8e932b2fd34d3f713e9b31";
           libraryHaskellDepends = [ base base-unicode-symbols containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
           description = "Unicode alternatives for common functions and operators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "continued-fractions" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "continued-fractions";
           version = "0.9.1.1";
           sha256 = "d0da6d0fca5f1ae750b53951ea50d22523a79b346028a50970add6fa950f173f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "/dev/null";
           description = "Continued fractions";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "contravariant" = callPackage
        ({ mkDerivation, base, semigroups, StateVar, stdenv, transformers
         , transformers-compat, void
         }:
         mkDerivation {
           pname = "contravariant";
           version = "1.4";
           sha256 = "e1666df1373ed784baa7d1e8e963bbc2d1f3c391578ac550ae74e7399173ee84";
           revision = "1";
           editedCabalFile = "0pki1z2aqqgb126wdia6fcsr2ccslvyxxs6s1fc4dxvg6qskpj9d";
           libraryHaskellDepends = [
             base semigroups StateVar transformers transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/contravariant/";
           description = "Contravariant functors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "contravariant-extras" = callPackage
        ({ mkDerivation, base, base-prelude, contravariant, stdenv
         , template-haskell, tuple-th
         }:
         mkDerivation {
           pname = "contravariant-extras";
           version = "0.3.3.1";
           sha256 = "f35d9df4d1c0fa767afca6500c6ab598f052128abc513259930ef5b6bc7c79d5";
           revision = "1";
           editedCabalFile = "0i7gwns134vbi11xja0sv5vqnc4kgd8zzaqyynd3m0rys0waqrik";
           libraryHaskellDepends = [
             base base-prelude contravariant template-haskell tuple-th
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/contravariant-extras";
           description = "Extras for the \"contravariant\" package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "control-bool" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "control-bool";
           version = "0.2.1";
           sha256 = "e46a85d2985a65f8d7ecbcdab0cfb12734b4d6e4c558631e6ab01fe742ed5581";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/control-bool";
           description = "Useful combinators for boolean expressions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "control-monad-free" = callPackage
        ({ mkDerivation, base, prelude-extras, stdenv, transformers }:
         mkDerivation {
           pname = "control-monad-free";
           version = "0.6.1";
           sha256 = "fea9173d3c29729a8e0789d654bf3b16928e0b740465bd8798ac2cfeec492286";
           revision = "1";
           editedCabalFile = "1901lm2md7flri4ms745lgla18x2k7v0xh51jbjbx6202ppcx3fh";
           libraryHaskellDepends = [ base prelude-extras transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pepeiborra/control-monad-free";
           description = "Free monads and monad transformers";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "control-monad-loop" = callPackage
        ({ mkDerivation, base, stdenv, transformers, transformers-base }:
         mkDerivation {
           pname = "control-monad-loop";
           version = "0.1";
           sha256 = "f29b08497897268daf4c547390dad69f4ee00032082e3d5305c33e6eee257300";
           libraryHaskellDepends = [ base transformers transformers-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joeyadams/haskell-control-monad-loop";
           description = "Simple monad transformer for imperative-style loops";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "control-monad-omega" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "control-monad-omega";
           version = "0.3.1";
           sha256 = "383b98ecf5db5add42f318672af9eb1c8b9d99ec42d48c240e209a93b5cf1186";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/luqui/control-monad-omega";
           description = "A breadth-first list monad";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "converge" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "converge";
           version = "0.1.0.1";
           sha256 = "72df25e93cd41af26c17c28d6c0930b22d51c903ee4fc181ca76c2fbe6a94878";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "/dev/null";
           description = "Limit operations for converging sequences";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "convertible" = callPackage
        ({ mkDerivation, base, bytestring, containers, mtl, old-locale
         , old-time, stdenv, text, time
         }:
         mkDerivation {
           pname = "convertible";
           version = "1.1.1.0";
           sha256 = "e9f9a70904b9995314c2aeb41580d654a2c76293feb955fb6bd63256c355286c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers mtl old-locale old-time text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/convertible";
           description = "Typeclasses and instances for converting between types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cookie" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring
         , data-default-class, deepseq, old-locale, stdenv, text, time
         }:
         mkDerivation {
           pname = "cookie";
           version = "0.4.2.1";
           sha256 = "06413091908e20ce154effdcd354d7eea1447380e29a8acdb15c3347512852e4";
           libraryHaskellDepends = [
             base blaze-builder bytestring data-default-class deepseq old-locale
             text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/cookie";
           description = "HTTP cookie parsing and rendering";
           license = stdenv.lib.licenses.mit;
         }) {};
      "country-codes" = callPackage
        ({ mkDerivation, aeson, base, shakespeare, stdenv, text }:
         mkDerivation {
           pname = "country-codes";
           version = "0.1.3";
           sha256 = "062843cebfcb4df513e4688456311f07a2eb693935a053ce2eade2c8d586d1b5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ aeson base shakespeare text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/country-codes";
           description = "ISO 3166 country codes and i18n names";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "courier" = callPackage
        ({ mkDerivation, async, base, bytestring, cereal, containers
         , hslogger, network, stdenv, stm, text, uuid
         }:
         mkDerivation {
           pname = "courier";
           version = "0.1.1.4";
           sha256 = "e4e808d564166d79b819c6736fb445486530be1271365c3e75cb5f3e3a2ed9a3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base bytestring cereal containers hslogger network stm text
             uuid
           ];
           executableHaskellDepends = [ base cereal ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/hargettp/courier";
           description = "A message-passing library for simplifying network applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cpphs" = callPackage
        ({ mkDerivation, base, directory, old-locale, old-time, polyparse
         , stdenv
         }:
         mkDerivation {
           pname = "cpphs";
           version = "1.20.2";
           sha256 = "dcb1d712a0f867c8a4fdd6e4ce7cbd33ce7912c76ac2db3a6157933fad8629db";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base directory old-locale old-time polyparse
           ];
           executableHaskellDepends = [
             base directory old-locale old-time polyparse
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/cpphs/";
           description = "A liberalised re-implementation of cpp, the C pre-processor";
           license = "LGPL";
         }) {};
      "cprng-aes" = callPackage
        ({ mkDerivation, base, byteable, bytestring, cipher-aes
         , crypto-random, stdenv
         }:
         mkDerivation {
           pname = "cprng-aes";
           version = "0.6.1";
           sha256 = "64592a01de8c6683c5e29f538dceee918887ffe211d87214a2e38559d72c21f3";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base byteable bytestring cipher-aes crypto-random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cprng-aes";
           description = "Crypto Pseudo Random Number Generator using AES in counter mode";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cpu" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "cpu";
           version = "0.1.2";
           sha256 = "5627feb4974a3ff8499c42cc958927e88761a2e004c4000d34e9cd6a15ad2974";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cpu";
           description = "Cpu information and properties helpers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cql" = callPackage
        ({ mkDerivation, base, bytestring, cereal, Decimal, iproute
         , network, stdenv, template-haskell, text, time, transformers, uuid
         , vector
         }:
         mkDerivation {
           pname = "cql";
           version = "3.0.7";
           sha256 = "54f8535ac3fe7abeb31557ec560f8135941346fc1ec8eb7922a9e0eda10fea76";
           libraryHaskellDepends = [
             base bytestring cereal Decimal iproute network template-haskell
             text time transformers uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/twittner/cql/";
           description = "Cassandra CQL binary protocol";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "cql-io" = callPackage
        ({ mkDerivation, async, auto-update, base, bytestring, containers
         , cql, cryptohash, data-default-class, exceptions, hashable
         , HsOpenSSL, iproute, lens, monad-control, mtl, mwc-random, network
         , retry, semigroups, stdenv, stm, text, time, tinylog, transformers
         , transformers-base, uuid, vector
         }:
         mkDerivation {
           pname = "cql-io";
           version = "0.15.2";
           sha256 = "cba9bdaae9056151a413760e5d9dea10604a7ef90867fd2c834ddc1a5b6d5669";
           libraryHaskellDepends = [
             async auto-update base bytestring containers cql cryptohash
             data-default-class exceptions hashable HsOpenSSL iproute lens
             monad-control mtl mwc-random network retry semigroups stm text time
             tinylog transformers transformers-base uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/twittner/cql-io/";
           description = "Cassandra CQL client";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "crackNum" = callPackage
        ({ mkDerivation, base, data-binary-ieee754, ieee754, stdenv }:
         mkDerivation {
           pname = "crackNum";
           version = "1.5";
           sha256 = "ef41fe4afa6866a578b17f84ee231ed70493696fdca9fe54341e124215c1e205";
           revision = "1";
           editedCabalFile = "04rfh3r4y38swvmyhp3r1x63zp0ki77r22frxgxmlfssv8x9gfd8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base data-binary-ieee754 ieee754 ];
           executableHaskellDepends = [ base data-binary-ieee754 ieee754 ];
           doHaddock = false;
           doCheck = false;
           description = "Crack various integer, floating-point data formats";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "criterion" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, base, binary, bytestring
         , cassava, containers, deepseq, directory, filepath, Glob, hastache
         , mtl, mwc-random, optparse-applicative, parsec, statistics, stdenv
         , text, time, transformers, transformers-compat, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "criterion";
           version = "1.1.1.0";
           sha256 = "e71855a7a9cd946044b2137f31603e0578f6e517a2ed667a2b479990cc0949dd";
           revision = "3";
           editedCabalFile = "13lp2d8db0m4paascrzw6smrm0v0p97pg62ix682psjz40awz28f";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-wl-pprint base binary bytestring cassava containers
             deepseq directory filepath Glob hastache mtl mwc-random
             optparse-applicative parsec statistics text time transformers
             transformers-compat vector vector-algorithms
           ];
           executableHaskellDepends = [ base optparse-applicative ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.serpentine.com/criterion";
           description = "Robust, reliable performance measurement and analysis";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cron" = callPackage
        ({ mkDerivation, attoparsec, base, mtl, mtl-compat, old-locale
         , semigroups, stdenv, text, time
         }:
         mkDerivation {
           pname = "cron";
           version = "0.4.2";
           sha256 = "31f186b9237c802260a7c1468e9b81006c086df1d6ad3d0d6ef51d9d2e8d07d3";
           revision = "1";
           editedCabalFile = "1phb5d25ss84wmjfywmkbsf696x449k0j66w0gm29lw4ggh3frsz";
           libraryHaskellDepends = [
             attoparsec base mtl mtl-compat old-locale semigroups text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/michaelxavier/cron";
           description = "Cron datatypes and Attoparsec parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "crypto-api" = callPackage
        ({ mkDerivation, base, bytestring, cereal, entropy, stdenv, tagged
         , transformers
         }:
         mkDerivation {
           pname = "crypto-api";
           version = "0.13.2";
           sha256 = "5331d511a9761d5073e6661148234228d88f8ace14e2994171f0bcf5183e82ed";
           libraryHaskellDepends = [
             base bytestring cereal entropy tagged transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TomMD/crypto-api";
           description = "A generic interface for cryptographic operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-api-tests" = callPackage
        ({ mkDerivation, base, bytestring, cereal, crypto-api, directory
         , filepath, HUnit, QuickCheck, stdenv, test-framework
         , test-framework-hunit, test-framework-quickcheck2
         }:
         mkDerivation {
           pname = "crypto-api-tests";
           version = "0.3";
           sha256 = "f44aecdd4ceb9da9f38330e84d9c17745a82b0611085ebb34442d2dce4207270";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal crypto-api directory filepath HUnit
             QuickCheck test-framework test-framework-hunit
             test-framework-quickcheck2
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://trac.haskell.org/crypto-api/wiki";
           description = "A test framework and KATs for cryptographic operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-cipher-tests" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , HUnit, mtl, QuickCheck, securemem, stdenv, test-framework
         , test-framework-hunit, test-framework-quickcheck2
         }:
         mkDerivation {
           pname = "crypto-cipher-tests";
           version = "0.0.11";
           sha256 = "dfb670b73d4091b8683634d0d4d5a40576d573ad160650d5e518244ced8b98a7";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types HUnit mtl QuickCheck
             securemem test-framework test-framework-hunit
             test-framework-quickcheck2
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Generic cryptography cipher tests";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-cipher-types" = callPackage
        ({ mkDerivation, base, byteable, bytestring, securemem, stdenv }:
         mkDerivation {
           pname = "crypto-cipher-types";
           version = "0.0.9";
           sha256 = "2073f6b70df7916aebe2da49d224497183662d56d19da87b76f70039430c0a0f";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base byteable bytestring securemem ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Generic cryptography cipher types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-numbers" = callPackage
        ({ mkDerivation, base, bytestring, crypto-random, ghc-prim
         , integer-gmp, stdenv, vector
         }:
         mkDerivation {
           pname = "crypto-numbers";
           version = "0.2.7";
           sha256 = "420aeb17e9cdcfdf8c950c6c6f10c54503c5524d36f611aa7238e3fd65f189a6";
           revision = "1";
           editedCabalFile = "1jjkhid8kwrz5894nad537rqxzzyx6b687bmgyk70nv0ny336j9b";
           libraryHaskellDepends = [
             base bytestring crypto-random ghc-prim integer-gmp vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-crypto-numbers";
           description = "Cryptographic numbers: functions and algorithms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-pubkey" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-numbers
         , crypto-pubkey-types, crypto-random, cryptohash, stdenv
         }:
         mkDerivation {
           pname = "crypto-pubkey";
           version = "0.2.8";
           sha256 = "c0ccf2f5c38517de1f1626cb0a2542f35aefad8842f8ad5c1fac0b8c9de8b56e";
           libraryHaskellDepends = [
             base byteable bytestring crypto-numbers crypto-pubkey-types
             crypto-random cryptohash
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-crypto-pubkey";
           description = "Public Key cryptography";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-pubkey-types" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, stdenv }:
         mkDerivation {
           pname = "crypto-pubkey-types";
           version = "0.4.3";
           sha256 = "7ed9f52281ec4e34021a91818fe45288e33d65bff937f60334a3f45be5a71c60";
           libraryHaskellDepends = [ asn1-encoding asn1-types base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-pubkey-types";
           description = "Generic cryptography Public keys algorithm types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-random" = callPackage
        ({ mkDerivation, base, bytestring, securemem, stdenv, unix, vector
         }:
         mkDerivation {
           pname = "crypto-random";
           version = "0.0.9";
           sha256 = "170a7a18441379c2d1c19b502ee5919026a19adc6e78641cd4fb40b1d69a6904";
           libraryHaskellDepends = [ base bytestring securemem unix vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-random";
           description = "Simple cryptographic random related types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-random-api" = callPackage
        ({ mkDerivation, base, bytestring, entropy, stdenv }:
         mkDerivation {
           pname = "crypto-random-api";
           version = "0.2.0";
           sha256 = "56e9777061bd9ce553683d097ba3a11fdc371724060b62ca103f1f291f9f897c";
           libraryHaskellDepends = [ base bytestring entropy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-random-api";
           description = "Simple random generators API for cryptography related code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptocipher" = callPackage
        ({ mkDerivation, base, cipher-aes, cipher-blowfish, cipher-camellia
         , cipher-des, cipher-rc4, crypto-cipher-types, stdenv
         }:
         mkDerivation {
           pname = "cryptocipher";
           version = "0.6.2";
           sha256 = "34b9e62dee36c4019dd0c0e86576295d0bd1bb573eeb24686ec635a09550e346";
           libraryHaskellDepends = [
             base cipher-aes cipher-blowfish cipher-camellia cipher-des
             cipher-rc4 crypto-cipher-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Symmetrical block and stream ciphers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash" = callPackage
        ({ mkDerivation, base, byteable, bytestring, cryptonite, ghc-prim
         , memory, stdenv
         }:
         mkDerivation {
           pname = "cryptohash";
           version = "0.11.9";
           sha256 = "c28f847fc1fcd65b6eea2e74a100300af940919f04bb21d391f6a773968f22fb";
           libraryHaskellDepends = [
             base byteable bytestring cryptonite ghc-prim memory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cryptohash";
           description = "collection of crypto hashes, fast, pure and practical";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , cryptohash, resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "cryptohash-conduit";
           version = "0.1.1";
           sha256 = "ea516d898d3e34dae6be3e8bc59c9f61a61cb1222233dbfe84a84bb0ded4b4ce";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra cryptohash resourcet
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cryptohash-conduit";
           description = "cryptohash conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-cryptoapi" = callPackage
        ({ mkDerivation, base, bytestring, cereal, crypto-api, cryptonite
         , memory, stdenv, tagged
         }:
         mkDerivation {
           pname = "cryptohash-cryptoapi";
           version = "0.1.4";
           sha256 = "717a8664ebfaa1c31aaec1d78c9b7c776a5adcfdfc50ad88e21a34566f72058e";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal crypto-api cryptonite memory tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-cryptohash-cryptoapi";
           description = "Crypto-api interfaces for cryptohash";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-sha256" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "cryptohash-sha256";
           version = "0.11.100.1";
           sha256 = "57b02338e9648639335788b422dd4c744543cb0991347472e2e3628a33c2f5d6";
           revision = "1";
           editedCabalFile = "0ywdlxf2y46pi2p502zkqwf6zpiamxg5s2l178xkpjy1r02d9lhg";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cryptohash-sha256";
           description = "Fast, pure and practical SHA-256 implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptol" = callPackage
        ({ mkDerivation, alex, ansi-terminal, array, async, base
         , base-compat, bytestring, containers, deepseq, deepseq-generics
         , directory, filepath, generic-trie, gitrev, GraphSCC, happy
         , haskeline, heredoc, monad-control, monadLib, old-time, presburger
         , pretty, process, QuickCheck, random, sbv, simple-smt, smtLib
         , stdenv, syb, template-haskell, text, tf-random, transformers
         , transformers-base, utf8-string
         }:
         mkDerivation {
           pname = "cryptol";
           version = "2.3.0";
           sha256 = "403577bb14a3ebb5683b2221d9b424ff53b8e8faddb64b27f47a6b00414138ce";
           revision = "1";
           editedCabalFile = "02zbq3ghi6j2f47b3rsi8rn5hf1ll87aiblw3dpcydd62j6fcssi";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array async base base-compat bytestring containers deepseq
             deepseq-generics directory filepath generic-trie gitrev GraphSCC
             heredoc monad-control monadLib old-time presburger pretty process
             QuickCheck random sbv simple-smt smtLib syb template-haskell text
             tf-random transformers transformers-base utf8-string
           ];
           libraryToolDepends = [ alex happy ];
           executableHaskellDepends = [
             ansi-terminal base base-compat containers deepseq directory
             filepath haskeline monad-control monadLib process random sbv
             tf-random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cryptol.net/";
           description = "Cryptol: The Language of Cryptography";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptonite" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, foundation, ghc-prim
         , integer-gmp, memory, stdenv
         }:
         mkDerivation {
           pname = "cryptonite";
           version = "0.24";
           sha256 = "17c3312343ef9bbfa87566d1f701d24870c2d34e015b104ff02faf1c9e1b5a86";
           libraryHaskellDepends = [
             base bytestring deepseq foundation ghc-prim integer-gmp memory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-crypto/cryptonite";
           description = "Cryptography Primitives sink";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptonite-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , cryptonite, resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "cryptonite-conduit";
           version = "0.1";
           sha256 = "a79cd5bc2f86093bbc45290889ca5a9c502804a3c19188874bc2ff3f2a97aac0";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra cryptonite resourcet
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-crypto/cryptonite-conduit";
           description = "cryptonite conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "css-syntax" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, scientific, stdenv
         , text
         }:
         mkDerivation {
           pname = "css-syntax";
           version = "0.0.5";
           sha256 = "3969e0bf83c81dd970cdde9bb07386071264f0f390215078eb86a5cfa1e50b9e";
           revision = "3";
           editedCabalFile = "0p32287dxngmz6bk2xpvj8vh0kawjcrdxxdnczmay6pa1bzyhrik";
           libraryHaskellDepends = [
             attoparsec base bytestring scientific text
           ];
           doHaddock = false;
           doCheck = false;
           description = "This package implments a parser for the CSS syntax";
           license = stdenv.lib.licenses.mit;
         }) {};
      "css-text" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, text }:
         mkDerivation {
           pname = "css-text";
           version = "0.1.2.1";
           sha256 = "dc0291da7ec756e4dda9dfadef303c78750eca63d07a5ad21dc4a3079cb021f6";
           libraryHaskellDepends = [ attoparsec base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "CSS parser and renderer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "csv" = callPackage
        ({ mkDerivation, base, filepath, parsec, stdenv }:
         mkDerivation {
           pname = "csv";
           version = "0.1.2";
           sha256 = "8cf43442325faa1368f9b55ad952beccf677d9980cdffa3d70a7f204a23ae600";
           libraryHaskellDepends = [ base filepath parsec ];
           doHaddock = false;
           doCheck = false;
           description = "CSV loader and dumper";
           license = stdenv.lib.licenses.mit;
         }) {};
      "csv-conduit" = callPackage
        ({ mkDerivation, array, attoparsec, base, blaze-builder, bytestring
         , conduit, conduit-extra, containers, data-default, ghc-prim
         , mmorph, monad-control, mtl, primitive, resourcet, stdenv, text
         , transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "csv-conduit";
           version = "0.6.6";
           sha256 = "7329056af16c2f81382ad0cc3437232b80e9910288daf687519a2e2cd2ee5d8b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array attoparsec base blaze-builder bytestring conduit
             conduit-extra containers data-default ghc-prim mmorph monad-control
             mtl primitive resourcet text transformers unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ozataman/csv-conduit";
           description = "A flexible, fast, conduit-based CSV parser library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ctrie" = callPackage
        ({ mkDerivation, atomic-primops, base, hashable, primitive, stdenv
         }:
         mkDerivation {
           pname = "ctrie";
           version = "0.1.1.0";
           sha256 = "8434b34f6c5980a8885eb0565c0d421c825a2b30574a367db2d121ed42fa5bb8";
           libraryHaskellDepends = [ atomic-primops base hashable primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mcschroeder/ctrie";
           description = "Non-blocking concurrent map";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cubicspline" = callPackage
        ({ mkDerivation, base, hmatrix, safe, stdenv }:
         mkDerivation {
           pname = "cubicspline";
           version = "0.1.2";
           sha256 = "5b6ced9ca65b0d01ddceaf18605c8f915491d8d4a6aaef73475c4e8d4b1a9b79";
           libraryHaskellDepends = [ base hmatrix safe ];
           doHaddock = false;
           doCheck = false;
           description = "Natural cubic spline interpolation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "curl" = callPackage
        ({ mkDerivation, base, bytestring, containers, curl, stdenv }:
         mkDerivation {
           pname = "curl";
           version = "1.3.8";
           sha256 = "9087c936bfcdb865bad3166baa3f12bf37acf076fa76010e3b5f82a1d485446e";
           revision = "1";
           editedCabalFile = "02sq2bjw5igc2k9f9ssh58k2ivii2xsvk5r00ky3cxh8j61qy86q";
           libraryHaskellDepends = [ base bytestring containers ];
           librarySystemDepends = [ curl ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell binding to libcurl";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) curl;};
      "darcs" = callPackage
        ({ mkDerivation, array, async, attoparsec, base, base16-bytestring
         , binary, bytestring, containers, cryptohash, curl, data-ordlist
         , directory, fgl, filepath, graphviz, hashable, haskeline, html
         , HTTP, mmap, mtl, network, network-uri, old-time, parsec, process
         , random, regex-applicative, regex-compat-tdfa, sandi, stdenv, tar
         , terminfo, text, time, transformers, transformers-compat, unix
         , unix-compat, utf8-string, vector, zip-archive, zlib
         }:
         mkDerivation {
           pname = "darcs";
           version = "2.12.0";
           sha256 = "17318d1b49ca4b1aa00a4bffc2ab30a448e7440ce1945eed9bf382d77582308d";
           configureFlags = [ "-fforce-char8-encoding" "-flibrary" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array async attoparsec base base16-bytestring binary bytestring
             containers cryptohash data-ordlist directory fgl filepath graphviz
             hashable haskeline html HTTP mmap mtl network network-uri old-time
             parsec process random regex-applicative regex-compat-tdfa sandi tar
             terminfo text time transformers transformers-compat unix
             unix-compat utf8-string vector zip-archive zlib
           ];
           librarySystemDepends = [ curl ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           postInstall = ''
             mkdir -p $out/etc/bash_completion.d
             mv contrib/darcs_completion $out/etc/bash_completion.d/darcs
           '';
           homepage = "http://darcs.net/";
           description = "a distributed, interactive, smart revision control system";
           license = "GPL";
         }) {inherit (pkgs) curl;};
      "data-accessor" = callPackage
        ({ mkDerivation, array, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "data-accessor";
           version = "0.2.2.7";
           sha256 = "3465227ad5f81059a885d354e2f3c108d550287580e6939e18350fa65e78c2ed";
           libraryHaskellDepends = [ array base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Record_access";
           description = "Utilities for accessing and manipulating fields of records";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-accessor-mtl" = callPackage
        ({ mkDerivation, base, data-accessor, mtl, stdenv }:
         mkDerivation {
           pname = "data-accessor-mtl";
           version = "0.2.0.4";
           sha256 = "10cf9166e2e046076b7e58987718e57b31408e7cada9f26c8ff111e0379814c5";
           libraryHaskellDepends = [ base data-accessor mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Record_access";
           description = "Use Accessor to access state in mtl State monad class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-binary-ieee754" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "data-binary-ieee754";
           version = "0.4.4";
           sha256 = "59975abed8f4caa602f0780c10a9b2493479e6feb71ad189bb10c3ac5678df0a";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/data-binary-ieee754/";
           description = "Parser/Serialiser for IEEE-754 floating-point values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "data-default" = callPackage
        ({ mkDerivation, base, data-default-class
         , data-default-instances-base, data-default-instances-containers
         , data-default-instances-dlist, data-default-instances-old-locale
         , stdenv
         }:
         mkDerivation {
           pname = "data-default";
           version = "0.5.3";
           sha256 = "ec5470f41bf6dc60d65953fc8788823ffff85fd59564a8bf9ea3c69928a83034";
           libraryHaskellDepends = [
             base data-default-class data-default-instances-base
             data-default-instances-containers data-default-instances-dlist
             data-default-instances-old-locale
           ];
           doHaddock = false;
           doCheck = false;
           description = "A class for types with a default value";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-class" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-default-class";
           version = "0.0.1";
           sha256 = "adc8ee80a6f0e5903339a2b8685220b32bc3e23856d3c12186cc464ae5c88f31";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A class for types with a default value";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-instances-base" = callPackage
        ({ mkDerivation, base, data-default-class, stdenv }:
         mkDerivation {
           pname = "data-default-instances-base";
           version = "0.1.0";
           sha256 = "9e00bc5dc8da3c53a2cb26c3c55d1ffea8272538aec678f65b7c238da09c4636";
           libraryHaskellDepends = [ base data-default-class ];
           doHaddock = false;
           doCheck = false;
           description = "Default instances for types in base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-instances-containers" = callPackage
        ({ mkDerivation, base, containers, data-default-class, stdenv }:
         mkDerivation {
           pname = "data-default-instances-containers";
           version = "0.0.1";
           sha256 = "a55e07af005c9815d82f3fc95e125db82994377c9f4a769428878701d4ec081a";
           libraryHaskellDepends = [ base containers data-default-class ];
           doHaddock = false;
           doCheck = false;
           description = "Default instances for types in containers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-instances-dlist" = callPackage
        ({ mkDerivation, base, data-default-class, dlist, stdenv }:
         mkDerivation {
           pname = "data-default-instances-dlist";
           version = "0.0.1";
           sha256 = "7d683711cbf08abd7adcd5ac2be825381308d220397315a5570fe61b719b5959";
           libraryHaskellDepends = [ base data-default-class dlist ];
           doHaddock = false;
           doCheck = false;
           description = "Default instances for types in dlist";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-instances-old-locale" = callPackage
        ({ mkDerivation, base, data-default-class, old-locale, stdenv }:
         mkDerivation {
           pname = "data-default-instances-old-locale";
           version = "0.0.1";
           sha256 = "60d3b02922958c4908d7bf2b24ddf61511665745f784227d206745784b0c0802";
           libraryHaskellDepends = [ base data-default-class old-locale ];
           doHaddock = false;
           doCheck = false;
           description = "Default instances for types in old-locale";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-hash" = callPackage
        ({ mkDerivation, array, base, containers, stdenv }:
         mkDerivation {
           pname = "data-hash";
           version = "0.2.0.1";
           sha256 = "9117dd49013ca28ff188fc71c3595ac3af23d56d301c1f39bac93d44d8c60bbe";
           libraryHaskellDepends = [ array base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Combinators for building fast hashing functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-inttrie" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-inttrie";
           version = "0.1.2";
           sha256 = "8ddae7ad7d3cafdf349d93c0eed5767ab1213d854980bc28d7d935163c5f1df9";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/luqui/data-inttrie";
           description = "A lazy, infinite trie of integers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-lens-light" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell }:
         mkDerivation {
           pname = "data-lens-light";
           version = "0.1.2.2";
           sha256 = "72d3e6a73bde4a32eccd2024eb58ca96da962d4b659d76baed4ab37f28dcb36e";
           libraryHaskellDepends = [ base mtl template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/data-lens-light";
           description = "Simple lenses, minimum dependencies";
           license = stdenv.lib.licenses.mit;
         }) {};
      "data-memocombinators" = callPackage
        ({ mkDerivation, array, base, data-inttrie, stdenv }:
         mkDerivation {
           pname = "data-memocombinators";
           version = "0.5.1";
           sha256 = "b4341d2024b84a43f92edc39f6d6766bf4f0f00a40fd834b9f6f8e987b606ed7";
           libraryHaskellDepends = [ array base data-inttrie ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/luqui/data-memocombinators";
           description = "Combinators for building memo tables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-or" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-or";
           version = "1.0.0.5";
           sha256 = "9defb64f1c7210460a940beb7f32ba1c79f363fbf3a5bd126feb876930c6e672";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "A data type for non-exclusive disjunction";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-ordlist" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-ordlist";
           version = "0.4.7.0";
           sha256 = "6f6c1e7a9a9155ad78ca78cb9abd6f7e2e1c78b3e549b179dc0874e6428f490d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Set and bag operations on ordered lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-reify" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "data-reify";
           version = "0.6.1";
           sha256 = "61350a1e96cb1276c2b6b8b13fa1bade5d4e63c702509a3f5e90bbc19ad9b202";
           revision = "1";
           editedCabalFile = "0ixlibqrz7fd4bg9vnnd431a9kqvz4ajx8sbgyvpx9l2yjrabwzp";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://ku-fpg.github.io/software/data-reify/";
           description = "Reify a recursive data structure into an explicit graph";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dataurl" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "dataurl";
           version = "0.1.0.0";
           sha256 = "b1e72b48dbe72520f0b43b06ae75cb025e9750213982583f527e16b605660fb2";
           libraryHaskellDepends = [
             attoparsec base base64-bytestring bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/dataurl#readme";
           description = "Handle data-urls";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dawg-ord" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, transformers
         , vector
         }:
         mkDerivation {
           pname = "dawg-ord";
           version = "0.5.0.2";
           sha256 = "7a15c20781257d9002d3037828083da2f7adc37b04cd02c68439f9882f246a82";
           libraryHaskellDepends = [
             base containers mtl transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kawu/dawg-ord";
           description = "Directed acyclic word graphs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dbmigrations" = callPackage
        ({ mkDerivation, base, bytestring, configurator, containers
         , directory, fgl, filepath, HDBC, HDBC-postgresql, HDBC-sqlite3
         , mtl, mysql, mysql-simple, random, split, stdenv, template-haskell
         , text, time, yaml-light
         }:
         mkDerivation {
           pname = "dbmigrations";
           version = "1.1.1";
           sha256 = "d36742052ed45f933e7883bb542c070c881685df721e526d4abc25e7a1444c9f";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring configurator containers directory fgl filepath HDBC
             HDBC-postgresql HDBC-sqlite3 mtl mysql mysql-simple random split
             template-haskell text time yaml-light
           ];
           executableHaskellDepends = [ base configurator ];
           doHaddock = false;
           doCheck = false;
           description = "An implementation of relational database \"migrations\"";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dbus" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, libxml-sax
         , network, parsec, random, stdenv, text, transformers, unix, vector
         , xml-types
         }:
         mkDerivation {
           pname = "dbus";
           version = "0.10.12";
           sha256 = "f6d7b5640eb03e9598e38b1a2b2e7af1e9d357f3f845fc9528f9750965b92d54";
           revision = "1";
           editedCabalFile = "07i70canwf2nfxbba6c7lspn4syxq0qka0glv0i109fgsdvrjvh5";
           libraryHaskellDepends = [
             base bytestring cereal containers libxml-sax network parsec random
             text transformers unix vector xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-dbus/";
           description = "A client library for the D-Bus IPC system";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "debian" = callPackage
        ({ mkDerivation, base, bytestring, bzlib, containers, directory
         , either, exceptions, filepath, HaXml, HUnit, ListLike, mtl
         , network, network-uri, old-locale, parsec, pretty, process
         , process-extras, pureMD5, regex-compat, regex-tdfa, stdenv
         , template-haskell, text, time, unix, Unixutils, utf8-string, zlib
         }:
         mkDerivation {
           pname = "debian";
           version = "3.89";
           sha256 = "ec0da528635c8438f26f29a60f12c3ff606ec696ab641cf40b56b1d5ec92401c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring bzlib containers directory either exceptions
             filepath HaXml HUnit ListLike mtl network network-uri old-locale
             parsec pretty process process-extras pureMD5 regex-compat
             regex-tdfa template-haskell text time unix Unixutils utf8-string
             zlib
           ];
           executableHaskellDepends = [
             base directory filepath HaXml pretty process unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ddssff/debian-haskell";
           description = "Modules for working with the Debian package system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "debian-build" = callPackage
        ({ mkDerivation, base, Cabal, directory, filepath, process, split
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "debian-build";
           version = "0.9.2.0";
           sha256 = "7d911ef9300a073f8e0db17c3480790a8c6da712ed8141c65098fc7ca99da750";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base Cabal directory filepath process split transformers
           ];
           executableHaskellDepends = [ base filepath transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://twitter.com/khibino/";
           description = "Debian package build sequence tools";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "declarative" = callPackage
        ({ mkDerivation, base, hasty-hamiltonian, lens, mcmc-types
         , mighty-metropolis, mwc-probability, pipes, primitive
         , speedy-slice, stdenv, transformers
         }:
         mkDerivation {
           pname = "declarative";
           version = "0.2.3";
           sha256 = "f6b0a65295f59d9c696257d667fa9995d9ebefc38b6d98a354fdc428d65d65aa";
           libraryHaskellDepends = [
             base hasty-hamiltonian lens mcmc-types mighty-metropolis
             mwc-probability pipes primitive speedy-slice transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/declarative";
           description = "DIY Markov Chains";
           license = stdenv.lib.licenses.mit;
         }) {};
      "deepseq-generics" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, stdenv }:
         mkDerivation {
           pname = "deepseq-generics";
           version = "0.1.1.2";
           sha256 = "839e1d6ead4c45faa4165f0e82aa8a9d1df7a7c1118bfb1787e8268bfa8bfb06";
           revision = "1";
           editedCabalFile = "1zf97hnh5djrg00ibjgq79hwcapvvivhrqlc9m87cy16x5zqcliz";
           libraryHaskellDepends = [ base deepseq ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/deepseq-generics";
           description = "GHC.Generics-based Control.DeepSeq.rnf implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dejafu" = callPackage
        ({ mkDerivation, array, atomic-primops, base, containers, deepseq
         , dpor, exceptions, monad-control, monad-loops, mtl, semigroups
         , stdenv, stm, template-haskell, transformers, transformers-base
         }:
         mkDerivation {
           pname = "dejafu";
           version = "0.3.2.1";
           sha256 = "cf3ed66e7b3cf9b45f42227d45cc6136f36b1a06744de1fba2b3aebe84d0777f";
           libraryHaskellDepends = [
             array atomic-primops base containers deepseq dpor exceptions
             monad-control monad-loops mtl semigroups stm template-haskell
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Overloadable primitives for testable, potentially non-deterministic, concurrency";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dependent-map" = callPackage
        ({ mkDerivation, base, containers, dependent-sum, stdenv }:
         mkDerivation {
           pname = "dependent-map";
           version = "0.2.3.0";
           sha256 = "4a0b9c615dab33e9ef3b628ed88664e9d24e33fdb29b3aa5c66cb4b3fc1b2a20";
           revision = "1";
           editedCabalFile = "122030jpx296bf8nlbddn2cn04h75j05v2if0d4kpi64rgix7sjf";
           libraryHaskellDepends = [ base containers dependent-sum ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/dependent-map";
           description = "Dependent finite maps (partial dependent products)";
           license = "unknown";
         }) {};
      "dependent-sum" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "dependent-sum";
           version = "0.3.2.2";
           sha256 = "34fbe4675fa3a6ea7ca34913954657a3defee785bd39d55cffcf375f4a3cf864";
           revision = "2";
           editedCabalFile = "0rqv1kvgqdmykk2dw4nzxfxvfvqvvgw6ga2vdpf5p0xnxyp6bfc2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/dependent-sum";
           description = "Dependent sum type";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "dependent-sum-template" = callPackage
        ({ mkDerivation, base, dependent-sum, stdenv, template-haskell
         , th-extras
         }:
         mkDerivation {
           pname = "dependent-sum-template";
           version = "0.0.0.5";
           sha256 = "b23f584da3a5d8bc3b625a186ab696bed5a8a63d71129485b9fb49262a600765";
           libraryHaskellDepends = [
             base dependent-sum template-haskell th-extras
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "/dev/null";
           description = "Template Haskell code to generate instances of classes in dependent-sum package";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "derive" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , haskell-src-exts, pretty, process, stdenv, syb, template-haskell
         , transformers, uniplate
         }:
         mkDerivation {
           pname = "derive";
           version = "2.5.26";
           sha256 = "b6ef2e5e7fa79d3b76053c97bf88cd2ab77fe15065bf321a135a29d18b4e4a6d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers directory filepath haskell-src-exts
             pretty process syb template-haskell transformers uniplate
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/derive#readme";
           description = "A program and library to derive instances for data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "deriving-compat" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "deriving-compat";
           version = "0.2";
           sha256 = "763bb09a78ad4ffa00b30a3655bd01a7f2b816ebec8571c7cf059d481998b42a";
           libraryHaskellDepends = [
             base containers ghc-prim template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-compat/deriving-compat";
           description = "Backports of GHC deriving extensions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "descriptive" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, containers, mtl
         , scientific, stdenv, text, transformers, vector
         }:
         mkDerivation {
           pname = "descriptive";
           version = "0.9.4";
           sha256 = "795ec65756bf87ec6ea4c92d85a25d0eb0d8cfa1df40685ddcf74b83099bba2f";
           revision = "1";
           editedCabalFile = "0jwx418kwnw8b2i48fh3ihnwak88jzn5kvbcbz66ninqalbqiwrp";
           libraryHaskellDepends = [
             aeson base bifunctors containers mtl scientific text transformers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/descriptive";
           description = "Self-describing consumers/parsers; forms, cmd-line args, JSON, etc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dhall" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, case-insensitive
         , cborg, containers, contravariant, cryptonite, Diff, directory
         , exceptions, filepath, hashable, haskeline, http-client
         , http-client-tls, insert-ordered-containers, lens-family-core
         , megaparsec, memory, mtl, optparse-applicative, parsers
         , prettyprinter, prettyprinter-ansi-terminal, repline, scientific
         , semigroups, serialise, stdenv, template-haskell, text
         , transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "dhall";
           version = "1.17.0";
           sha256 = "a029fea856224a79f0b7cc56fbb5c566d0dfd1d915d214f682006cabf1274791";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base bytestring case-insensitive cborg containers
             contravariant cryptonite Diff directory exceptions filepath
             hashable haskeline http-client http-client-tls
             insert-ordered-containers lens-family-core megaparsec memory mtl
             optparse-applicative parsers prettyprinter
             prettyprinter-ansi-terminal repline scientific semigroups serialise
             template-haskell text transformers unordered-containers vector
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A configuration language guaranteed to terminate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dhall-to-etlas" = callPackage
        ({ mkDerivation, base, bytestring, containers, contravariant, dhall
         , directory, etlas-cabal, fetchgit, filepath, formatting, hashable
         , insert-ordered-containers, microlens, optparse-applicative
         , prettyprinter, semigroups, stdenv, text, transformers, vector
         }:
         mkDerivation {
           pname = "dhall-to-etlas";
           version = "1.3.0.1";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           postUnpack = "sourceRoot+=/etlas/dhall-to-etlas; echo source root reset to $sourceRoot";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers contravariant dhall etlas-cabal
             formatting hashable insert-ordered-containers semigroups text
             transformers vector
           ];
           executableHaskellDepends = [
             base bytestring dhall directory etlas-cabal filepath
             insert-ordered-containers microlens optparse-applicative
             prettyprinter text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/eta-lang/dhall-to-etlas";
           description = "Compile Dhall expressions to Etlas files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "diagrams" = callPackage
        ({ mkDerivation, diagrams-contrib, diagrams-core, diagrams-lib
         , diagrams-svg, stdenv
         }:
         mkDerivation {
           pname = "diagrams";
           version = "1.3.0.1";
           sha256 = "ee8abf5c262955a6a535ddc297bdf829ccd17bc179f61faf953371118ec4e4a7";
           libraryHaskellDepends = [
             diagrams-contrib diagrams-core diagrams-lib diagrams-svg
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Embedded domain-specific language for declarative vector graphics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-builder" = callPackage
        ({ mkDerivation, base, base-orphans, bytestring, cmdargs
         , diagrams-cairo, diagrams-lib, diagrams-postscript
         , diagrams-rasterific, diagrams-svg, directory, exceptions
         , filepath, hashable, haskell-src-exts, hint, JuicyPixels, lens
         , mtl, split, stdenv, svg-builder, transformers
         }:
         mkDerivation {
           pname = "diagrams-builder";
           version = "0.7.2.4";
           sha256 = "34e7fbb9952cd5e3444f34bce5e1f3431017a18a42abc7174bc8b4635c496ebc";
           configureFlags = [ "-fcairo" "-fps" "-frasterific" "-fsvg" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base-orphans cmdargs diagrams-lib directory exceptions
             filepath hashable haskell-src-exts hint lens mtl split transformers
           ];
           executableHaskellDepends = [
             base bytestring cmdargs diagrams-cairo diagrams-lib
             diagrams-postscript diagrams-rasterific diagrams-svg directory
             filepath JuicyPixels lens svg-builder
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "hint-based build service for the diagrams graphics EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-cairo" = callPackage
        ({ mkDerivation, array, base, bytestring, cairo, colour, containers
         , data-default-class, diagrams-core, diagrams-lib, filepath
         , hashable, JuicyPixels, lens, mtl, optparse-applicative, pango
         , split, statestack, stdenv, transformers, unix, vector
         }:
         mkDerivation {
           pname = "diagrams-cairo";
           version = "1.3.1.1";
           sha256 = "00c635a58a480033a2fc1240b703a4afab721f990e1412f57b8fa6becd6878b8";
           libraryHaskellDepends = [
             array base bytestring cairo colour containers data-default-class
             diagrams-core diagrams-lib filepath hashable JuicyPixels lens mtl
             optparse-applicative pango split statestack transformers unix
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Cairo backend for diagrams drawing EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-canvas" = callPackage
        ({ mkDerivation, base, blank-canvas, cmdargs, containers
         , data-default-class, diagrams-core, diagrams-lib, lens, mtl
         , NumInstances, optparse-applicative, statestack, stdenv, text
         }:
         mkDerivation {
           pname = "diagrams-canvas";
           version = "1.3.0.6";
           sha256 = "20e905738a7a78061690fc55209041b2c3cdd6f6b6a534b6fdb75728a595a0ff";
           libraryHaskellDepends = [
             base blank-canvas cmdargs containers data-default-class
             diagrams-core diagrams-lib lens mtl NumInstances
             optparse-applicative statestack text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "HTML5 canvas backend for diagrams drawing EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-contrib" = callPackage
        ({ mkDerivation, base, circle-packing, colour, containers
         , data-default, data-default-class, diagrams-core, diagrams-lib
         , diagrams-solve, force-layout, lens, linear, MonadRandom, mtl
         , parsec, random, semigroups, split, stdenv, text
         }:
         mkDerivation {
           pname = "diagrams-contrib";
           version = "1.3.0.12";
           sha256 = "a576a63fc9f216558415303ace621e42778d5db08286b838dd850e9640279620";
           libraryHaskellDepends = [
             base circle-packing colour containers data-default
             data-default-class diagrams-core diagrams-lib diagrams-solve
             force-layout lens linear MonadRandom mtl parsec random semigroups
             split text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "Collection of user contributions to diagrams EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-core" = callPackage
        ({ mkDerivation, adjunctions, base, containers, distributive
         , dual-tree, lens, linear, monoid-extras, mtl, semigroups, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "diagrams-core";
           version = "1.3.0.8";
           sha256 = "356f5fd77916422616e77fcdcde44aa76c0ff74c9ec9d56c20a54abd96459c73";
           libraryHaskellDepends = [
             adjunctions base containers distributive dual-tree lens linear
             monoid-extras mtl semigroups unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Core libraries for diagrams EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-gtk" = callPackage
        ({ mkDerivation, base, cairo, diagrams-cairo, diagrams-lib, gtk
         , stdenv
         }:
         mkDerivation {
           pname = "diagrams-gtk";
           version = "1.3.0.2";
           sha256 = "ef4751e30f9b51ddb78f5310c5fd890ab9f26dd7cf409e3dbf39a96e73884c29";
           libraryHaskellDepends = [
             base cairo diagrams-cairo diagrams-lib gtk
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "Backend for rendering diagrams directly to GTK windows";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-haddock" = callPackage
        ({ mkDerivation, ansi-terminal, base, base64-bytestring, bytestring
         , Cabal, cautious-file, cmdargs, containers, cpphs
         , diagrams-builder, diagrams-lib, diagrams-svg, directory, filepath
         , haskell-src-exts, lens, linear, lucid-svg, mtl, parsec, split
         , stdenv, strict, text, uniplate
         }:
         mkDerivation {
           pname = "diagrams-haddock";
           version = "0.3.0.10";
           sha256 = "49ed17c49c1aae075892e9992b691867e418944a37141f028a7a2e6220d6f0af";
           revision = "1";
           editedCabalFile = "0v9n9bfzvdsgxc6x1fg5dlpa54yksp77gya5qngvl0wdj1d5szf7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base base64-bytestring bytestring cautious-file
             containers cpphs diagrams-builder diagrams-lib diagrams-svg
             directory filepath haskell-src-exts lens linear lucid-svg mtl
             parsec split strict text uniplate
           ];
           executableHaskellDepends = [
             base Cabal cmdargs cpphs directory filepath
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "Preprocessor for embedding diagrams in Haddock documentation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-html5" = callPackage
        ({ mkDerivation, base, cmdargs, containers, data-default-class
         , diagrams-core, diagrams-lib, lens, mtl, NumInstances
         , optparse-applicative, split, statestack, static-canvas, stdenv
         , text
         }:
         mkDerivation {
           pname = "diagrams-html5";
           version = "1.3.0.7";
           sha256 = "8bddc55b95b6e0616552d09e59ae74ae315d296ef816552c5d7649035d49f7a4";
           libraryHaskellDepends = [
             base cmdargs containers data-default-class diagrams-core
             diagrams-lib lens mtl NumInstances optparse-applicative split
             statestack static-canvas text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "HTML5 canvas backend for diagrams drawing EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-lib" = callPackage
        ({ mkDerivation, active, adjunctions, array, base, colour
         , containers, data-default-class, diagrams-core, diagrams-solve
         , directory, distributive, dual-tree, exceptions, filepath
         , fingertree, fsnotify, hashable, intervals, JuicyPixels, lens
         , linear, monoid-extras, mtl, optparse-applicative, process
         , semigroups, stdenv, tagged, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "diagrams-lib";
           version = "1.3.1.4";
           sha256 = "0ed2c2b81a872abc747dffcce74a7b19714f81a78dc44426d9d2baa999009617";
           libraryHaskellDepends = [
             active adjunctions array base colour containers data-default-class
             diagrams-core diagrams-solve directory distributive dual-tree
             exceptions filepath fingertree fsnotify hashable intervals
             JuicyPixels lens linear monoid-extras mtl optparse-applicative
             process semigroups tagged text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Embedded domain-specific language for declarative graphics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-postscript" = callPackage
        ({ mkDerivation, base, containers, data-default-class
         , diagrams-core, diagrams-lib, dlist, filepath, hashable, lens
         , monoid-extras, mtl, semigroups, split, statestack, stdenv
         }:
         mkDerivation {
           pname = "diagrams-postscript";
           version = "1.3.0.7";
           sha256 = "f045ad88def2ce2d8ebb641a7c48eacfe6d1eccf2baf42f50935ad2a21def751";
           libraryHaskellDepends = [
             base containers data-default-class diagrams-core diagrams-lib dlist
             filepath hashable lens monoid-extras mtl semigroups split
             statestack
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "Postscript backend for diagrams drawing EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-rasterific" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-default-class
         , diagrams-core, diagrams-lib, filepath, FontyFruity, hashable
         , JuicyPixels, lens, mtl, optparse-applicative, Rasterific, split
         , stdenv, unix
         }:
         mkDerivation {
           pname = "diagrams-rasterific";
           version = "1.3.1.8";
           sha256 = "b76001105055563e2a51f6dbff2e1c12547644014f748e7564f1ded42b75cb99";
           revision = "1";
           editedCabalFile = "0hc04gi6qibpxl7661f64pzi16awywc7ahyd6wlj059lasq08l4s";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers data-default-class diagrams-core
             diagrams-lib filepath FontyFruity hashable JuicyPixels lens mtl
             optparse-applicative Rasterific split unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "Rasterific backend for diagrams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-solve" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "diagrams-solve";
           version = "0.1.0.1";
           sha256 = "71e53a4c8c2794719d057e6bf52b996b13d52ac9d62191df134ba05062453bde";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Pure Haskell solver routines used by diagrams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-svg" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, colour
         , containers, diagrams-core, diagrams-lib, directory, filepath
         , hashable, JuicyPixels, lens, lucid-svg, monoid-extras, mtl
         , old-time, optparse-applicative, process, semigroups, split
         , stdenv, text, time
         }:
         mkDerivation {
           pname = "diagrams-svg";
           version = "1.3.1.10";
           sha256 = "a8293856f359d7d9656bb0b5ca5c97cc13b6ab18eaa71ed30112038cfe0a39a7";
           libraryHaskellDepends = [
             base base64-bytestring bytestring colour containers diagrams-core
             diagrams-lib directory filepath hashable JuicyPixels lens lucid-svg
             monoid-extras mtl old-time optparse-applicative process semigroups
             split text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "SVG backend for diagrams drawing EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dice" = callPackage
        ({ mkDerivation, base, parsec, random-fu, stdenv, transformers }:
         mkDerivation {
           pname = "dice";
           version = "0.1";
           sha256 = "e13fe7dec8394aeddb71fb0e0ac68d8750096bfcc198a80d7bc30d94e01edde5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base parsec random-fu transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Simplistic D&D style dice-rolling system";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "diff3" = callPackage
        ({ mkDerivation, base, Diff, stdenv }:
         mkDerivation {
           pname = "diff3";
           version = "0.2.0.3";
           sha256 = "e84c84f03bd100c2ae950b218397fb6af1f838ca1fce8b876817610d65b0ae7d";
           libraryHaskellDepends = [ base Diff ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/diff3.git";
           description = "Perform a 3-way difference of documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "digest" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "digest";
           version = "0.0.1.2";
           sha256 = "641717eb16392abf8965986a9e8dc21eebf1d97775bbb6923c7b7f8fee17fe11";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ zlib ];
           doHaddock = false;
           doCheck = false;
           description = "Various cryptographic hashes for bytestrings; CRC32 and Adler32 for now";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) zlib;};
      "digestive-bootstrap" = callPackage
        ({ mkDerivation, base, blaze-bootstrap, blaze-html
         , digestive-functors, digestive-functors-blaze, http-types, stdenv
         , text
         }:
         mkDerivation {
           pname = "digestive-bootstrap";
           version = "0.1.0.1";
           sha256 = "eb7d7586903f07c4519c4ff862923344e912268f686394cb4f550bd9ef0418f7";
           libraryHaskellDepends = [
             base blaze-bootstrap blaze-html digestive-functors
             digestive-functors-blaze http-types text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Speed up form designing using digestive functors and bootstrap";
           license = stdenv.lib.licenses.mit;
         }) {};
      "digestive-functors" = callPackage
        ({ mkDerivation, base, bytestring, containers, mtl, old-locale
         , stdenv, text, time
         }:
         mkDerivation {
           pname = "digestive-functors";
           version = "0.8.0.1";
           sha256 = "ae3d5cb376c0065a59313424c408f3a81a1d4a1839214d1a60764e3708abf3c6";
           libraryHaskellDepends = [
             base bytestring containers mtl old-locale text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jaspervdj/digestive-functors";
           description = "A practical formlet library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "digestive-functors-aeson" = callPackage
        ({ mkDerivation, aeson, base, containers, digestive-functors, lens
         , lens-aeson, safe, stdenv, text, vector
         }:
         mkDerivation {
           pname = "digestive-functors-aeson";
           version = "1.1.20";
           sha256 = "017594d7489f33a2d162eb83f4f64bc110b3bd0cfb54982e3220ac3abc440bcc";
           libraryHaskellDepends = [
             aeson base containers digestive-functors lens lens-aeson safe text
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/digestive-functors-aeson";
           description = "Run digestive-functors forms against JSON";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "digestive-functors-blaze" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, digestive-functors
         , stdenv, text
         }:
         mkDerivation {
           pname = "digestive-functors-blaze";
           version = "0.6.1.0";
           sha256 = "4be758620386fc395367b15b81b9fb7373e5ee370ab9af52fa03b2c24c579f0d";
           libraryHaskellDepends = [
             base blaze-html blaze-markup digestive-functors text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jaspervdj/digestive-functors";
           description = "Blaze frontend for the digestive-functors library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "digestive-functors-lucid" = callPackage
        ({ mkDerivation, base, digestive-functors, lucid, stdenv, text }:
         mkDerivation {
           pname = "digestive-functors-lucid";
           version = "0.0.0.4";
           sha256 = "21aef49fc72a46bc057a1f46f71c665946561a04b667af10581ff5f4dd07b0e0";
           libraryHaskellDepends = [ base digestive-functors lucid text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/digestive-functors-lucid";
           description = "Lucid frontend for the digestive-functors library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "digits" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "digits";
           version = "0.2";
           sha256 = "f40437896a7866b210cdb45bfe025d65391ebf9980ea7a92206d6320e79949a3";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           description = "Converts integers to lists of digits and back";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dimensional" = callPackage
        ({ mkDerivation, base, deepseq, exact-pi, numtype-dk, stdenv
         , vector
         }:
         mkDerivation {
           pname = "dimensional";
           version = "1.0.1.3";
           sha256 = "3bc566a59227115325caec0ea00a35e025e5ea471a3ab531cf595e5365aa93a7";
           libraryHaskellDepends = [
             base deepseq exact-pi numtype-dk vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bjornbm/dimensional/";
           description = "Statically checked physical dimensions, using Type Families and Data Kinds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "direct-sqlite" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "direct-sqlite";
           version = "2.3.19";
           sha256 = "f47e9b99888ddd9e3f3811a575590cbc35f4e41f0897f01f0d0b9b44c2e6eb3c";
           revision = "1";
           editedCabalFile = "1rhbccsm1k9gr60ahd1k4ljnb4jvbmqrn2v2pha0qnjzr85394z6";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/IreneKnapp/direct-sqlite";
           description = "Low-level binding to SQLite3. Includes UTF8 and BLOB support.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "directory" = callPackage
        ({ mkDerivation, base, filepath, stdenv, time, unix }:
         mkDerivation {
           pname = "directory";
           version = "1.2.7.1";
           sha256 = "cf3c0984238ac5bb67706b03f86f823feb50d46092ed6ec6e523b89a1d0836cf";
           libraryHaskellDepends = [ base filepath time unix ];
           doHaddock = false;
           doCheck = false;
           description = "Platform-agnostic library for filesystem operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "directory-tree" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "directory-tree";
           version = "0.12.1";
           sha256 = "e2084495b3a226cf54d949635c86fc14e89daa09d86cce39e3c3cf898ae6e517";
           libraryHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://brandon.si/code/directory-tree-module-released/";
           description = "A simple directory-like tree datatype, with useful IO functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "discount" = callPackage
        ({ mkDerivation, base, bytestring, markdown, stdenv, text }:
         mkDerivation {
           pname = "discount";
           version = "0.1.1";
           sha256 = "e99cb7fdd1896dd1e525616597f936c1305a657cea1ef82cc0b3dcfe5afa34e0";
           libraryHaskellDepends = [ base bytestring text ];
           librarySystemDepends = [ markdown ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lightquake/discount";
           description = "Haskell bindings to the discount Markdown library";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) markdown;};
      "disk-free-space" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "disk-free-space";
           version = "0.1.0.1";
           sha256 = "f17a4f9c3b41083ccbb6c11b2debdbc705f86097b7459ff0f46cc01d2692381f";
           revision = "3";
           editedCabalFile = "0x0wjycr3rhw9vcq51b4sz8cf7mcvx7whhywv72y25r9385lxb3i";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/disk-free-space";
           description = "Retrieve information about disk space usage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-closure" = callPackage
        ({ mkDerivation, base, binary, bytestring, constraints, stdenv, syb
         , template-haskell
         }:
         mkDerivation {
           pname = "distributed-closure";
           version = "0.3.3.0";
           sha256 = "bc675fd3b93c7e51a923969220821ea1676c639ff9fd4e742bd864e90f2e368f";
           libraryHaskellDepends = [
             base binary bytestring constraints syb template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tweag/distributed-closure";
           description = "Serializable closures for distributed programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers
         , data-accessor, deepseq, distributed-static, exceptions, hashable
         , mtl, network-transport, random, rank1dynamic, stdenv, stm, syb
         , template-haskell, time, transformers
         }:
         mkDerivation {
           pname = "distributed-process";
           version = "0.6.6";
           sha256 = "e881775dabea50ccd3370242c8a3acd87c9b8ce9e47f3d4c2d0a6b2ec7b3b7d0";
           revision = "1";
           editedCabalFile = "1rx1igg8rf0qgdnkfx2az011308winjji67bx4w8zcff9cg6cn2r";
           libraryHaskellDepends = [
             base binary bytestring containers data-accessor deepseq
             distributed-static exceptions hashable mtl network-transport random
             rank1dynamic stm syb template-haskell time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com/";
           description = "Cloud Haskell: Erlang-style concurrency in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process-async" = callPackage
        ({ mkDerivation, base, binary, containers, data-accessor, deepseq
         , distributed-process, distributed-process-extras, fingertree
         , hashable, mtl, stdenv, stm, time, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "distributed-process-async";
           version = "0.2.3";
           sha256 = "d3031457c36bb3c35496031c185354417b54ce253e1878f35072d04e8161ad95";
           revision = "1";
           editedCabalFile = "127jdavnjif502z3pa10x0b08m6izngihl48shns98lg8x665bjn";
           libraryHaskellDepends = [
             base binary containers data-accessor deepseq distributed-process
             distributed-process-extras fingertree hashable mtl stm time
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-distributed/distributed-process-async";
           description = "Cloud Haskell Async API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process-client-server" = callPackage
        ({ mkDerivation, base, binary, containers, data-accessor, deepseq
         , distributed-process, distributed-process-async
         , distributed-process-extras, fingertree, hashable, mtl, stdenv
         , stm, time, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "distributed-process-client-server";
           version = "0.1.3.2";
           sha256 = "2c905624d5486b7bc8bd1a4763b139e7eb364b20467c9abddd553f9afbd3601f";
           revision = "2";
           editedCabalFile = "04slfzqk33y74xd043j8g6i2fqlyr90lxj4vrj1p8kny13gbmnxf";
           libraryHaskellDepends = [
             base binary containers data-accessor deepseq distributed-process
             distributed-process-async distributed-process-extras fingertree
             hashable mtl stm time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-distributed/distributed-process-client-server";
           description = "The Cloud Haskell Application Platform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process-execution" = callPackage
        ({ mkDerivation, base, binary, containers, data-accessor, deepseq
         , distributed-process, distributed-process-client-server
         , distributed-process-extras, distributed-process-supervisor
         , fingertree, hashable, mtl, stdenv, stm, time, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "distributed-process-execution";
           version = "0.1.2.2";
           sha256 = "9fbfca6b394e52af462586127a0edc2efc2a160ae8f69a9d34234a71e3dbf7b5";
           revision = "2";
           editedCabalFile = "18kq0ldz2lci5f2dx98m67gch7539yj7fyaxrqjgk0h2dsc7klfg";
           libraryHaskellDepends = [
             base binary containers data-accessor deepseq distributed-process
             distributed-process-client-server distributed-process-extras
             distributed-process-supervisor fingertree hashable mtl stm time
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-distributed/distributed-process-execution";
           description = "Execution Framework for The Cloud Haskell Application Platform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process-extras" = callPackage
        ({ mkDerivation, base, binary, containers, data-accessor, deepseq
         , distributed-process, fingertree, hashable, mtl, stdenv, stm, time
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "distributed-process-extras";
           version = "0.2.1.2";
           sha256 = "c1a4e1a5e3ec30089251db40fd479b19c5fd74c9dd8ca50f8eb32aaf9747a048";
           revision = "3";
           editedCabalFile = "1ivl03z3b4wflds8b0d2n7hm5nicadq16aj263hidfd39y765nd7";
           libraryHaskellDepends = [
             base binary containers data-accessor deepseq distributed-process
             fingertree hashable mtl stm time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-distributed/distributed-process-extras";
           description = "Cloud Haskell Extras";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process-registry" = callPackage
        ({ mkDerivation, base, binary, containers, data-accessor, deepseq
         , distributed-process, distributed-process-client-server
         , distributed-process-extras, distributed-process-supervisor
         , fingertree, hashable, mtl, stdenv, stm, time, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "distributed-process-registry";
           version = "0.1.0.2";
           sha256 = "ae2e6ec9de83344cbf33db09073343faba2f8e990e20e98dfebe80a9560875d2";
           libraryHaskellDepends = [
             base binary containers data-accessor deepseq distributed-process
             distributed-process-client-server distributed-process-extras
             distributed-process-supervisor fingertree hashable mtl stm time
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-distributed/distributed-process-registry";
           description = "Cloud Haskell Extended Process Registry";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process-simplelocalnet" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers
         , data-accessor, distributed-process, network, network-multicast
         , network-transport, network-transport-tcp, stdenv, transformers
         }:
         mkDerivation {
           pname = "distributed-process-simplelocalnet";
           version = "0.2.3.3";
           sha256 = "7b98498f2d6ce185ae0a855ff35e97a9ad1bd1ec7872b2d75aa0bb1f1fb24316";
           revision = "1";
           editedCabalFile = "0w4gz945pv45hkvc73z62xgj2zkm5w73gdhi4lr1w50i4shh7ksc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers data-accessor distributed-process
             network network-multicast network-transport network-transport-tcp
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Simple zero-configuration backend for Cloud Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process-supervisor" = callPackage
        ({ mkDerivation, base, binary, containers, data-accessor, deepseq
         , distributed-process, distributed-process-client-server
         , distributed-process-extras, fingertree, hashable, mtl, stdenv
         , stm, time, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "distributed-process-supervisor";
           version = "0.1.3.2";
           sha256 = "3e9b9c940afb67d41bb3ec50229ea972ffd386a2e424007b9cbacc361f053df4";
           revision = "1";
           editedCabalFile = "0paylszj1av8k6yz8qvy8dqp7kcc5kwjanlwx8al5mmpbyp0hcxj";
           libraryHaskellDepends = [
             base binary containers data-accessor deepseq distributed-process
             distributed-process-client-server distributed-process-extras
             fingertree hashable mtl stm time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-distributed/distributed-process-supervisor";
           description = "Supervisors for The Cloud Haskell Application Platform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process-task" = callPackage
        ({ mkDerivation, base, binary, containers, data-accessor, deepseq
         , distributed-process, distributed-process-async
         , distributed-process-client-server, distributed-process-extras
         , fingertree, hashable, mtl, stdenv, stm, time, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "distributed-process-task";
           version = "0.1.2.2";
           sha256 = "ec25caf01b9185d166433246210be688a9733e73f54b03f91a910eaf2cd05c23";
           revision = "1";
           editedCabalFile = "09lwjaq1wlh078dbx0j2jrrw4ggjmijh812mwpn3h3vgc54si098";
           libraryHaskellDepends = [
             base binary containers data-accessor deepseq distributed-process
             distributed-process-async distributed-process-client-server
             distributed-process-extras fingertree hashable mtl stm time
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-distributed/distributed-process-task";
           description = "Task Framework for The Cloud Haskell Application Platform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process-tests" = callPackage
        ({ mkDerivation, ansi-terminal, base, binary, bytestring
         , distributed-process, distributed-static, HUnit, network
         , network-transport, random, rematch, setenv, stdenv, stm
         , test-framework, test-framework-hunit
         }:
         mkDerivation {
           pname = "distributed-process-tests";
           version = "0.4.7";
           sha256 = "8be7d1adf75753957925705fa1b5af20f3d90f71803352bd74e82484c46917b1";
           libraryHaskellDepends = [
             ansi-terminal base binary bytestring distributed-process
             distributed-static HUnit network network-transport random rematch
             setenv stm test-framework test-framework-hunit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-distributed/distributed-process/tree/master/distributed-process-tests";
           description = "Tests and test support tools for distributed-process";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-static" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq
         , rank1dynamic, stdenv
         }:
         mkDerivation {
           pname = "distributed-static";
           version = "0.3.5.0";
           sha256 = "e57b27ddd13ae033a6de5513b5bba75ff123ebb381cf6ab79fe887899f1e51f9";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq rank1dynamic
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Compositional, type-safe, polymorphic static values and closures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributive" = callPackage
        ({ mkDerivation, base, base-orphans, stdenv, tagged, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "distributive";
           version = "0.5.0.2";
           sha256 = "f884996f491fe5b275b7dda2cebdadfecea0d7788a142546e0271e9575cc1609";
           libraryHaskellDepends = [
             base base-orphans tagged transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/distributive/";
           description = "Distributive functors -- Dual to Traversable";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diversity" = callPackage
        ({ mkDerivation, base, containers, data-ordlist, fasta
         , math-functions, MonadRandom, optparse-applicative, parsec, pipes
         , random-shuffle, scientific, split, stdenv
         }:
         mkDerivation {
           pname = "diversity";
           version = "0.8.0.1";
           sha256 = "06ee80a100424346e725777467173198a574d1df354cfd0051b0ee2983c1feba";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers data-ordlist fasta math-functions MonadRandom
             parsec random-shuffle scientific split
           ];
           executableHaskellDepends = [
             base containers fasta optparse-applicative pipes
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GregorySchwartz/diversity";
           description = "Quantify the diversity of a population";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "dixi" = callPackage
        ({ mkDerivation, acid-state, aeson, base, base-orphans, blaze-html
         , blaze-markup, bytestring, composition-tree, containers
         , data-default, directory, either, filepath, heredoc, lens
         , network-uri, pandoc, pandoc-types, patches-vector, safecopy
         , servant, servant-blaze, servant-server, shakespeare, stdenv
         , template-haskell, text, time, time-locale-compat, timezone-olson
         , timezone-series, transformers, vector, warp, yaml
         }:
         mkDerivation {
           pname = "dixi";
           version = "0.6.9.2";
           sha256 = "39190af5648c2f39f133d140856d62cceefbe96f02a570bba68d442908dcb6d7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             acid-state aeson base base-orphans blaze-html blaze-markup
             bytestring composition-tree containers data-default either heredoc
             lens network-uri pandoc pandoc-types patches-vector safecopy
             servant servant-blaze servant-server shakespeare template-haskell
             text time time-locale-compat timezone-olson timezone-series
             transformers vector
           ];
           executableHaskellDepends = [
             acid-state base base-orphans directory filepath servant-server text
             warp yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liamoc/dixi";
           description = "A wiki implemented with a firm theoretical foundation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "djinn-ghc" = callPackage
        ({ mkDerivation, async, base, containers, djinn-lib, ghc, mtl
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "djinn-ghc";
           version = "0.0.2.3";
           sha256 = "cb956aed69bc5c342b45ef1b1142b6555fd2865dde1a80ac6ab3ef86aca314a4";
           libraryHaskellDepends = [
             async base containers djinn-lib ghc mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Generate Haskell code from a type. Bridge from Djinn to GHC API.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "djinn-lib" = callPackage
        ({ mkDerivation, base, containers, mtl, pretty, stdenv }:
         mkDerivation {
           pname = "djinn-lib";
           version = "0.0.1.2";
           sha256 = "c0fe10b7aa5cb39f828e933925fc5bbf86c290bb7661021e4d9250ae8ed01011";
           revision = "1";
           editedCabalFile = "1djgwrqklyw9pq2522w8k38njr2gj1k1l1hlaa2w8xday3l23glq";
           libraryHaskellDepends = [ base containers mtl pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.augustsson.net/Darcs/Djinn/";
           description = "Generate Haskell code from a type. Library extracted from djinn package.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dlist" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "dlist";
           version = "0.7.1.2";
           sha256 = "332d21f16fd30d2534b6ab96c98830a14266d8f368cff21f6a47469fb3493783";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/spl/dlist";
           description = "Difference lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dlist-instances" = callPackage
        ({ mkDerivation, base, dlist, semigroups, stdenv }:
         mkDerivation {
           pname = "dlist-instances";
           version = "0.1.1.1";
           sha256 = "d14a10c06f52fb412b2c1066d729f5534aa43204221e7ba7d81d935c44ce4f5b";
           libraryHaskellDepends = [ base dlist semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gregwebs/dlist-instances";
           description = "Difference lists instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dns" = callPackage
        ({ mkDerivation, attoparsec, base, binary, bytestring
         , bytestring-builder, conduit, conduit-extra, containers, iproute
         , mtl, network, random, resourcet, safe, stdenv
         }:
         mkDerivation {
           pname = "dns";
           version = "2.0.10";
           sha256 = "ba03bc8fe25b58fd066588569eb5707a245cb098181e2d5cca72c239849aa6a3";
           libraryHaskellDepends = [
             attoparsec base binary bytestring bytestring-builder conduit
             conduit-extra containers iproute mtl network random resourcet safe
           ];
           doHaddock = false;
           doCheck = false;
           testTarget = "spec";
           description = "DNS library in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dockerfile" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "dockerfile";
           version = "0.1.0.1";
           sha256 = "294ac0b6c0546da15bf5453d6006979aeb6f6b36f0566be75767f5021de00025";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A simple DSL for describing and generating Dockerfile containers in Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "docopt" = callPackage
        ({ mkDerivation, base, containers, parsec, stdenv, template-haskell
         , th-lift
         }:
         mkDerivation {
           pname = "docopt";
           version = "0.7.0.5";
           sha256 = "15790808a4896bbf0748c1c0f3ab63c07aea4621d95b93a39886813f829d05ee";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers parsec template-haskell th-lift
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/docopt/docopt.hs";
           description = "A command-line interface parser that will make you smile";
           license = stdenv.lib.licenses.mit;
         }) {};
      "doctest" = callPackage
        ({ mkDerivation, base, base-compat, deepseq, directory, filepath
         , ghc, ghc-paths, process, stdenv, syb, transformers
         }:
         mkDerivation {
           pname = "doctest";
           version = "0.11.0";
           sha256 = "d225c28a44281f32eb189dc11a4f1c9d15528ac0f973cf636567d69143df6477";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base-compat deepseq directory filepath ghc ghc-paths process
             syb transformers
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/doctest#readme";
           description = "Test interactive Haskell examples";
           license = stdenv.lib.licenses.mit;
         }) {};
      "doctest-discover" = callPackage
        ({ mkDerivation, aeson, base, bytestring, directory, doctest
         , filepath, stdenv
         }:
         mkDerivation {
           pname = "doctest-discover";
           version = "0.1.0.7";
           sha256 = "ac6a65da517db7f264e65607a50b080b54f008ba592746ac11b7bb40107fbd70";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring directory doctest filepath
           ];
           executableHaskellDepends = [
             aeson base bytestring directory doctest filepath
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/karun012/doctest-discover";
           description = "Easy way to run doctests via cabal";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "dotenv" = callPackage
        ({ mkDerivation, base, base-compat, megaparsec
         , optparse-applicative, process, stdenv, text
         }:
         mkDerivation {
           pname = "dotenv";
           version = "0.3.0.1";
           sha256 = "b83a38f54c0be717bbc86016517a3f1ac0e1d43e6bf1ac9cb318081e9673bb2c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base base-compat megaparsec text ];
           executableHaskellDepends = [
             base base-compat megaparsec optparse-applicative process text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/dotenv-hs";
           description = "Loads environment variables from dotenv files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dotnet-timespan" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "dotnet-timespan";
           version = "0.0.1.0";
           sha256 = "d8ca8dffbc916ff5139d6f0df4a22c947ab5f996c376f1ab8c2e120789209ac3";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/YoEight/dotnet-timespan";
           description = ".NET TimeSpan";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "double-conversion" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv, text }:
         mkDerivation {
           pname = "double-conversion";
           version = "2.0.2.0";
           sha256 = "44cde172395401169e844d6791b6eb0ef2c2e55a08de8dda96551cfe029ba26b";
           libraryHaskellDepends = [ base bytestring ghc-prim text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/double-conversion";
           description = "Fast conversion between double precision floating point and text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "download" = callPackage
        ({ mkDerivation, base, bytestring, feed, stdenv, tagsoup, xml }:
         mkDerivation {
           pname = "download";
           version = "0.3.2.5";
           sha256 = "9ae6d92ae4fe7ec4ff7281896254a7794e4caf85b6743280afd2074865dd99c0";
           libraryHaskellDepends = [ base bytestring feed tagsoup xml ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/download";
           description = "High-level file download based on URLs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dpor" = callPackage
        ({ mkDerivation, base, containers, deepseq, random, semigroups
         , stdenv
         }:
         mkDerivation {
           pname = "dpor";
           version = "0.1.0.1";
           sha256 = "6000f43abf889e08e49bb5966592ad6119393277c2d528a18e5a2602119d6308";
           libraryHaskellDepends = [
             base containers deepseq random semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "A generic implementation of dynamic partial-order reduction (DPOR) for testing arbitrary models of concurrency";
           license = stdenv.lib.licenses.mit;
         }) {};
      "drawille" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "drawille";
           version = "0.1.2.0";
           sha256 = "b8188ee87a06c168974c9655188450eb86c331c556decb31cf084efa846237df";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-drawille#readme";
           description = "A port of asciimoo's drawille to haskell";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "drifter" = callPackage
        ({ mkDerivation, base, containers, fgl, stdenv, text }:
         mkDerivation {
           pname = "drifter";
           version = "0.2.2";
           sha256 = "e47e0ceff7ff4e33c681719c6a1af3052f0c123c847dae2cb1fb73e08d3311e1";
           libraryHaskellDepends = [ base containers fgl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AndrewRademacher/drifter";
           description = "Simple schema management for arbitrary databases";
           license = stdenv.lib.licenses.mit;
         }) {};
      "drifter-postgresql" = callPackage
        ({ mkDerivation, base, drifter, either, mtl, postgresql-simple
         , stdenv, time
         }:
         mkDerivation {
           pname = "drifter-postgresql";
           version = "0.0.2";
           sha256 = "07fbd1e08b517d2fde939657237c7a05f2b1d1abe276681ab7254b1ab8415190";
           revision = "2";
           editedCabalFile = "0b0cnw77h8dzd1ixlzvi3g78y3is9gf9nmppb8b2gqfgkgpyd5jp";
           libraryHaskellDepends = [
             base drifter either mtl postgresql-simple time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/michaelxavier/drifter-postgresql";
           description = "PostgreSQL support for the drifter schema migration tool";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dual-tree" = callPackage
        ({ mkDerivation, base, monoid-extras, newtype, semigroups, stdenv
         }:
         mkDerivation {
           pname = "dual-tree";
           version = "0.2.0.9";
           sha256 = "5e7d0abb471962df00c5adc53fa9a48f70c9695d5fdf225deecfa040116576a4";
           libraryHaskellDepends = [ base monoid-extras newtype semigroups ];
           doHaddock = false;
           doCheck = false;
           description = "Rose trees with cached and accumulating monoidal annotations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dynamic-state" = callPackage
        ({ mkDerivation, base, binary, bytestring, hashable, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "dynamic-state";
           version = "0.2.2.0";
           sha256 = "48834fa08130e614764b8d675d0c98866c53425a4c50a0333d7ce21a7c1ac7cf";
           libraryHaskellDepends = [
             base binary bytestring hashable unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Optionally serializable dynamic state keyed by type";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "dyre" = callPackage
        ({ mkDerivation, base, binary, directory, executable-path, filepath
         , ghc-paths, io-storage, process, stdenv, time, unix, xdg-basedir
         }:
         mkDerivation {
           pname = "dyre";
           version = "0.8.12";
           sha256 = "e224305cc6b38b4143f49489931c2ea94b326915206d34eddf5b2ee2b5a71682";
           libraryHaskellDepends = [
             base binary directory executable-path filepath ghc-paths io-storage
             process time unix xdg-basedir
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/willdonnelly/dyre";
           description = "Dynamic reconfiguration in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "easy-file" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv, time, unix }:
         mkDerivation {
           pname = "easy-file";
           version = "0.2.1";
           sha256 = "ff86e1b29284499bea5f1d0ff539b3ed64fa6d1a06c2243ca61f93be0202e56c";
           libraryHaskellDepends = [ base directory filepath time unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/kazu-yamamoto/easy-file";
           description = "Cross-platform File handling";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "echo" = callPackage
        ({ mkDerivation, base, process, stdenv }:
         mkDerivation {
           pname = "echo";
           version = "0.1.3";
           sha256 = "704f07310f8272d170f8ab7fb2a2c13f15d8501ef8310801e36964c8eff485ef";
           revision = "1";
           editedCabalFile = "0br8wfiybcw5hand4imiw0i5hacdmrax1dv8g95f35gazffbx42l";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/echo";
           description = "A cross-platform, cross-console way to handle echoing terminal input";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ed25519" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "ed25519";
           version = "0.0.5.0";
           sha256 = "d8a5958ebfa9309790efade64275dc5c441b568645c45ceed1b0c6ff36d6156d";
           revision = "2";
           editedCabalFile = "1cq6h3jqkb1kvd9fjfhsllg5gq78sdiyf2gy9862xhlbv6wil19f";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://thoughtpolice.github.com/hs-ed25519";
           description = "Ed25519 cryptographic signatures";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ede" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, base, bifunctors
         , bytestring, comonad, directory, filepath, free, lens, mtl
         , parsers, scientific, semigroups, stdenv, text, text-format
         , text-manipulate, trifecta, unordered-containers, vector
         }:
         mkDerivation {
           pname = "ede";
           version = "0.2.8.4";
           sha256 = "f7fda7bc2d28b87fe7042adfca9fa9f7484c546142ad649dcae1d2ad4af5ae72";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-wl-pprint base bifunctors bytestring comonad directory
             filepath free lens mtl parsers scientific semigroups text
             text-format text-manipulate trifecta unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/brendanhay/ede";
           description = "Templating language with similar syntax and features to Liquid or Jinja2";
           license = "unknown";
         }) {};
      "edit-distance" = callPackage
        ({ mkDerivation, array, base, containers, random, stdenv }:
         mkDerivation {
           pname = "edit-distance";
           version = "0.2.2.1";
           sha256 = "3e8885ee2f56ad4da940f043ae8f981ee2fe336b5e8e4ba3f7436cff4f526c4a";
           revision = "1";
           editedCabalFile = "1vjn4ryzdilz7l1ad7czh11nw48h5mj8if7ij3q0mmc3sffa8csd";
           libraryHaskellDepends = [ array base containers random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/phadej/edit-distance";
           description = "Levenshtein and restricted Damerau-Levenshtein edit distances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "edit-distance-vector" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "edit-distance-vector";
           version = "1.0.0.4";
           sha256 = "b7dfddd86d315ef1b0c86415f321efc04b4a1b47a7b13edafc73a6e81b620f1f";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/thsutton/edit-distance-vector";
           description = "Calculate edit distances and edit scripts between vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "editor-open" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , directory, process, resourcet, stdenv, temporary, transformers
         , unix
         }:
         mkDerivation {
           pname = "editor-open";
           version = "0.6.0.0";
           sha256 = "2fc5d19bce2d477935202a5a4522671529d0352a0ee28be1307f8ab391065265";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra directory process resourcet
             temporary transformers unix
           ];
           executableHaskellDepends = [
             base bytestring conduit conduit-extra resourcet
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pharpend/editor-open";
           description = "Open the user's $VISUAL or $EDITOR for text input";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "effect-handlers" = callPackage
        ({ mkDerivation, base, free, kan-extensions, mtl, stdenv }:
         mkDerivation {
           pname = "effect-handlers";
           version = "0.1.0.8";
           sha256 = "2439a77b6ec8db236fc2809cb91219305a7071c72bfd68de795e01b3df9aa80c";
           libraryHaskellDepends = [ base free kan-extensions mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/edofic/effect-handlers";
           description = "A library for writing extensible algebraic effects and handlers. Similar to extensible-effects but with deep handlers.";
           license = stdenv.lib.licenses.mit;
         }) {};
      "either" = callPackage
        ({ mkDerivation, base, bifunctors, exceptions, free, mmorph
         , monad-control, MonadRandom, mtl, profunctors, semigroupoids
         , semigroups, stdenv, transformers, transformers-base
         }:
         mkDerivation {
           pname = "either";
           version = "4.4.1.1";
           sha256 = "b087cb0fb63fec2fbdcac05fef0d03751daef5deb86cda3c732b9a6a31e634d3";
           revision = "2";
           editedCabalFile = "1n7792mcrvfh31qrbj8mpnx372s03kz83mypj7l4fm5h6zi4a3hs";
           libraryHaskellDepends = [
             base bifunctors exceptions free mmorph monad-control MonadRandom
             mtl profunctors semigroupoids semigroups transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/either/";
           description = "An either monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "either-unwrap" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "either-unwrap";
           version = "1.1";
           sha256 = "ccabd6f87118abc8dcba481b316c76b8195ac9e8a8f3ddb478de5eb64e2d2e3c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/gcross/either-unwrap";
           description = "Functions for probing and unwrapping values inside of Either";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg" = callPackage
        ({ mkDerivation, aeson, base, bytestring, ekg-core, ekg-json
         , filepath, network, snap-core, snap-server, stdenv, text, time
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "ekg";
           version = "0.4.0.11";
           sha256 = "8cd041f6b7da4f57df1795d619f9140a071ed2adb6ed5ade1c3e899957edb603";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring ekg-core ekg-json filepath network snap-core
             snap-server text time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg";
           description = "Remote monitoring of processes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg-core" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "ekg-core";
           version = "0.1.1.1";
           sha256 = "54de3df4b1b027aa2f3760b64f6a8c8134f3275b6d95bf1cf1fc0e74282939d6";
           libraryHaskellDepends = [
             base containers ghc-prim text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg-core";
           description = "Tracking of system metrics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg-json" = callPackage
        ({ mkDerivation, aeson, base, ekg-core, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "ekg-json";
           version = "0.1.0.3";
           sha256 = "3c97d423ac85903d0fed400845c29ccd39f1ca80666b09659a0238983b743317";
           libraryHaskellDepends = [
             aeson base ekg-core text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg-json";
           description = "JSON encoding of ekg metrics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg-statsd" = callPackage
        ({ mkDerivation, base, bytestring, ekg-core, network, stdenv, text
         , time, unordered-containers
         }:
         mkDerivation {
           pname = "ekg-statsd";
           version = "0.2.1.0";
           sha256 = "d042792757f603a8b6d176ed04802b3c4f27079e90bc1ba9b78ea83a666d7711";
           libraryHaskellDepends = [
             base bytestring ekg-core network text time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg-statsd";
           description = "Push metrics to statsd";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "elm-bridge" = callPackage
        ({ mkDerivation, aeson, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "elm-bridge";
           version = "0.3.0.2";
           sha256 = "d83389362bfdc0c526bc574b413136b578cc01b61a694eaf45325531e850192f";
           libraryHaskellDepends = [ aeson base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/elm-bridge";
           description = "Derive Elm types from Haskell types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "elm-core-sources" = callPackage
        ({ mkDerivation, base, bytestring, containers, file-embed, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "elm-core-sources";
           version = "1.0.0";
           sha256 = "a403505d50cd6ff0d21243db55c6decc6dde14b88a6a393e2b6243f09f6620fb";
           libraryHaskellDepends = [
             base bytestring containers file-embed template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/JoeyEremondi/elm-build-lib";
           description = "Source files for the Elm runtime and standard libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "email-validate" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "email-validate";
           version = "2.2.0";
           sha256 = "aa7fd3f02c015bbc4ae67c2f3586f16c757d54a8cf09f7a04e70045828d9cb69";
           libraryHaskellDepends = [ attoparsec base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://porg.es/blog/email-address-validation-simpler-faster-more-correct";
           description = "Validating an email address string against RFC 5322";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "enclosed-exceptions" = callPackage
        ({ mkDerivation, base, deepseq, lifted-base, monad-control, stdenv
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "enclosed-exceptions";
           version = "1.0.2";
           sha256 = "7b9beab82d219c0dd879dfdef70fb74a4a7595b4dbd0baf7adb12cdbbe8189f1";
           revision = "1";
           editedCabalFile = "0rjm8g2bm9a7qzklkp0rh5az4qh8nsl0hl119gjik671knygkdj0";
           libraryHaskellDepends = [
             base deepseq lifted-base monad-control transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jcristovao/enclosed-exceptions";
           description = "Catching all exceptions from within an enclosed computation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "engine-io" = callPackage
        ({ mkDerivation, aeson, async, attoparsec, base, base64-bytestring
         , bytestring, either, free, monad-loops, mwc-random, stdenv, stm
         , stm-delay, text, transformers, unordered-containers, vector
         , websockets
         }:
         mkDerivation {
           pname = "engine-io";
           version = "1.2.13";
           sha256 = "5fc53f8a4a0ba563b9592e7bf3d9475a4a7ce165c66cd63a303567f6a941cf45";
           libraryHaskellDepends = [
             aeson async attoparsec base base64-bytestring bytestring either
             free monad-loops mwc-random stm stm-delay text transformers
             unordered-containers vector websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/engine.io";
           description = "A Haskell implementation of Engine.IO";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "engine-io-wai" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, either, engine-io
         , http-types, mtl, stdenv, text, transformers, transformers-compat
         , unordered-containers, wai, wai-websockets, websockets
         }:
         mkDerivation {
           pname = "engine-io-wai";
           version = "1.0.5";
           sha256 = "80e4737835acbadb0aafa66defc961e32045c66760040456700853e5baf0dab3";
           libraryHaskellDepends = [
             attoparsec base bytestring either engine-io http-types mtl text
             transformers transformers-compat unordered-containers wai
             wai-websockets websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/engine.io";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "engine-io-yesod" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , engine-io, http-types, stdenv, text, unordered-containers, wai
         , wai-websockets, websockets, yesod-core
         }:
         mkDerivation {
           pname = "engine-io-yesod";
           version = "1.0.4";
           sha256 = "d569661729341eca76a4c04fea27e02fccf27978e61ca93848cd095f36dcdbc5";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra engine-io http-types text
             unordered-containers wai wai-websockets websockets yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "entropy" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, directory, filepath
         , process, stdenv, unix
         }:
         mkDerivation {
           pname = "entropy";
           version = "0.3.7";
           sha256 = "1ff020eba2edbb93c4b23297470f8c11d69d0ff1e1642d17cbab9d54a24befef";
           revision = "1";
           editedCabalFile = "01lyh4cbpqlcj1y8mnkw6vk4vid5rzqg1vcf9kwxwd88zj86cgjg";
           setupHaskellDepends = [ base Cabal directory filepath process ];
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TomMD/entropy";
           description = "A platform independent entropy source";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "enumerator" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "enumerator";
           version = "0.4.20";
           sha256 = "33e21054352bb579e8db8697256ff3c61b3dc862c567f9e0fc2509f95e2b4709";
           libraryHaskellDepends = [
             base bytestring containers text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/enumerator/";
           description = "Reliable, high-performance processing with left-fold enumerators";
           license = stdenv.lib.licenses.mit;
         }) {};
      "envelope" = callPackage
        ({ mkDerivation, aeson, base, mtl, stdenv, text }:
         mkDerivation {
           pname = "envelope";
           version = "0.1.0.0";
           sha256 = "9116ceda5b6e103219361bcd5cdaa699a1365a43df06e5752c61dfb6419b316e";
           libraryHaskellDepends = [ aeson base mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/envelope#readme";
           description = "Defines generic 'Envelope' type to wrap reponses from a JSON API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "envy" = callPackage
        ({ mkDerivation, base, bytestring, containers, mtl, stdenv, text
         , time, transformers
         }:
         mkDerivation {
           pname = "envy";
           version = "1.1.0.0";
           sha256 = "27a2496640ea74ceab5a23a3fe8ef325bfb23d64a851f5dfc18b7c3411beca99";
           revision = "1";
           editedCabalFile = "0bicsb9sbyjkkibzrmlk1kqpqiliz6d0mg5bb4h5gpf9v8yjv4m3";
           libraryHaskellDepends = [
             base bytestring containers mtl text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "An environmentally friendly way to deal with environment variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eq" = callPackage
        ({ mkDerivation, base, semigroupoids, stdenv }:
         mkDerivation {
           pname = "eq";
           version = "4.0.4";
           sha256 = "042f4c1e9eeb25a52c20623fc482cc00e3235198089c5b60bc36fa47ebacbde5";
           libraryHaskellDepends = [ base semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/eq/";
           description = "Leibnizian equality";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "equivalence" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, STMonadTrans
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "equivalence";
           version = "0.3.1";
           sha256 = "7a0539546e4fc1a00fb190109be45b0cb4af7047d8c2abaf65b8e401e828207e";
           libraryHaskellDepends = [
             base containers mtl STMonadTrans transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/paba/equivalence/";
           description = "Maintaining an equivalence relation implemented as union-find using STT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "erf" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "erf";
           version = "2.0.0.0";
           sha256 = "24f0b79c7e1d25cb2cd44c2258d7a464bf6db8079775b50b60b54a254616b337";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "The error function, erf, and related functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "errors" = callPackage
        ({ mkDerivation, base, safe, stdenv, transformers
         , transformers-compat, unexceptionalio
         }:
         mkDerivation {
           pname = "errors";
           version = "2.1.3";
           sha256 = "201a1d9d2fba16dff734eb79e07f138718ed62f5a0a846cf0cee743828844df1";
           libraryHaskellDepends = [
             base safe transformers transformers-compat unexceptionalio
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simplified error-handling";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "esqueleto" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, conduit
         , monad-logger, persistent, resourcet, stdenv, tagged, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "esqueleto";
           version = "2.4.3";
           sha256 = "bf555cfb40519ed1573f7bb90c65f693b9639dfa93fc2222230d3ded6e897434";
           revision = "1";
           editedCabalFile = "0f0y9cbvjbzgq90l36722z4diwahi7yy8m3gdpxdxbllsqly27k5";
           libraryHaskellDepends = [
             base blaze-html bytestring conduit monad-logger persistent
             resourcet tagged text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/esqueleto";
           description = "Type-safe EDSL for SQL queries on persistent backends";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eta" = callPackage
        ({ mkDerivation, aeson, alex, array, base, binary, bytestring
         , codec-jvm, containers, cpphs, deepseq, directory, eta-boot
         , eta-boot-meta, eta-meta, eta-repl, exceptions, extra, fetchgit
         , filepath, gitrev, Glob, happy, haskeline, hpc, hpp, mtl, path
         , path-io, process, process-extras, semigroups, stdenv, tasty
         , tasty-golden, text, time, transformers, turtle, unix, unix-compat
         , zip
         }:
         mkDerivation {
           pname = "eta";
           version = "0.8.6.3";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base binary bytestring codec-jvm containers cpphs deepseq
             directory eta-boot eta-boot-meta eta-meta eta-repl exceptions
             filepath gitrev hpc hpp mtl path path-io process semigroups text
             time transformers unix unix-compat zip
           ];
           libraryToolDepends = [ alex happy ];
           executableHaskellDepends = [
             aeson array base bytestring containers deepseq directory eta-boot
             eta-repl extra filepath Glob haskeline process process-extras tasty
             tasty-golden text time transformers turtle unix
           ];
           doHaddock = false;
           doCheck = false;
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eta-boot" = callPackage
        ({ mkDerivation, base, binary, bytestring, directory, eta-boot-meta
         , fetchgit, filepath, stdenv
         }:
         mkDerivation {
           pname = "eta-boot";
           version = "0.8.6";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           postUnpack = "sourceRoot+=/libraries/eta-boot; echo source root reset to $sourceRoot";
           libraryHaskellDepends = [
             base binary bytestring directory eta-boot-meta filepath
           ];
           doHaddock = false;
           doCheck = false;
           description = "Shared functionality between Eta and its boot libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eta-boot-meta" = callPackage
        ({ mkDerivation, base, fetchgit, stdenv }:
         mkDerivation {
           pname = "eta-boot-meta";
           version = "0.8.6";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           postUnpack = "sourceRoot+=/libraries/eta-boot-meta; echo source root reset to $sourceRoot";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Shared functionality between Eta and the @eta-meta@ library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eta-build" = callPackage
        ({ mkDerivation, base, containers, directory, etlas-cabal, fetchgit
         , shake, stdenv
         }:
         mkDerivation {
           pname = "eta-build";
           version = "0.0.0";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           postUnpack = "sourceRoot+=/shake; echo source root reset to $sourceRoot";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base containers directory etlas-cabal shake
           ];
           doHaddock = false;
           doCheck = false;
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eta-meta" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, eta-boot
         , eta-boot-meta, eta-repl, fetchgit, pretty, stdenv
         }:
         mkDerivation {
           pname = "eta-meta";
           version = "0.8.6.3";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           postUnpack = "sourceRoot+=/libraries/eta-meta; echo source root reset to $sourceRoot";
           libraryHaskellDepends = [
             base binary bytestring deepseq eta-boot eta-boot-meta eta-repl
             pretty
           ];
           doHaddock = false;
           doCheck = false;
           description = "Support library for Template Metaprogramming in Eta";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eta-pkg" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, directory
         , eta-boot, etlas-cabal, fetchgit, filepath, stdenv
         }:
         mkDerivation {
           pname = "eta-pkg";
           version = "0.8.6.3";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           postUnpack = "sourceRoot+=/utils/eta-pkg; echo source root reset to $sourceRoot";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base binary bytestring containers directory eta-boot etlas-cabal
             filepath
           ];
           doHaddock = false;
           doCheck = false;
           description = "A utility for querying and managing the Eta package database";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eta-repl" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, eta-boot-meta
         , fetchgit, stdenv
         }:
         mkDerivation {
           pname = "eta-repl";
           version = "0.8.6.3";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           postUnpack = "sourceRoot+=/libraries/eta-repl; echo source root reset to $sourceRoot";
           libraryHaskellDepends = [
             base binary bytestring deepseq eta-boot-meta
           ];
           doHaddock = false;
           doCheck = false;
           description = "The library supporting Eta's interactive interpreter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "etcd" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-conduit, stdenv
         , text, time
         }:
         mkDerivation {
           pname = "etcd";
           version = "1.0.5";
           sha256 = "916fc01e40cc5488f54fea8c623b31087b364432a78acffd95825f5bd1311f2f";
           revision = "1";
           editedCabalFile = "1ylq3wsl4ghjv1ib2zzfny7wdhwhwfnczl64wy18xipd5a6vrnsw";
           libraryHaskellDepends = [
             aeson base bytestring http-conduit text time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Client for etcd, a highly-available key value store";
           license = "unknown";
         }) {};
      "ether" = callPackage
        ({ mkDerivation, base, exceptions, mmorph, monad-control, mtl
         , stdenv, template-haskell, transformers, transformers-base
         , transformers-lift
         }:
         mkDerivation {
           pname = "ether";
           version = "0.4.0.2";
           sha256 = "8b9dce4d444613dc46df988fa3a437297503e63ff29fd28113b35b98a8dcd953";
           revision = "1";
           editedCabalFile = "0wqk9l2vkyfkpx3iad10qh1y725vnkn46gd6nrrq6xyrf5ky8xm8";
           libraryHaskellDepends = [
             base exceptions mmorph monad-control mtl template-haskell
             transformers transformers-base transformers-lift
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://int-index.github.io/ether/";
           description = "Monad transformers and classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "etlas" = callPackage
        ({ mkDerivation, array, async, base, base16-bytestring, binary
         , bytestring, Cabal, containers, cryptohash-sha256, deepseq, dhall
         , dhall-to-etlas, directory, echo, edit-distance, etlas-cabal
         , fetchgit, filepath, hackage-security, hashable, HTTP, microlens
         , mtl, network, network-uri, parsec, pretty, process, random
         , stdenv, stm, tar, text, time, unix, zlib
         }:
         mkDerivation {
           pname = "etlas";
           version = "1.6.0.0";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           postUnpack = "sourceRoot+=/etlas/etlas; echo source root reset to $sourceRoot";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal filepath process ];
           libraryHaskellDepends = [
             array async base base16-bytestring binary bytestring containers
             cryptohash-sha256 deepseq dhall dhall-to-etlas directory echo
             edit-distance etlas-cabal filepath hackage-security hashable HTTP
             microlens mtl network network-uri parsec pretty process random stm
             tar text time unix zlib
           ];
           executableHaskellDepends = [ base directory etlas-cabal filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://eta-lang.org";
           description = "The package manager for Eta";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "etlas-cabal" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , deepseq, directory, fetchgit, filepath, parsec, pretty, process
         , stdenv, time, unix
         }:
         mkDerivation {
           pname = "etlas-cabal";
           version = "1.6.0.0";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           postUnpack = "sourceRoot+=/etlas/etlas-cabal; echo source root reset to $sourceRoot";
           libraryHaskellDepends = [
             array base binary bytestring containers deepseq directory filepath
             parsec pretty process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://eta-lang.org";
           description = "Package management for Eta";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "event" = callPackage
        ({ mkDerivation, base, containers, semigroups, stdenv, transformers
         }:
         mkDerivation {
           pname = "event";
           version = "0.1.4";
           sha256 = "6791d1402b4d77a11407ab592f65cb61ee60c5a80b99751c5d775afcc9d1824a";
           libraryHaskellDepends = [
             base containers semigroups transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Monoidal, monadic and first-class events";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eventstore" = callPackage
        ({ mkDerivation, aeson, array, async, base, bytestring, cereal
         , containers, dns, dotnet-timespan, http-client, network, protobuf
         , random, semigroups, stdenv, stm, text, time, unordered-containers
         , uuid
         }:
         mkDerivation {
           pname = "eventstore";
           version = "0.12.0.0";
           sha256 = "c88c65239fd37b4ede7e291ac714384f89aaff6235d65bd41cdbc7421554fda5";
           libraryHaskellDepends = [
             aeson array async base bytestring cereal containers dns
             dotnet-timespan http-client network protobuf random semigroups stm
             text time unordered-containers uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/YoEight/eventstore";
           description = "EventStore TCP Client";
           license = stdenv.lib.licenses.bsd3;
           platforms = [ "x86_64-darwin" "x86_64-linux" ];
         }) {};
      "exact-combinatorics" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "exact-combinatorics";
           version = "0.2.0.8";
           sha256 = "32a822b109ab6e9f62fe23d76bd5af593c20ba0e589005d3985ccda00dd4475e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Efficient exact computation of combinatoric functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exact-pi" = callPackage
        ({ mkDerivation, base, numtype-dk, stdenv }:
         mkDerivation {
           pname = "exact-pi";
           version = "0.4.1.2";
           sha256 = "b2bbe6725fba3bd2f3a9506e2ff4f194fa6cdb918d59debabd5e1fc452fc45e3";
           libraryHaskellDepends = [ base numtype-dk ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmcclean/exact-pi/";
           description = "Exact rational multiples of pi (and integer powers of pi)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "exact-real" = callPackage
        ({ mkDerivation, base, integer-gmp, memoize, random, stdenv }:
         mkDerivation {
           pname = "exact-real";
           version = "0.12.1";
           sha256 = "935f55ec8ae751e67a8e25b19f70e78c613728500e998a2912e1590efe29d7f0";
           libraryHaskellDepends = [ base integer-gmp memoize random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/expipiplus1/exact-real";
           description = "Exact real arithmetic";
           license = stdenv.lib.licenses.mit;
         }) {};
      "exception-mtl" = callPackage
        ({ mkDerivation, base, exception-transformers, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "exception-mtl";
           version = "0.4.0.1";
           sha256 = "ec13bcbae6cdde218a7118a2bd3058493af09a330b86e28469a278c9b2cea134";
           libraryHaskellDepends = [
             base exception-transformers mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Exception monad transformer instances for mtl classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exception-transformers" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "exception-transformers";
           version = "0.4.0.5";
           sha256 = "564caaaac6c2d1759a13d2c2c8a1d7a4b0109035558c4641fa7a8a378961088b";
           libraryHaskellDepends = [
             base stm transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Type classes and monads for unchecked extensible exceptions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exceptional" = callPackage
        ({ mkDerivation, base, exceptions, stdenv }:
         mkDerivation {
           pname = "exceptional";
           version = "0.3.0.0";
           sha256 = "da866ed28ea14d245cc065271f4ddd6da0a91b83e8d83daddcd1ef0623e99f06";
           libraryHaskellDepends = [ base exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/";
           description = "Essentially the Maybe type with error messages";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "exceptions" = callPackage
        ({ mkDerivation, base, mtl, stdenv, stm, template-haskell
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "exceptions";
           version = "0.8.3";
           sha256 = "4d6ad97e8e3d5dc6ce9ae68a469dc2fd3f66e9d312bc6faa7ab162eddcef87be";
           revision = "5";
           editedCabalFile = "1kfgp41i6mfz9gjczp3flvqxfhnznd81rwldv8j05807n6mnqqii";
           libraryHaskellDepends = [
             base mtl stm template-haskell transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/exceptions/";
           description = "Extensible optionally-pure exceptions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "executable-hash" = callPackage
        ({ mkDerivation, base, bytestring, cryptohash, directory
         , executable-path, file-embed, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "executable-hash";
           version = "0.2.0.2";
           sha256 = "7285dc07aef00b71d76ef3fa9403c88e976a0517fcc3aec6e7e1ac5512007a80";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring cryptohash directory executable-path file-embed
             template-haskell
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fpco/executable-hash";
           description = "Provides the SHA1 hash of the program executable";
           license = stdenv.lib.licenses.mit;
         }) {};
      "executable-path" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv, unix }:
         mkDerivation {
           pname = "executable-path";
           version = "0.0.3";
           sha256 = "8c7215ed4c3cd558f89dc862d21cf9dab3c6b762f4f90c0c1be9e3141c46e5c9";
           libraryHaskellDepends = [ base directory filepath unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~bkomuves/";
           description = "Finding out the full path of the executable";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "exhaustive" = callPackage
        ({ mkDerivation, base, generics-sop, stdenv, template-haskell
         , transformers
         }:
         mkDerivation {
           pname = "exhaustive";
           version = "1.1.3";
           sha256 = "4cda23481da99bf008046726ed4c31ecec5eb41222a11e067a4d7e0f2dda783a";
           libraryHaskellDepends = [
             base generics-sop template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/exhaustive";
           description = "Compile time checks that a computation considers producing data through all possible constructors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "expiring-cache-map" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "expiring-cache-map";
           version = "0.0.6.1";
           sha256 = "0e3bc294978b46ee59bf0b4a7e7a5bd7ed5da7bc261ffebdb0cb1b60353c64b9";
           libraryHaskellDepends = [
             base containers hashable unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/elblake/expiring-cache-map";
           description = "General purpose simple caching";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "explicit-exception" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, transformers }:
         mkDerivation {
           pname = "explicit-exception";
           version = "0.1.8";
           sha256 = "7fee7a3781db3c3bf82079e635d510088dbb6f4295fde887c603819ec14cd16f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base deepseq transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Exception";
           description = "Exceptions which are explicit in the type signature";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extensible-effects" = callPackage
        ({ mkDerivation, base, stdenv, transformers, transformers-base
         , type-aligned, void
         }:
         mkDerivation {
           pname = "extensible-effects";
           version = "1.11.0.4";
           sha256 = "af92fba899d4414f615341a7b4df6808d4f13140330f0962c9e0ef53f9227913";
           libraryHaskellDepends = [
             base transformers transformers-base type-aligned void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/suhailshergill/extensible-effects";
           description = "An Alternative to Monad Transformers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "extensible-exceptions" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "extensible-exceptions";
           version = "0.1.1.4";
           sha256 = "6ce5e8801760385a408dab71b53550f87629e661b260bdc2cd41c6a439b6e388";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Extensible exceptions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extra" = callPackage
        ({ mkDerivation, base, directory, filepath, process, stdenv, time
         , unix
         }:
         mkDerivation {
           pname = "extra";
           version = "1.4.10";
           sha256 = "b40b3f74c02e40697f4ba5242a764c2846921e8aafdd92e79a30a7afd9e56759";
           revision = "1";
           editedCabalFile = "1rp2hga7p4n4i4g8152jxx1my7l5bw7bhryjf205wga6hb4fw79p";
           libraryHaskellDepends = [
             base directory filepath process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/extra#readme";
           description = "Extra functions I use";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extract-dependencies" = callPackage
        ({ mkDerivation, async, base, Cabal, containers
         , package-description-remote, stdenv
         }:
         mkDerivation {
           pname = "extract-dependencies";
           version = "0.2.0.1";
           sha256 = "927fe70508cc8624585e31602c305281169e91270e10c624ae48cd7c0aac1c12";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base Cabal containers package-description-remote
           ];
           executableHaskellDepends = [
             async base Cabal containers package-description-remote
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/stack-run-auto";
           description = "Given a hackage package outputs the list of its dependencies";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fail" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fail";
           version = "4.9.0.0";
           sha256 = "6d5cdb1a5c539425a9665f740e364722e1d9d6ae37fbc55f30fe3dbbbb91d4a2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail";
           description = "Forward-compatible MonadFail class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "farmhash" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "farmhash";
           version = "0.1.0.5";
           sha256 = "0e685a5445f7bce88682d209bccb47d03f06065a627475df44a8e2af8bc20fa1";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/abhinav/farmhash";
           description = "Fast hash functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fast-builder" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "fast-builder";
           version = "0.0.0.6";
           sha256 = "4a83c2fb4e21ec43d7cf9b2412286e1fea036f7c5cbfd4dcee8914f8b2ae9e1c";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/takano-akio/fast-builder";
           description = "Fast ByteString Builder";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "fast-logger" = callPackage
        ({ mkDerivation, array, auto-update, base, bytestring
         , bytestring-builder, directory, easy-file, filepath, stdenv, text
         , unix, unix-time
         }:
         mkDerivation {
           pname = "fast-logger";
           version = "2.4.7";
           sha256 = "201b07d898da91472aa86662399feb093a7379bc04315f8e84db52fbf3464a38";
           libraryHaskellDepends = [
             array auto-update base bytestring bytestring-builder directory
             easy-file filepath text unix unix-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kazu-yamamoto/logger";
           description = "A fast logging system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fasta" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers, foldl
         , lens, parsec, pipes, pipes-attoparsec, pipes-bytestring
         , pipes-group, pipes-text, split, stdenv, text
         }:
         mkDerivation {
           pname = "fasta";
           version = "0.10.4.0";
           sha256 = "d37616f6107834ce47cc57163e9dddda055ef13b0400d74d6e77cbdd249f69da";
           libraryHaskellDepends = [
             attoparsec base bytestring containers foldl lens parsec pipes
             pipes-attoparsec pipes-bytestring pipes-group pipes-text split text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GregorySchwartz/fasta";
           description = "A simple, mindless parser for fasta files";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "fay" = callPackage
        ({ mkDerivation, aeson, base, base-compat, bytestring, containers
         , data-default, data-lens-light, directory, filepath, ghc-paths
         , haskell-src-exts, language-ecmascript, mtl, mtl-compat
         , optparse-applicative, process, safe, sourcemap, split, spoon
         , stdenv, syb, text, time, transformers, transformers-compat
         , traverse-with-class, type-eq, uniplate, unordered-containers
         , utf8-string, vector
         }:
         mkDerivation {
           pname = "fay";
           version = "0.23.1.12";
           sha256 = "3d9c0a64f6d30923e2e45f27c043a7fa4f451c676466c8ca5b69a4121462f727";
           revision = "6";
           editedCabalFile = "02vy6ajjbvwh88zzdm5x54jmbxdl88fgpwpgcxpgrf039gy0il2d";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base-compat bytestring containers data-default
             data-lens-light directory filepath ghc-paths haskell-src-exts
             language-ecmascript mtl mtl-compat process safe sourcemap split
             spoon syb text time transformers transformers-compat
             traverse-with-class type-eq uniplate unordered-containers
             utf8-string vector
           ];
           executableHaskellDepends = [ base mtl optparse-applicative split ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/faylang/fay/wiki";
           description = "A compiler for Fay, a Haskell subset that compiles to JavaScript";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fay-base" = callPackage
        ({ mkDerivation, base, fay, stdenv }:
         mkDerivation {
           pname = "fay-base";
           version = "0.20.0.1";
           sha256 = "59ce66ae8de469e47ff16e2b565a719c92a93bb0c06ef3f748164a40325dae9e";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base fay ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/faylang/fay/";
           description = "The base package for Fay";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fay-builder" = callPackage
        ({ mkDerivation, base, Cabal, data-default, directory, fay
         , filepath, safe, split, stdenv, text
         }:
         mkDerivation {
           pname = "fay-builder";
           version = "0.2.0.5";
           sha256 = "116dea6dc304834be81d70faec7e3de1fd867ebbda0d02d3c1c6a0f96d2b31a2";
           revision = "4";
           editedCabalFile = "09ix1rqm23l2ksc9zx6qj6m2pw789rzs6b3q41m60bcxh8xik9km";
           libraryHaskellDepends = [
             base Cabal data-default directory fay filepath safe split text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Compile Fay code on cabal install, and ad-hoc recompile during development";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fay-dom" = callPackage
        ({ mkDerivation, fay-base, stdenv }:
         mkDerivation {
           pname = "fay-dom";
           version = "0.5.0.1";
           sha256 = "e0f2e4dc11a13c4a9c43d707a3cf24bc1badb585540d24b29e8a6bc6ace1a6fe";
           revision = "1";
           editedCabalFile = "1lhmkf2n7prv6w51bl3szz4g9cn2dkhb873m7f568nnwysqibv8b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ fay-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/faylang/fay-dom";
           description = "DOM FFI wrapper library for Fay";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fay-jquery" = callPackage
        ({ mkDerivation, fay-base, fay-text, stdenv }:
         mkDerivation {
           pname = "fay-jquery";
           version = "0.6.1.0";
           sha256 = "0ff57ef8115e5c3fce1c14cca2509713e945874a2a2976e4646559ff51006f13";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ fay-base fay-text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/faylang/fay-jquery";
           description = "jQuery bindings for Fay";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fay-text" = callPackage
        ({ mkDerivation, fay, fay-base, stdenv, text }:
         mkDerivation {
           pname = "fay-text";
           version = "0.3.2.2";
           sha256 = "da2a75e803d6d41249f49fa7dd420bc984faaff5e44f697056c93336bf443be0";
           revision = "1";
           editedCabalFile = "0zwip7arbrbz1qhjyy5synnlrvl2wica4804wkizpxr9l7acasn6";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ fay fay-base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/faylang/fay-text";
           description = "Fay Text type represented as JavaScript strings";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fay-uri" = callPackage
        ({ mkDerivation, fay-base, stdenv }:
         mkDerivation {
           pname = "fay-uri";
           version = "0.2.0.0";
           sha256 = "d906cd3d903a8aa98388b4488a039a2a380bd4b0da3c63978da8b3f4e79364ef";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ fay-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/faylang/fay-uri";
           description = "Persistent FFI bindings for using jsUri in Fay";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fb" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
         , base64-bytestring, bytestring, cereal, conduit, conduit-extra
         , crypto-api, cryptohash, cryptohash-cryptoapi, data-default
         , http-conduit, http-types, lifted-base, monad-control
         , monad-logger, old-locale, resourcet, stdenv, text, time
         , transformers, transformers-base, unordered-containers
         }:
         mkDerivation {
           pname = "fb";
           version = "1.0.13";
           sha256 = "52af3e05b5721b5d38fea9231e9fde68b0e1987c4cc979acaf6e2f940537935e";
           revision = "1";
           editedCabalFile = "0p67dma9q6csbd6nipzjvph2bvn3pfizcz0ljhrz2nfn78q7cnpz";
           libraryHaskellDepends = [
             aeson attoparsec base base16-bytestring base64-bytestring
             bytestring cereal conduit conduit-extra crypto-api cryptohash
             cryptohash-cryptoapi data-default http-conduit http-types
             lifted-base monad-control monad-logger old-locale resourcet text
             time transformers transformers-base unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/fb";
           description = "Bindings to Facebook's API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fb-persistent" = callPackage
        ({ mkDerivation, base, cereal, fb, persistent, stdenv, text, time
         }:
         mkDerivation {
           pname = "fb-persistent";
           version = "0.3.6";
           sha256 = "9a24e190b70fd3bcd5a70813e50872398217b24d39da76b175cbcbbd693580c6";
           libraryHaskellDepends = [ base cereal fb persistent text time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/fb-persistent";
           description = "Provides Persistent instances to Facebook types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fclabels" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell, transformers
         }:
         mkDerivation {
           pname = "fclabels";
           version = "2.0.3.2";
           sha256 = "4d5d83ffc3c8bc610e9c42e19c2e07a1ca68666310261de15703c605047182b0";
           revision = "3";
           editedCabalFile = "19gd2jwjpfrmq80gpjk05djhn42vvj88fgka5yr7yaq6mfx103by";
           libraryHaskellDepends = [ base mtl template-haskell transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sebastiaanvisser/fclabels";
           description = "First class accessor labels implemented as lenses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fdo-notify" = callPackage
        ({ mkDerivation, base, containers, dbus, stdenv }:
         mkDerivation {
           pname = "fdo-notify";
           version = "0.3.1";
           sha256 = "7083414bb25e3057f6444722288cebf4ad3e4c2616f95f26079c8c7762989fd8";
           libraryHaskellDepends = [ base containers dbus ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://bitbucket.org/taejo/fdo-notify/";
           description = "Desktop Notifications client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "feature-flags" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "feature-flags";
           version = "0.1.0.1";
           sha256 = "0e4cf7db6791b0875975dfa001d71bf31797b2edbfd2424f6b6202ace7935ad3";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iand675/feature-flags";
           description = "A simple library for dynamically enabling and disabling functionality";
           license = stdenv.lib.licenses.mit;
         }) {};
      "feed" = callPackage
        ({ mkDerivation, base, old-locale, old-time, stdenv, time
         , time-locale-compat, utf8-string, xml
         }:
         mkDerivation {
           pname = "feed";
           version = "0.3.11.1";
           sha256 = "ed04d0fc120a4b1b47c7675d395afbb419506431bc6f8e0f2c382c73a4afc983";
           revision = "4";
           editedCabalFile = "1im8bnyj1bkwis4wbnkbkjnngirkksjlxbw0xp4b35fnl0b0mkpc";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base old-locale old-time time time-locale-compat utf8-string xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bergmark/feed";
           description = "Interfacing with RSS (v 0.9x, 2.x, 1.0) + Atom feeds.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fft" = callPackage
        ({ mkDerivation, array, base, carray, fftw, fftwFloat, ix-shapable
         , stdenv, storable-complex, syb, transformers
         }:
         mkDerivation {
           pname = "fft";
           version = "0.1.8.4";
           sha256 = "2ea96d3150c1fca6ae2d8f0cead263ea1deddc0be18727a0cf4030f2ef07e1b4";
           libraryHaskellDepends = [
             array base carray ix-shapable storable-complex syb transformers
           ];
           libraryPkgconfigDepends = [ fftw fftwFloat ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to the FFTW library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) fftw; inherit (pkgs) fftwFloat;};
      "fgl" = callPackage
        ({ mkDerivation, array, base, containers, deepseq, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "fgl";
           version = "5.5.3.0";
           sha256 = "d70cd8e2694311fae0b44fe0d1b342c95706ceffd3be66767e9027dfa5597e39";
           libraryHaskellDepends = [
             array base containers deepseq transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Martin Erwig's Functional Graph Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fgl-arbitrary" = callPackage
        ({ mkDerivation, base, fgl, QuickCheck, stdenv }:
         mkDerivation {
           pname = "fgl-arbitrary";
           version = "0.2.0.2";
           sha256 = "501d77f1f5efd952aaf06d35fc95bfd3a9bc93906f78a363766ec74d14d50b8b";
           libraryHaskellDepends = [ base fgl QuickCheck ];
           doHaddock = false;
           doCheck = false;
           description = "QuickCheck support for fgl";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "file-embed" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "file-embed";
           version = "0.0.10";
           sha256 = "f751925cec5773a4fad5a48ca0a86a21091ee5f1efccf618a64a89fa2cf5f711";
           libraryHaskellDepends = [
             base bytestring directory filepath template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/file-embed";
           description = "Use Template Haskell to embed file contents directly";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "file-location" = callPackage
        ({ mkDerivation, base, containers, HUnit, lifted-base, stdenv
         , template-haskell, th-orphans, transformers
         }:
         mkDerivation {
           pname = "file-location";
           version = "0.4.9";
           sha256 = "be29deb3c2267913f642e511deca988cedd287ae519012d01178d37d05f814dc";
           libraryHaskellDepends = [
             base containers HUnit lifted-base template-haskell th-orphans
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gregwebs/FileLocation.hs";
           description = "common functions that show file location information";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "file-modules" = callPackage
        ({ mkDerivation, async, base, directory, filepath, haskell-src-exts
         , MissingH, regex-compat, regex-pcre, stdenv
         }:
         mkDerivation {
           pname = "file-modules";
           version = "0.1.2.4";
           sha256 = "ffea2dbd51f77ed76f8559d8519674a1210611a35e2dbea72dfb41d7d5f0f235";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base directory filepath haskell-src-exts MissingH
             regex-compat regex-pcre
           ];
           executableHaskellDepends = [
             async base directory filepath haskell-src-exts MissingH
             regex-compat regex-pcre
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/stack-run-auto";
           description = "Takes a Haskell source-code file and outputs its modules";
           license = stdenv.lib.licenses.mit;
         }) {};
      "filecache" = callPackage
        ({ mkDerivation, base, exceptions, hashable, hinotify, lens, mtl
         , stdenv, stm, strict-base-types, unordered-containers
         }:
         mkDerivation {
           pname = "filecache";
           version = "0.2.9";
           sha256 = "02e6cd64adeeab38b7f6425905332deb8f03824cb4f47a8b8855b846e195dd81";
           libraryHaskellDepends = [
             base exceptions hashable hinotify lens mtl stm strict-base-types
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://lpuppet.banquise.net/";
           description = "A Linux-only cache system associating values to files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "filelock" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "filelock";
           version = "0.1.0.1";
           sha256 = "ad8c63f27fec6396ac83981a67d5a799b6b614c119a35ebdf2d82b379795d763";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/takano-akio/filelock";
           description = "Portable interface to file locking (flock / LockFileEx)";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "filemanip" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, mtl, stdenv
         , unix-compat
         }:
         mkDerivation {
           pname = "filemanip";
           version = "0.3.6.3";
           sha256 = "8836da17baaaf02ca080c9990ece4e0b0c8d6a128f458f8b64fd07b225ca9846";
           libraryHaskellDepends = [
             base bytestring directory filepath mtl unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/filemanip";
           description = "Expressive file and directory manipulation for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "find-clumpiness" = callPackage
        ({ mkDerivation, aeson, base, bytestring, clumpiness, containers
         , optparse-applicative, stdenv, text, text-show, tree-fun
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "find-clumpiness";
           version = "0.2.0.1";
           sha256 = "87db2a011a2662481f59ac03f64e95ef6692519386aee51417c3894c2174da22";
           revision = "1";
           editedCabalFile = "1vq5xvv01xr8p56pzkj6ksw1w6rf8iaxbd2zssf9sy31j5dyp1la";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base clumpiness containers text text-show tree-fun
             unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base bytestring clumpiness containers optparse-applicative
             text tree-fun unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/GregorySchwartz/find-clumpiness#readme";
           description = "Find the clumpiness of labels in a tree";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "fingertree" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fingertree";
           version = "0.1.1.0";
           sha256 = "160c5ba370d781dbf2920ddca870ce8596ab76729972535595bef835ee1cddf0";
           revision = "1";
           editedCabalFile = "0c0hjmila0slsp834cjcvs4qw2r5iszld6p4rl0wrha4fkszywmk";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Generic finger-tree structure, with example instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fingertree-psqueue" = callPackage
        ({ mkDerivation, base, fingertree, stdenv }:
         mkDerivation {
           pname = "fingertree-psqueue";
           version = "0.3";
           sha256 = "9f8c2f1965ea7a618d969db6506c8f373c95e09072b2182de40713d265046c92";
           libraryHaskellDepends = [ base fingertree ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of priority search queues as finger trees";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fixed";
           version = "0.2.1.1";
           sha256 = "24a9e1e251998c9d06037bb771d9eab2980a91132de59a19d0166a1c51e715e2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/fixed";
           description = "Signed 15.16 precision fixed point arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed-list" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fixed-list";
           version = "0.1.6";
           sha256 = "abf680e95d06d31eda26d20c7c61a91b30fbdeadc0e50804ceb97edfcf05fbbe";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jvranish/FixedList/tree/master";
           description = "A fixed length list type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed-vector" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv }:
         mkDerivation {
           pname = "fixed-vector";
           version = "0.8.1.0";
           sha256 = "3c3c29c7248c08061949843727e83ad234584ca77f8076ecd9537a185ebe3a93";
           revision = "1";
           editedCabalFile = "14zsphbaxdnjwv869gx2byj8vh1rp7sk7jmxp7rpm0x74972y3bv";
           libraryHaskellDepends = [ base deepseq primitive ];
           doHaddock = false;
           doCheck = false;
           description = "Generic vectors with statically known size";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed-vector-hetero" = callPackage
        ({ mkDerivation, base, deepseq, fixed-vector, ghc-prim, primitive
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "fixed-vector-hetero";
           version = "0.3.1.1";
           sha256 = "894c7364ea270326dc3e030559ec94e5c6e9f974c9345188cbeba8365a45deaf";
           revision = "2";
           editedCabalFile = "1rw0p12qlj4zw3vms00zddgj4bbdanw3dg41scl0j70p78blf1hq";
           libraryHaskellDepends = [
             base deepseq fixed-vector ghc-prim primitive transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.org/Shimuuar/fixed-vector-hetero";
           description = "Generic heterogeneous vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "flat-mcmc" = callPackage
        ({ mkDerivation, base, mcmc-types, monad-par, monad-par-extras
         , mwc-probability, pipes, primitive, stdenv, transformers, vector
         }:
         mkDerivation {
           pname = "flat-mcmc";
           version = "1.0.1";
           sha256 = "a2852f0b020b086fa9e28e63b502a7bbdcbc4151080ce01baa366d53362de774";
           libraryHaskellDepends = [
             base mcmc-types monad-par monad-par-extras mwc-probability pipes
             primitive transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jtobin.github.com/flat-mcmc";
           description = "Painless general-purpose sampling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "flexible-defaults" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell
         , th-extras, transformers
         }:
         mkDerivation {
           pname = "flexible-defaults";
           version = "0.0.1.2";
           sha256 = "827032cecf5e937d673f3a0b84fbbaba7c03fce6a567c15faf36865da9b76dc2";
           libraryHaskellDepends = [
             base containers template-haskell th-extras transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/flexible-defaults";
           description = "Generate default function implementations for complex type classes";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "flock" = callPackage
        ({ mkDerivation, base, lifted-base, monad-control, stdenv
         , transformers, unix
         }:
         mkDerivation {
           pname = "flock";
           version = "0.3.1.8";
           sha256 = "9634ce605c3b5579f4f1e53af7d93850ec23ffb2fd5b24e02974626af1712fbc";
           revision = "4";
           editedCabalFile = "02jqldkxg366v0gljiqg7zv5sd3zhswabcvg5xx6h8ns67kn3my6";
           libraryHaskellDepends = [
             base lifted-base monad-control transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/hesselink/flock";
           description = "Wrapper for flock(2)";
           license = "unknown";
         }) {};
      "flow" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "flow";
           version = "1.0.7";
           sha256 = "f1964913c5bbd81748610c2f66a7aa9750b25953e6940c0933b25d4b2f1b1f62";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/flow#readme";
           description = "Write more understandable Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fmlist" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fmlist";
           version = "0.9";
           sha256 = "581153395a71e3c139365ffbebbeac6d880a6fdfee23e7f5d942ccbeb2aefcbf";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sjoerdvisscher/fmlist";
           description = "FoldMap lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fn" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, directory
         , filepath, http-types, stdenv, text, unordered-containers, wai
         , wai-extra
         }:
         mkDerivation {
           pname = "fn";
           version = "0.3.0.1";
           sha256 = "72cfbb697e52324f092a4436468f8f63dc063eeb6edbd4885a05d604af62d4bd";
           libraryHaskellDepends = [
             base blaze-builder bytestring directory filepath http-types text
             unordered-containers wai wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/positiondev/fn#readme";
           description = "A functional web framework";
           license = stdenv.lib.licenses.isc;
         }) {};
      "fn-extra" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring
         , digestive-functors, directory, either, fn, heist, http-types
         , lens, mtl, resourcet, stdenv, text, wai, wai-extra, wai-util
         , xmlhtml
         }:
         mkDerivation {
           pname = "fn-extra";
           version = "0.3.0.1";
           sha256 = "5aba71b4edc9b8550514d6d1ac2ce51e8f0959dd68f5d12909fb05e8a6fff207";
           libraryHaskellDepends = [
             base blaze-builder bytestring digestive-functors directory either
             fn heist http-types lens mtl resourcet text wai wai-extra wai-util
             xmlhtml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/positiondev/fn#readme";
           description = "Extras for Fn, a functional web framework";
           license = stdenv.lib.licenses.isc;
         }) {};
      "focus" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "focus";
           version = "0.1.5";
           sha256 = "ef4b641e06207e4b3bfc2c1cbce062db86fe02956ca2294a3ae8c6b1e1ace7b1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/focus";
           description = "A general abstraction for manipulating elements of container data structures";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fold-debounce" = callPackage
        ({ mkDerivation, base, data-default-class, stdenv, stm, stm-delay
         , time
         }:
         mkDerivation {
           pname = "fold-debounce";
           version = "0.2.0.4";
           sha256 = "429702d10061c9c518a119ece8d3bc890feb124a524a3b6a5cdd31a17bcca67a";
           libraryHaskellDepends = [
             base data-default-class stm stm-delay time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/fold-debounce";
           description = "Fold multiple events that happen in a given period of time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fold-debounce-conduit" = callPackage
        ({ mkDerivation, base, conduit, fold-debounce, resourcet, stdenv
         , stm, transformers, transformers-base
         }:
         mkDerivation {
           pname = "fold-debounce-conduit";
           version = "0.1.0.4";
           sha256 = "fb1e937a3e1a78982df53d62ad55c1cd2b79f5ac9c18c56df436435829efa7cc";
           libraryHaskellDepends = [
             base conduit fold-debounce resourcet stm transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/fold-debounce-conduit";
           description = "Regulate input traffic from conduit Source with Control.FoldDebounce";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "foldl" = callPackage
        ({ mkDerivation, base, bytestring, comonad, containers
         , contravariant, mwc-random, primitive, profunctors, stdenv, text
         , transformers, vector
         }:
         mkDerivation {
           pname = "foldl";
           version = "1.2.1";
           sha256 = "86afa8df81991d9901e717107fa12fc6f3577e8fd40ef9e57d388435b6e68073";
           libraryHaskellDepends = [
             base bytestring comonad containers contravariant mwc-random
             primitive profunctors text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Composable, streaming, and efficient left folds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "force-layout" = callPackage
        ({ mkDerivation, base, containers, data-default-class, lens, linear
         , stdenv
         }:
         mkDerivation {
           pname = "force-layout";
           version = "0.4.0.6";
           sha256 = "f7729855b1b14e0b255325faaca9f4834004e02bd21def6a865d2c55c734259d";
           revision = "3";
           editedCabalFile = "0rp5ggzdqy9i8bsjz7i36l8l2b04vjy6sqm6gxmb4pqmakj1x8q6";
           libraryHaskellDepends = [
             base containers data-default-class lens linear
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple force-directed layout";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "forecast-io" = callPackage
        ({ mkDerivation, aeson, base, stdenv, text }:
         mkDerivation {
           pname = "forecast-io";
           version = "0.2.0.0";
           sha256 = "7ed54091d063fdf9ffca57c05a24769345b88a9e5bbb6c1f4037e01f70c69a9f";
           libraryHaskellDepends = [ aeson base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stormont/forecast-io";
           description = "A Haskell library for working with forecast.io data.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "foreign-store" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "foreign-store";
           version = "0.2";
           sha256 = "06718a214d068eaa494cc82376f23b2059a141b01048cd7efcf2176a6c3383dc";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/foreign-store";
           description = "Store a stable pointer in a foreign context to be retrieved later";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "formatting" = callPackage
        ({ mkDerivation, array, base, bytestring, clock, ghc-prim
         , integer-gmp, old-locale, scientific, semigroups, stdenv, text
         , time, transformers
         }:
         mkDerivation {
           pname = "formatting";
           version = "6.3.2";
           sha256 = "0e4fb8b5e6b996bcaedc503409b4fa9a88244a7610f1ebab57383426fcf1b2c0";
           libraryHaskellDepends = [
             array base bytestring clock ghc-prim integer-gmp old-locale
             scientific semigroups text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Combinator-based type-safe formatting (like printf() or FORMAT)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "foundation" = callPackage
        ({ mkDerivation, base, basement, ghc-prim, stdenv }:
         mkDerivation {
           pname = "foundation";
           version = "0.0.19";
           sha256 = "b83bd852f1bc2f7a39fe02ce673580483cb3264ce10dd8768ee4dcf49a2b6f14";
           libraryHaskellDepends = [ base basement ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-foundation/foundation";
           description = "Alternative prelude with batteries and no dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "free" = callPackage
        ({ mkDerivation, base, bifunctors, comonad, containers
         , distributive, exceptions, mtl, prelude-extras, profunctors
         , semigroupoids, semigroups, stdenv, template-haskell, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "free";
           version = "4.12.4";
           sha256 = "c9fe45aae387855626ecb5a0fea6afdb207143cb00af3b1f715d1032d2d08784";
           revision = "2";
           editedCabalFile = "0gmib9bmswrqhl47cp5b871v9f44v9yidzxpljkszy49y9qdf560";
           libraryHaskellDepends = [
             base bifunctors comonad containers distributive exceptions mtl
             prelude-extras profunctors semigroupoids semigroups
             template-haskell transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/free/";
           description = "Monads for free";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "free-vl" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "free-vl";
           version = "0.1.4";
           sha256 = "57f63ed35b42fc54fefb3cc183d0655e0d6c4a28d5371dba00fc9c9d3fa602bf";
           revision = "1";
           editedCabalFile = "1711k76b6w7gfqvc8z9jnylj4hhk3rvx7ap31y1mmq4g2a4s82qm";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aaronlevin/free-vl";
           description = "van Laarhoven encoded Free Monad with Extensible Effects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "freenect" = callPackage
        ({ mkDerivation, base, freenect, freenect_sync, libfreenect, stdenv
         , vector
         }:
         mkDerivation {
           pname = "freenect";
           version = "1.2.1";
           sha256 = "fca7aa958ec04396334b101679f8603850d7c6629770d5206d774e115cd70759";
           libraryHaskellDepends = [ base vector ];
           librarySystemDepends = [ freenect freenect_sync ];
           libraryPkgconfigDepends = [ libfreenect ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/freenect";
           description = "Interface to the Kinect device";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) freenect; inherit (pkgs) freenect_sync; 
inherit (pkgs) libfreenect;};
      "frisby" = callPackage
        ({ mkDerivation, array, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "frisby";
           version = "0.2";
           sha256 = "a3389559849cfc3284923d9b543897abc924c5c076a383890a6a8f21cf4d5247";
           revision = "1";
           editedCabalFile = "1ip1bykcrnqzfjbsi4gfj59lc24k3kvyn949ryczpqshlpgnbnqj";
           libraryHaskellDepends = [ array base containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repetae.net/computer/frisby/";
           description = "Linear time composable parser for PEG grammars";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "frontmatter" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv, yaml }:
         mkDerivation {
           pname = "frontmatter";
           version = "0.1.0.2";
           sha256 = "66eb97b0d5097397f0238b9af764a8c6ea2bb9a4a16cd1214051719fc313b99d";
           libraryHaskellDepends = [ attoparsec base bytestring yaml ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-frontmatter";
           description = "Parses frontmatter as used in Jekyll markdown files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fsnotify" = callPackage
        ({ mkDerivation, async, base, containers, directory, filepath
         , hinotify, stdenv, text, time, unix-compat
         }:
         mkDerivation {
           pname = "fsnotify";
           version = "0.2.1";
           sha256 = "ebcf1b7bd825f269510850f20508a2ba0f640a41af08de0c171d8ba24618542b";
           revision = "1";
           editedCabalFile = "10gbrqb178bdrwaa6nqhhmlaz5ajal0ry6389zajq0xvpvc3cjd0";
           libraryHaskellDepends = [
             async base containers directory filepath hinotify text time
             unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-fswatch/hfsnotify";
           description = "Cross platform library for file change notification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "funcmp" = callPackage
        ({ mkDerivation, base, filepath, process, stdenv }:
         mkDerivation {
           pname = "funcmp";
           version = "1.8";
           sha256 = "33fc37e8c05d665bc6a7a5b4406e433e19fe2c58421a034b76e1b412e8737526";
           revision = "1";
           editedCabalFile = "1fkjmx4mmfmf2y08w7mgw1rp6q6w9zxdj95zfydgxgkmvk9b37c4";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base filepath process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/funcmp";
           description = "Functional MetaPost";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "fuzzcheck" = callPackage
        ({ mkDerivation, base, lifted-base, monad-control, QuickCheck
         , random, stdenv, transformers
         }:
         mkDerivation {
           pname = "fuzzcheck";
           version = "0.1.1";
           sha256 = "ecd664796e9cf5c608ca904897dd9ec18b471a86fcfb4216328382b28023d961";
           libraryHaskellDepends = [
             base lifted-base monad-control QuickCheck random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/fuzzcheck";
           description = "A simple checker for stress testing monadic code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gamma" = callPackage
        ({ mkDerivation, base, continued-fractions, converge, stdenv
         , template-haskell, vector
         }:
         mkDerivation {
           pname = "gamma";
           version = "0.9.0.2";
           sha256 = "983ac33f0141f576425ae85b883ba8241bdfc73ff48d7ea8124a05a731a8e427";
           libraryHaskellDepends = [
             base continued-fractions converge template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/gamma";
           description = "Gamma function and related functions";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "gd" = callPackage
        ({ mkDerivation, base, bytestring, expat, fontconfig, freetype, gd
         , libjpeg, libpng, stdenv, zlib
         }:
         mkDerivation {
           pname = "gd";
           version = "3000.7.3";
           sha256 = "14aecb600d9a058b1905dfdef3d51a1eb11fb92f804fbaaa041103a0bfd97fb6";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [
             expat fontconfig freetype gd libjpeg libpng zlib
           ];
           doHaddock = false;
           doCheck = false;
           description = "A Haskell binding to a subset of the GD graphics library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) expat; inherit (pkgs) fontconfig; 
inherit (pkgs) freetype; inherit (pkgs) gd; 
inherit (pkgs) libjpeg; inherit (pkgs) libpng; inherit (pkgs) zlib;};
      "generic-aeson" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, generic-deriving, mtl
         , stdenv, tagged, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "generic-aeson";
           version = "0.2.0.8";
           sha256 = "de29fa648b9eb6c9e678b0715a530efaf70aac8f1ad8becc22d7ef1411ded5cb";
           revision = "3";
           editedCabalFile = "0qr21mvknnkhnmg7p80vhcxa8xvy2b5zcc8b8zzhp6kq07j755gd";
           libraryHaskellDepends = [
             aeson attoparsec base generic-deriving mtl tagged text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Derivation of Aeson instances using GHC generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generic-deriving" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "generic-deriving";
           version = "1.10.5";
           sha256 = "f6a2af9a96b22cdf496c7d6ef7bb6e8e365937ec61d788b08068f4fcf6854f0d";
           libraryHaskellDepends = [
             base containers ghc-prim template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dreixel/generic-deriving";
           description = "Generic programming library for generalised deriving";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generic-trie" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "generic-trie";
           version = "0.3.0.2";
           sha256 = "38319a5e95ed79e0e8924a69fc992c6fa38a3152a2539314ddd19d1a10abf8e9";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/glguy/tries";
           description = "A map, where the keys may be complex structured data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generic-xmlpickler" = callPackage
        ({ mkDerivation, base, generic-deriving, hxt, stdenv, text }:
         mkDerivation {
           pname = "generic-xmlpickler";
           version = "0.1.0.5";
           sha256 = "d51760f5650051eebe561f2b18670657e8398014fa2a623c0e0169bfeca336af";
           revision = "8";
           editedCabalFile = "1hpcglml4b5yv192syxazminr5v7qjrgqwb2wk0cf7f0sjpm5d0q";
           libraryHaskellDepends = [ base generic-deriving hxt text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/silkapp/generic-xmlpickler";
           description = "Generic generation of HXT XmlPickler instances using GHC Generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generics-eot" = callPackage
        ({ mkDerivation, base, markdown-unlit, stdenv }:
         mkDerivation {
           pname = "generics-eot";
           version = "0.2.1.1";
           sha256 = "89af298dd2ad37bc86ab240f3309451a6e66dd13dbf79227eb01832c3748d0d8";
           libraryHaskellDepends = [ base markdown-unlit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/soenkehahn/generics-eot#readme";
           description = "A library for generic programming that aims to be easy to understand";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generics-sop" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, template-haskell }:
         mkDerivation {
           pname = "generics-sop";
           version = "0.2.3.0";
           sha256 = "2e2c8291de476e103d1978c6ad569be05705fbc178ac89ec68d6a8e20672d377";
           revision = "1";
           editedCabalFile = "03asy8agf5hjayr4hw3mix38j73dam7qhd0xj4c95qzsm4fa1h8v";
           libraryHaskellDepends = [ base ghc-prim template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Generic Programming using True Sums of Products";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "geniplate-mirror" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell }:
         mkDerivation {
           pname = "geniplate-mirror";
           version = "0.7.4";
           sha256 = "1bbfc296d598d604e0cf4da0b4a23e36e73f019f83b7911e18621443f04e2c5f";
           libraryHaskellDepends = [ base mtl template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/danr/geniplate";
           description = "Use Template Haskell to generate Uniplate-like functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "genvalidity" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, validity }:
         mkDerivation {
           pname = "genvalidity";
           version = "0.2.0.4";
           sha256 = "dca8c978f6bedb08199042fa7001dc94143cc69bb3bfc0d4dc90346a19ca8e57";
           revision = "3";
           editedCabalFile = "17vapx4s5gm9hcczlgdx4mqzd4gq67ihvv42hqv30cnnqg8vs4w0";
           libraryHaskellDepends = [ base QuickCheck validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Testing utilities for the validity library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec" = callPackage
        ({ mkDerivation, base, genvalidity, hspec, QuickCheck, stdenv
         , validity
         }:
         mkDerivation {
           pname = "genvalidity-hspec";
           version = "0.2.0.5";
           sha256 = "af4b3a7db29bc9cfe9f10de84256350de91a67d6d3676c8fb269dddf32bce62b";
           revision = "1";
           editedCabalFile = "0invhp8ja2yip23wwnxlr1w94g2x00gv19bkpqh52fhv3ji2vi1l";
           libraryHaskellDepends = [
             base genvalidity hspec QuickCheck validity
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Standard spec's for GenValidity instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "getopt-generics" = callPackage
        ({ mkDerivation, base, base-compat, base-orphans, generics-sop
         , stdenv, tagged
         }:
         mkDerivation {
           pname = "getopt-generics";
           version = "0.13";
           sha256 = "d193384dca0c9fdd8492ee888b1b8954b247f83ead6e4f3f81ded94377aaa34a";
           libraryHaskellDepends = [
             base base-compat base-orphans generics-sop tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/soenkehahn/getopt-generics#readme";
           description = "Create command line interfaces with ease";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-events" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers, mtl
         , stdenv
         }:
         mkDerivation {
           pname = "ghc-events";
           version = "0.4.4.0";
           sha256 = "ab2bf624848165872375954f6b67379991557a58dff66959f585ee9807c84f6d";
           revision = "1";
           editedCabalFile = "0rfwiy10mjl4vyv3gjsi6chz34ra4qicq3px2nm5vrzmlalla8d5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base binary bytestring containers mtl
           ];
           executableHaskellDepends = [
             array base binary bytestring containers mtl
           ];
           doHaddock = false;
           doCheck = false;
           description = "Library and tool for parsing .eventlog files from GHC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-exactprint" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , free, ghc, ghc-paths, mtl, stdenv, syb
         }:
         mkDerivation {
           pname = "ghc-exactprint";
           version = "0.5.2.1";
           sha256 = "756d6d0a706321a3ccd0b3c11c6cee65b5ecce95a988dda540e4f6743a602f08";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers directory filepath free ghc ghc-paths
             mtl syb
           ];
           doHaddock = false;
           doCheck = false;
           description = "ExactPrint for GHC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-heap-view" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, ghc, stdenv
         , template-haskell, transformers
         }:
         mkDerivation {
           pname = "ghc-heap-view";
           version = "0.5.7";
           sha256 = "4b6cbb42c256987e55b5d6136f4c7efb560a5ea1fd34d4878dcec1fe9aa71524";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bytestring containers ghc template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Extract the heap representation of Haskell values and thunks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-imported-from" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, directory
         , exceptions, filepath, ghc, ghc-mod, ghc-paths, ghc-syb-utils
         , haddock-api, hspec, hspec-discover, monad-journal, mtl
         , optparse-applicative, parsec, pipes-transduce, process
         , process-streaming, safe, stdenv, syb, transformers
         }:
         mkDerivation {
           pname = "ghc-imported-from";
           version = "0.3.0.6";
           sha256 = "1a3ea468eb0b326c1794f7ec20c3d0e8493ff3d8fe67fd7e234ca56d26915bbe";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring Cabal containers directory exceptions filepath ghc
             ghc-mod ghc-paths ghc-syb-utils haddock-api hspec hspec-discover
             monad-journal mtl optparse-applicative parsec pipes-transduce
             process process-streaming safe syb transformers
           ];
           executableHaskellDepends = [
             base bytestring Cabal containers directory exceptions filepath ghc
             ghc-mod ghc-paths ghc-syb-utils haddock-api hspec hspec-discover
             monad-journal mtl optparse-applicative parsec process
             process-streaming safe syb transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/carlohamalainen/ghc-imported-from";
           description = "Find the Haddock documentation for a symbol";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-mod" = callPackage
        ({ mkDerivation, base, binary, bytestring, cabal-helper, containers
         , deepseq, directory, djinn-ghc, extra, fclabels, filepath, ghc
         , ghc-paths, ghc-syb-utils, haskell-src-exts, hlint, monad-control
         , monad-journal, mtl, old-time, optparse-applicative, pipes, pretty
         , process, safe, split, stdenv, syb, temporary, text, time
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "ghc-mod";
           version = "5.5.0.0";
           sha256 = "d05be8f3541e875cd4ebefb28968cfc095fc323e49328f2e40581f6f5de70d31";
           revision = "1";
           editedCabalFile = "0kljrsq703bccqzv2r94sl0g58canp3pz5a9c6fcpd6ph2r2kfp3";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bytestring cabal-helper containers deepseq directory
             djinn-ghc extra fclabels filepath ghc ghc-paths ghc-syb-utils
             haskell-src-exts hlint monad-control monad-journal mtl old-time
             pipes pretty process safe split syb temporary text time
             transformers transformers-base
           ];
           executableHaskellDepends = [
             base binary deepseq directory fclabels filepath ghc monad-control
             mtl old-time optparse-applicative pretty process split time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.mew.org/~kazu/proj/ghc-mod/";
           description = "Happy Haskell Programming";
           license = stdenv.lib.licenses.agpl3;
         }) {};
      "ghc-mtl" = callPackage
        ({ mkDerivation, base, exceptions, extensible-exceptions, ghc, mtl
         , stdenv
         }:
         mkDerivation {
           pname = "ghc-mtl";
           version = "1.2.1.0";
           sha256 = "934e36c03ae0cbf59d6eb6d626983a3e520c6101417284b0a652db74e333d940";
           libraryHaskellDepends = [
             base exceptions extensible-exceptions ghc mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/jcpetruzza/ghc-mtl";
           description = "An mtl compatible version of the Ghc-Api monads and monad-transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-parser" = callPackage
        ({ mkDerivation, base, cpphs, ghc, happy, stdenv }:
         mkDerivation {
           pname = "ghc-parser";
           version = "0.1.8.0";
           sha256 = "494e9df73942c5e77e01c331eaee94438c15c711d78f48c1d1c4d8977ffb5152";
           libraryHaskellDepends = [ base ghc ];
           libraryToolDepends = [ cpphs happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gibiansky/IHaskell";
           description = "Haskell source parser from GHC";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ghc-paths" = callPackage
        ({ mkDerivation, base, Cabal, directory, stdenv }:
         mkDerivation {
           pname = "ghc-paths";
           version = "0.1.0.9";
           sha256 = "afa68fb86123004c37c1dc354286af2d87a9dcfb12ddcb80e8bd0cd55bc87945";
           revision = "3";
           editedCabalFile = "1gx47xbm3qviqccnbsibzkfnlzljvls33jh1ry4l506yvfnf4j10";
           setupHaskellDepends = [ base Cabal directory ];
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Knowledge of GHC's installation directories";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-session" = callPackage
        ({ mkDerivation, base, exceptions, ghc, ghc-mtl, ghc-paths, stdenv
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "ghc-session";
           version = "0.1.2.1";
           sha256 = "c1e517fa3fe4fc12ce2d371a8a8b1e50fd1ec22edc94203f0566b23f501e6d0b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base exceptions ghc ghc-mtl ghc-paths transformers
             transformers-compat
           ];
           executableHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pmlodawski/ghc-session";
           description = "Simplified GHC API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ghc-syb-utils" = callPackage
        ({ mkDerivation, base, ghc, stdenv, syb }:
         mkDerivation {
           pname = "ghc-syb-utils";
           version = "0.2.3";
           sha256 = "7ef63fcfe829b621d5b947c6a4567de111976a463f2ffaf0fafc5e76776cbc67";
           revision = "1";
           editedCabalFile = "0z2c5hpw1sia6na8wfsy33f7qy0c8vd847z3fwx3x6kj5ma6yvkp";
           libraryHaskellDepends = [ base ghc syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nominolo/ghc-syb";
           description = "Scrap Your Boilerplate utilities for the GHC API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-tcplugins-extra" = callPackage
        ({ mkDerivation, base, ghc, stdenv }:
         mkDerivation {
           pname = "ghc-tcplugins-extra";
           version = "0.2";
           sha256 = "f3542b6734b20e3e25f851589944d1d185533c0f0a5428eee86f422ad3687374";
           libraryHaskellDepends = [ base ghc ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/clash-lang/ghc-tcplugins-extra";
           description = "Utilities for writing GHC type-checker plugins";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ghc-typelits-extra" = callPackage
        ({ mkDerivation, base, ghc, ghc-tcplugins-extra, integer-gmp
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "ghc-typelits-extra";
           version = "0.1.3";
           sha256 = "65c81dd6deca863a313ef121950753797d58affbcf1edb7627559c4ec1411fd7";
           libraryHaskellDepends = [
             base ghc ghc-tcplugins-extra integer-gmp transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "Additional type-level operations on GHC.TypeLits.Nat";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ghc-typelits-natnormalise" = callPackage
        ({ mkDerivation, base, ghc, ghc-tcplugins-extra, integer-gmp
         , stdenv
         }:
         mkDerivation {
           pname = "ghc-typelits-natnormalise";
           version = "0.4.6";
           sha256 = "24cf8f937c88a6c3a489af8a4f2e23ee8f994eb4e5fa7fecb6942cee71bd160e";
           libraryHaskellDepends = [
             base ghc ghc-tcplugins-extra integer-gmp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "GHC typechecker plugin for types of kind GHC.TypeLits.Nat";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ghcid" = callPackage
        ({ mkDerivation, ansi-terminal, base, cmdargs, containers
         , directory, extra, filepath, fsnotify, process, stdenv
         , terminal-size, time, unix
         }:
         mkDerivation {
           pname = "ghcid";
           version = "0.6.6";
           sha256 = "62f567852111da733b6feedbfb37ff561889e27af63d16df048f37a4bfeb6ab0";
           revision = "1";
           editedCabalFile = "1wdwxyc3jfsis9fzkn3vrb740lwrbaml5xv17h4m8zh300aghsgg";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base cmdargs directory extra filepath process terminal-size time
             unix
           ];
           executableHaskellDepends = [
             ansi-terminal base cmdargs containers directory extra filepath
             fsnotify process terminal-size time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/ghcid#readme";
           description = "GHCi based bare bones IDE";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghcjs-codemirror" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ghcjs-codemirror";
           version = "0.0.0.1";
           sha256 = "dcd9f5288d7624c8a2a5bf8440d9de6ab8400707d366180b13cc3f472280a513";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ghcjs/CodeMirror";
           description = "Installs CodeMirror JavaScript files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ghcjs-dom" = callPackage
        ({ mkDerivation, base, glib, gtk3, stdenv, text, transformers
         , webkitgtk3
         }:
         mkDerivation {
           pname = "ghcjs-dom";
           version = "0.2.4.0";
           sha256 = "986db6b770c348d7a28368309a648626455d55e7a5705a849fd5a2981eb868a6";
           libraryHaskellDepends = [
             base glib gtk3 text transformers webkitgtk3
           ];
           doHaddock = false;
           doCheck = false;
           description = "DOM library that supports both GHCJS and WebKitGTK";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gi-atk" = callPackage
        ({ mkDerivation, atk, base, bytestring, containers, gi-glib
         , gi-gobject, haskell-gi, haskell-gi-base, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "gi-atk";
           version = "2.0.3";
           sha256 = "3470813961cc6223c02b29cceaede04966b4e5ed497748bd0a61c023d7142620";
           libraryHaskellDepends = [
             base bytestring containers gi-glib gi-gobject haskell-gi
             haskell-gi-base text transformers
           ];
           libraryPkgconfigDepends = [ atk ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Atk bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) atk;};
      "gi-cairo" = callPackage
        ({ mkDerivation, base, bytestring, cairo, containers, haskell-gi
         , haskell-gi-base, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-cairo";
           version = "1.0.3";
           sha256 = "0b54aff46b1998285a79a7356c5a74699112d6b09f1952bb30622ee6b53afe8b";
           libraryHaskellDepends = [
             base bytestring containers haskell-gi haskell-gi-base text
             transformers
           ];
           libraryPkgconfigDepends = [ cairo ];
           doHaddock = false;
           doCheck = false;
           preCompileBuildDriver = ''
             PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
             setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
           '';
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Cairo bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) cairo;};
      "gi-gdk" = callPackage
        ({ mkDerivation, base, bytestring, containers, gi-cairo
         , gi-gdkpixbuf, gi-gio, gi-glib, gi-gobject, gi-pango, gtk3
         , haskell-gi, haskell-gi-base, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-gdk";
           version = "3.0.3";
           sha256 = "12bd380233f41a43479891a3f731391b7ecd1d74712f263f835089cb8090be4b";
           libraryHaskellDepends = [
             base bytestring containers gi-cairo gi-gdkpixbuf gi-gio gi-glib
             gi-gobject gi-pango haskell-gi haskell-gi-base text transformers
           ];
           libraryPkgconfigDepends = [ gtk3 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Gdk bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {gtk3 = pkgs.gnome3.gtk;};
      "gi-gdkpixbuf" = callPackage
        ({ mkDerivation, base, bytestring, containers, gdk_pixbuf, gi-gio
         , gi-glib, gi-gobject, haskell-gi, haskell-gi-base, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "gi-gdkpixbuf";
           version = "2.0.3";
           sha256 = "5c1dcc322ad42839c74e5be2fb715f29bfa1f06d285ea4e90d2f3a19a6f545c9";
           libraryHaskellDepends = [
             base bytestring containers gi-gio gi-glib gi-gobject haskell-gi
             haskell-gi-base text transformers
           ];
           libraryPkgconfigDepends = [ gdk_pixbuf ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "GdkPixbuf bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) gdk_pixbuf;};
      "gi-gio" = callPackage
        ({ mkDerivation, base, bytestring, containers, gi-glib, gi-gobject
         , glib, haskell-gi, haskell-gi-base, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-gio";
           version = "2.0.3";
           sha256 = "1b2cc15f3cb60b72a7256ec8b5d0a07644b850055ae45fab5b0be9633d96f09c";
           libraryHaskellDepends = [
             base bytestring containers gi-glib gi-gobject haskell-gi
             haskell-gi-base text transformers
           ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Gio bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "gi-glib" = callPackage
        ({ mkDerivation, base, bytestring, containers, glib, haskell-gi
         , haskell-gi-base, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-glib";
           version = "2.0.3";
           sha256 = "2a961091547deaf8509ef3213353ec7b6ea458a584a81eef7d2685f8312b1170";
           libraryHaskellDepends = [
             base bytestring containers haskell-gi haskell-gi-base text
             transformers
           ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "GLib bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "gi-gobject" = callPackage
        ({ mkDerivation, base, bytestring, containers, gi-glib, glib
         , haskell-gi, haskell-gi-base, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-gobject";
           version = "2.0.3";
           sha256 = "9cd5c2c8a2c1599334f705ea15fc3e7e63f012c60a46669ad108a2965d73973b";
           libraryHaskellDepends = [
             base bytestring containers gi-glib haskell-gi haskell-gi-base text
             transformers
           ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "GObject bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "gi-gtk" = callPackage
        ({ mkDerivation, base, bytestring, containers, gi-atk, gi-cairo
         , gi-gdk, gi-gdkpixbuf, gi-gio, gi-glib, gi-gobject, gi-pango, gtk3
         , haskell-gi, haskell-gi-base, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-gtk";
           version = "3.0.3";
           sha256 = "490acc92f75b231e9770b5bba2e041c2e3cd163c5e6483a153f072b0b6987c31";
           libraryHaskellDepends = [
             base bytestring containers gi-atk gi-cairo gi-gdk gi-gdkpixbuf
             gi-gio gi-glib gi-gobject gi-pango haskell-gi haskell-gi-base text
             transformers
           ];
           libraryPkgconfigDepends = [ gtk3 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Gtk bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {gtk3 = pkgs.gnome3.gtk;};
      "gi-pango" = callPackage
        ({ mkDerivation, base, bytestring, cairo, containers, gi-glib
         , gi-gobject, haskell-gi, haskell-gi-base, pango, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "gi-pango";
           version = "1.0.3";
           sha256 = "d1a5f97c17038967573576e2eba05207e1d6d8c89a704d87767681e858fb0257";
           libraryHaskellDepends = [
             base bytestring containers gi-glib gi-gobject haskell-gi
             haskell-gi-base text transformers
           ];
           libraryPkgconfigDepends = [ cairo pango ];
           doHaddock = false;
           doCheck = false;
           preCompileBuildDriver = ''
             PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
             setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
           '';
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Pango bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) cairo; inherit (pkgs) pango;};
      "gio" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, glib
         , gtk2hs-buildtools, mtl, stdenv, system-glib
         }:
         mkDerivation {
           pname = "gio";
           version = "0.13.1.1";
           sha256 = "d04d9b87b43bf12c5917ea561da403f80fe955adf735785ea8afa0915478113b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base bytestring containers glib mtl
           ];
           libraryPkgconfigDepends = [ system-glib ];
           libraryToolDepends = [ gtk2hs-buildtools ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Binding to GIO";
           license = stdenv.lib.licenses.lgpl21;
         }) {system-glib = pkgs.glib;};
      "gipeda" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cassava, containers
         , directory, extra, filepath, gitlib, gitlib-libgit2, scientific
         , shake, split, stdenv, tagged, text, unordered-containers, vector
         , yaml
         }:
         mkDerivation {
           pname = "gipeda";
           version = "0.2.0.1";
           sha256 = "8b2e6d06a7392b5ce4956a97aa6102213b790e575516c74feeaed371e0f7e12e";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson base bytestring cassava containers directory extra filepath
             gitlib gitlib-libgit2 scientific shake split tagged text
             unordered-containers vector yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nomeata/gipeda";
           description = "Git Performance Dashboard";
           license = stdenv.lib.licenses.mit;
         }) {};
      "giphy-api" = callPackage
        ({ mkDerivation, aeson, base, containers, http-api-data
         , http-client, http-client-tls, microlens, microlens-th, mtl
         , network-uri, servant, servant-client, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "giphy-api";
           version = "0.4.0.0";
           sha256 = "bb2952f54232cead3e66350b514ca31aac511bf172be45115b98dd8777859876";
           revision = "2";
           editedCabalFile = "1xfri731br7ghpmq209y14vf26xrgdsbd32g8ck5wsdysqrmwqdz";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base containers http-api-data http-client http-client-tls
             microlens microlens-th mtl network-uri servant servant-client text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/passy/giphy-api#readme";
           description = "Giphy HTTP API wrapper and CLI search tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "git-annex" = callPackage
        ({ mkDerivation, aeson, async, base, bloomfilter, bup, bytestring
         , case-insensitive, concurrent-output, containers, crypto-api
         , cryptonite, curl, data-default, DAV, dbus, directory
         , disk-free-space, dlist, dns, edit-distance, esqueleto, exceptions
         , fdo-notify, feed, filepath, git, gnupg, gnutls, hinotify
         , hslogger, http-client, http-conduit, http-types, IfElse, json
         , lsof, magic, MissingH, monad-control, monad-logger, mountpoints
         , mtl, network, network-info, network-multicast
         , network-protocol-xmpp, network-uri, old-locale, openssh
         , optparse-applicative, perl, persistent, persistent-sqlite
         , persistent-template, process, QuickCheck, random, regex-tdfa
         , resourcet, rsync, SafeSemaphore, sandi, stdenv, stm, tasty
         , tasty-hunit, tasty-quickcheck, tasty-rerun, text, time, torrent
         , transformers, unix, unix-compat, utf8-string, uuid, wget, which
         , xml-types
         }:
         mkDerivation {
           pname = "git-annex";
           version = "6.20160511";
           sha256 = "85fc8853166fe57d91dc2776d5df4acb5911a91815f8aa12881928a1afe8ba01";
           configureFlags = [
             "-fassistant" "-fcryptonite" "-fdbus" "-fdesktopnotify" "-fdns"
             "-ffeed" "-finotify" "-fpairing" "-fproduction" "-fquvi" "-f-s3"
             "-ftahoe" "-ftdfa" "-ftestsuite" "-ftorrentparser" "-f-webapp"
             "-f-webapp-secure" "-fwebdav" "-fxmpp"
           ];
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson async base bloomfilter bytestring case-insensitive
             concurrent-output containers crypto-api cryptonite data-default DAV
             dbus directory disk-free-space dlist dns edit-distance esqueleto
             exceptions fdo-notify feed filepath gnutls hinotify hslogger
             http-client http-conduit http-types IfElse json magic MissingH
             monad-control monad-logger mountpoints mtl network network-info
             network-multicast network-protocol-xmpp network-uri old-locale
             optparse-applicative persistent persistent-sqlite
             persistent-template process QuickCheck random regex-tdfa resourcet
             SafeSemaphore sandi stm tasty tasty-hunit tasty-quickcheck
             tasty-rerun text time torrent transformers unix unix-compat
             utf8-string uuid xml-types
           ];
           executableSystemDepends = [
             bup curl git gnupg lsof openssh perl rsync wget which
           ];
           doHaddock = false;
           doCheck = false;
           preConfigure = "export HOME=$TEMPDIR; patchShebangs .";
           installPhase = "make PREFIX=$out BUILDER=: install";
           checkPhase = ''
             ln -sf dist/build/git-annex/git-annex git-annex
             ln -sf git-annex git-annex-shell
             export PATH+=":$PWD"
             git-annex test
           '';
           enableSharedExecutables = false;
           homepage = "http://git-annex.branchable.com/";
           description = "manage files with git, without checking their contents into git";
           license = stdenv.lib.licenses.gpl3;
         }) {inherit (pkgs) bup; inherit (pkgs) curl; inherit (pkgs) git; 
inherit (pkgs) gnupg; inherit (pkgs) lsof; inherit (pkgs) openssh; 
inherit (pkgs) perl; inherit (pkgs) rsync; inherit (pkgs) wget; 
inherit (pkgs) which;};
      "git-fmt" = callPackage
        ({ mkDerivation, base, exceptions, extra, fast-logger, filepath
         , monad-logger, monad-parallel, mtl, omnifmt, optparse-applicative
         , pipes, pipes-concurrency, process, stdenv, temporary, text, time
         }:
         mkDerivation {
           pname = "git-fmt";
           version = "0.4.1.0";
           sha256 = "a9c10f79f92b6a1650f4eac002542a35dda0048ed68d670602e97615b879e97d";
           revision = "1";
           editedCabalFile = "1abzdz0yyinniwbq9gbpc77mbisqgjj9h9jsmk1177dv2nbrglcn";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base exceptions extra fast-logger filepath monad-logger
             monad-parallel mtl omnifmt optparse-applicative pipes
             pipes-concurrency process temporary text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hjwylde/git-fmt";
           description = "Custom git command for formatting code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "github" = callPackage
        ({ mkDerivation, aeson, aeson-compat, attoparsec, base, base-compat
         , base16-bytestring, binary, binary-orphans, byteable, bytestring
         , containers, cryptohash, deepseq, deepseq-generics, exceptions
         , hashable, http-client, http-client-tls, http-link-header
         , http-types, iso8601-time, mtl, network-uri, semigroups, stdenv
         , text, time, transformers, transformers-compat
         , unordered-containers, vector, vector-instances
         }:
         mkDerivation {
           pname = "github";
           version = "0.14.1";
           sha256 = "fcd5f8957855e4a110db2dc411916309fd7afb7105534ebe378a5698f409fa7d";
           revision = "1";
           editedCabalFile = "111560ggn1ydpk24fz5i1q1hqj41b9q6yj427s9m2i7bg72w4gx0";
           libraryHaskellDepends = [
             aeson aeson-compat attoparsec base base-compat base16-bytestring
             binary binary-orphans byteable bytestring containers cryptohash
             deepseq deepseq-generics exceptions hashable http-client
             http-client-tls http-link-header http-types iso8601-time mtl
             network-uri semigroups text time transformers transformers-compat
             unordered-containers vector vector-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/github";
           description = "Access to the GitHub API, v3";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "github-backup" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory
         , exceptions, filepath, git, github, hslogger, IfElse, MissingH
         , mtl, network, network-uri, optparse-applicative, pretty-show
         , process, stdenv, text, transformers, unix, unix-compat
         , utf8-string, vector
         }:
         mkDerivation {
           pname = "github-backup";
           version = "1.20160522";
           sha256 = "da5f7c8458321e039f8634cce7ce539bf5c0464e9487072ab79a68fa074d5aa8";
           isLibrary = false;
           isExecutable = true;
           setupHaskellDepends = [ base hslogger MissingH ];
           executableHaskellDepends = [
             base bytestring containers directory exceptions filepath github
             hslogger IfElse MissingH mtl network network-uri
             optparse-applicative pretty-show process text transformers unix
             unix-compat utf8-string vector
           ];
           executableToolDepends = [ git ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joeyh/github-backup";
           description = "backs up everything github knows about a repository, to the repository";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "github-release" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client
         , http-client-tls, http-types, mime-types, optparse-generic, stdenv
         , text, unordered-containers, uri-templater
         }:
         mkDerivation {
           pname = "github-release";
           version = "0.1.9";
           sha256 = "df10ca8f6c8dd97e3dbf6f173a63498a674f7564d727c5647782ec029bd4d1ef";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring http-client http-client-tls http-types
             mime-types optparse-generic text unordered-containers uri-templater
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/github-release#readme";
           description = "Upload files to GitHub releases";
           license = stdenv.lib.licenses.mit;
         }) {};
      "github-types" = callPackage
        ({ mkDerivation, aeson, base, stdenv, text, time }:
         mkDerivation {
           pname = "github-types";
           version = "0.2.1";
           sha256 = "cce4ea461b3ea7c92d130181244cfe7f29c10aecc7e7a980ee6722b6d6af7867";
           libraryHaskellDepends = [ aeson base text time ];
           doHaddock = false;
           doCheck = false;
           description = "Type definitions for objects used by the GitHub v3 API";
           license = "unknown";
         }) {};
      "github-webhook-handler" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cryptohash, github-types
         , stdenv, text, transformers, uuid, vector
         }:
         mkDerivation {
           pname = "github-webhook-handler";
           version = "0.0.8";
           sha256 = "1d908854606683c236720c2de3988ae723591be02b1c668bd8ba0ffa03b34fea";
           revision = "1";
           editedCabalFile = "1nhwindcplcyyffvzw0cig1p0m8165laq3hv94s596rsi3b5pgqr";
           libraryHaskellDepends = [
             aeson base bytestring cryptohash github-types text transformers
             uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "GitHub WebHook Handler";
           license = stdenv.lib.licenses.mit;
         }) {};
      "github-webhook-handler-snap" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, github-types
         , github-webhook-handler, snap-core, stdenv, uuid
         }:
         mkDerivation {
           pname = "github-webhook-handler-snap";
           version = "0.0.6";
           sha256 = "ec62b61aeb429492b347ed327b14a4c1bcf44d3791ac61ee6989f8a0a608a80e";
           libraryHaskellDepends = [
             base bytestring case-insensitive github-types
             github-webhook-handler snap-core uuid
           ];
           doHaddock = false;
           doCheck = false;
           description = "GitHub WebHook Handler implementation for Snap";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitlib" = callPackage
        ({ mkDerivation, base, base16-bytestring, bytestring, conduit
         , conduit-combinators, containers, directory, exceptions, filepath
         , hashable, lifted-async, lifted-base, monad-control, mtl
         , resourcet, semigroups, stdenv, tagged, text, time, transformers
         , unix, unordered-containers
         }:
         mkDerivation {
           pname = "gitlib";
           version = "3.1.1";
           sha256 = "dd68758b62fb0ca52f3ed851d2e68779770b1d83f2dd846528c3538aabf395ef";
           libraryHaskellDepends = [
             base base16-bytestring bytestring conduit conduit-combinators
             containers directory exceptions filepath hashable lifted-async
             lifted-base monad-control mtl resourcet semigroups tagged text time
             transformers unix unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "API library for working with Git repositories";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitlib-libgit2" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-combinators
         , containers, directory, exceptions, fast-logger, filepath, gitlib
         , hlibgit2, lifted-async, lifted-base, mmorph, monad-control
         , monad-loops, mtl, resourcet, stdenv, stm, stm-conduit, tagged
         , template-haskell, text, text-icu, time, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "gitlib-libgit2";
           version = "3.1.1";
           sha256 = "fc2806ebc1bb51f5043a0d5091c5045be40bf82cae3296213b353507b8c868bb";
           revision = "1";
           editedCabalFile = "0v510c4sd6zwwf6mbc6gfv5sin91ckw4v6c844wrfksi9gdq3shm";
           libraryHaskellDepends = [
             base bytestring conduit conduit-combinators containers directory
             exceptions fast-logger filepath gitlib hlibgit2 lifted-async
             lifted-base mmorph monad-control monad-loops mtl resourcet stm
             stm-conduit tagged template-haskell text text-icu time transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "Libgit2 backend for gitlib";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitlib-test" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-combinators
         , exceptions, gitlib, hspec, hspec-expectations, HUnit
         , monad-control, stdenv, tagged, text, time, transformers
         }:
         mkDerivation {
           pname = "gitlib-test";
           version = "3.1.0.3";
           sha256 = "fe0abfa269dabd63d60f856db0a82c88d6bd059de1d4d84dccaf846a1a38291f";
           libraryHaskellDepends = [
             base bytestring conduit conduit-combinators exceptions gitlib hspec
             hspec-expectations HUnit monad-control tagged text time
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Test library for confirming gitlib backend compliance";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitrev" = callPackage
        ({ mkDerivation, base, directory, filepath, process, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "gitrev";
           version = "1.2.0";
           sha256 = "4391e34edb5caaab901c6faa4369b246b6896c747869f6ab85b6db5524003102";
           libraryHaskellDepends = [
             base directory filepath process template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acfoltzer/gitrev";
           description = "Compile git revision info into Haskell projects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gitson" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, directory
         , errors, filepath, flock, monad-control, process, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "gitson";
           version = "0.5.1";
           sha256 = "5efabd7b86a7866bb5179a298bccf3492b814e4c69d1b8073c63b1c1e615b29c";
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring directory errors filepath flock
             monad-control process transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/gitson";
           description = "A document store library for Git + JSON";
           license = "unknown";
         }) {};
      "gl" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, fixed, half
         , hxt, libGL, split, stdenv, transformers
         }:
         mkDerivation {
           pname = "gl";
           version = "0.7.8.1";
           sha256 = "ed792ee75d32489857295ef9ae6a4a49900e2ed4a01cd2bac9fdd17959a6219a";
           libraryHaskellDepends = [
             base containers directory filepath fixed half hxt split
             transformers
           ];
           librarySystemDepends = [ libGL ];
           doHaddock = false;
           doCheck = false;
           description = "Complete OpenGL raw bindings";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libGL;};
      "glib" = callPackage
        ({ mkDerivation, base, bytestring, containers, glib
         , gtk2hs-buildtools, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "glib";
           version = "0.13.2.2";
           sha256 = "16bc6710ac195778e514c6ba1da3b22a057854d4db0929b4835172ec42e0497f";
           libraryHaskellDepends = [
             base bytestring containers text utf8-string
           ];
           libraryPkgconfigDepends = [ glib ];
           libraryToolDepends = [ gtk2hs-buildtools ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Binding to the GLIB library for Gtk2Hs";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "gnuidn" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, libidn, stdenv, text }:
         mkDerivation {
           pname = "gnuidn";
           version = "0.2.2";
           sha256 = "61346b1f764cead5633bdc83f7dc9836b1627f484984094cdffa95dfd365b96f";
           libraryHaskellDepends = [ base bytestring text ];
           librarySystemDepends = [ libidn ];
           libraryPkgconfigDepends = [ libidn ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-gnuidn/";
           description = "Bindings for GNU IDN";
           license = stdenv.lib.licenses.gpl3;
         }) {inherit (pkgs) libidn;};
      "gnutls" = callPackage
        ({ mkDerivation, base, bytestring, gnutls, monads-tf, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "gnutls";
           version = "0.2";
           sha256 = "c0e6fddf92d48d1e6ab0d93af8104cc83d250eab7b3d369780ef72801aa8b7b0";
           libraryHaskellDepends = [ base bytestring monads-tf transformers ];
           librarySystemDepends = [ gnutls ];
           libraryPkgconfigDepends = [ gnutls ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-gnutls/";
           description = "Bindings for GNU libgnutls";
           license = stdenv.lib.licenses.gpl3;
         }) {inherit (pkgs) gnutls;};
      "google-cloud" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client
         , http-client-tls, http-types, mtl, random, scientific, stdenv, stm
         , text, time, unordered-containers
         }:
         mkDerivation {
           pname = "google-cloud";
           version = "0.0.4";
           sha256 = "09a77ce6846ea0c5f9d7e5578dcddcbaf4905437445edb45c2da35456324fb9a";
           revision = "1";
           editedCabalFile = "0512swl7ydlcjdbvcb2xm59q97yr3wxgh3sfdsz3zdm1y88qi18c";
           libraryHaskellDepends = [
             aeson base bytestring http-client http-client-tls http-types mtl
             random scientific stm text time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Client for the Google Cloud APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gpolyline" = callPackage
        ({ mkDerivation, base, split, stdenv }:
         mkDerivation {
           pname = "gpolyline";
           version = "0.1.0.1";
           sha256 = "28b3a644853ba6f0a7d6465d8d62646a10c995008a799ae67e728c8cf4a17a05";
           libraryHaskellDepends = [ base split ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fegu/gpolyline";
           description = "Pure module for encoding/decoding Google Polyline";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "graph-core" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, mtl, safe
         , stdenv, unordered-containers, vector
         }:
         mkDerivation {
           pname = "graph-core";
           version = "0.3.0.0";
           sha256 = "378f0baa40ebbb78e8c389f79e363eb573cdf182f799684d2f3d6ac51b10e854";
           libraryHaskellDepends = [
             base containers deepseq hashable mtl safe unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/factisresearch/graph-core";
           description = "Fast, memory efficient and persistent graph implementation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "graph-wrapper" = callPackage
        ({ mkDerivation, array, base, containers, stdenv }:
         mkDerivation {
           pname = "graph-wrapper";
           version = "0.2.5.1";
           sha256 = "8361853fca2d2251bd233e18393053dd391d21ca6f210b2bc861b0e0f4c2e113";
           libraryHaskellDepends = [ array base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/soenkehahn/graph-wrapper";
           description = "A wrapper around the standard Data.Graph with a less awkward interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "graphs" = callPackage
        ({ mkDerivation, array, base, containers, stdenv, transformers
         , transformers-compat, void
         }:
         mkDerivation {
           pname = "graphs";
           version = "0.7";
           sha256 = "eea656ac6092eac99bafc0b7817efa34529b895408fc1267a5b573fb332f6f4c";
           revision = "1";
           editedCabalFile = "1ya9yciclp6wgz2md1jhxh9lyv3w8bzaqbqc1xryy6ql29wsmy1r";
           libraryHaskellDepends = [
             array base containers transformers transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/graphs";
           description = "A simple monadic graph library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "graphviz" = callPackage
        ({ mkDerivation, base, bytestring, colour, containers, directory
         , dlist, fgl, filepath, polyparse, process, stdenv, temporary, text
         , transformers, wl-pprint-text
         }:
         mkDerivation {
           pname = "graphviz";
           version = "2999.18.1.2";
           sha256 = "b08c2026d3810c15f6ad49a07fd7b879978d958fa477b369b719ec00741c85fc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring colour containers directory dlist fgl filepath
             polyparse process temporary text transformers wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/graphviz/";
           description = "Bindings to Graphviz for graph visualisation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gravatar" = callPackage
        ({ mkDerivation, base, bytestring, data-default, HTTP, pureMD5
         , stdenv, text
         }:
         mkDerivation {
           pname = "gravatar";
           version = "0.8.0";
           sha256 = "6f6000acaea47f3fc8711f5a2a62d5fbe96f5bb698fcb997f9f07ffe3102f4d7";
           libraryHaskellDepends = [
             base bytestring data-default HTTP pureMD5 text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Generate Gravatar image URLs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "graylog" = callPackage
        ({ mkDerivation, aeson, aeson-casing, base, bytestring, network
         , random, scientific, stdenv, text, time, vector
         }:
         mkDerivation {
           pname = "graylog";
           version = "0.1.0.1";
           sha256 = "2d8173e61da8d02c39cb95e6ccea8a167c792f682a496aed5fe4edfd0e6a0082";
           libraryHaskellDepends = [
             aeson aeson-casing base bytestring network random scientific text
             time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AndrewRademacher/haskell-graylog";
           description = "Support for graylog output";
           license = "unknown";
         }) {};
      "groom" = callPackage
        ({ mkDerivation, base, haskell-src-exts, stdenv }:
         mkDerivation {
           pname = "groom";
           version = "0.1.2";
           sha256 = "0e820122cad388f31c3ef0815d7ff93b9e95a8fdec0d6c560c379fe0ecfdb010";
           libraryHaskellDepends = [ base haskell-src-exts ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty printing for well-behaved Show instances";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "groundhog" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, containers, monad-control
         , monad-logger, mtl, scientific, stdenv, text, time, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "groundhog";
           version = "0.7.0.3";
           sha256 = "39713e7b3423ea34a5ac803d4a563d7f9674bbf72700e263a00c7bc70328ac58";
           revision = "2";
           editedCabalFile = "1zzk6q800yl20hdg1wy0224lclj45n88k6aqskc6mbzady3zg8ml";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring blaze-builder bytestring
             containers monad-control monad-logger mtl scientific text time
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lykahb/groundhog";
           description = "Type-safe datatype-database mapping library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-mysql" = callPackage
        ({ mkDerivation, base, bytestring, containers, groundhog
         , monad-control, monad-logger, mysql, mysql-simple, resource-pool
         , stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "groundhog-mysql";
           version = "0.7.0.1";
           sha256 = "ee884137d44cb3f391d402f524d149825477a898b29e99e8056a03b56db4f606";
           libraryHaskellDepends = [
             base bytestring containers groundhog monad-control monad-logger
             mysql mysql-simple resource-pool text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "MySQL backend for the groundhog library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-postgresql" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , containers, groundhog, monad-control, monad-logger
         , postgresql-libpq, postgresql-simple, resource-pool, stdenv, text
         , time, transformers
         }:
         mkDerivation {
           pname = "groundhog-postgresql";
           version = "0.7.0.2";
           sha256 = "312045c39c973596e8e92b8001776bb86898e3c8766e0a42c71e63b343918da3";
           revision = "1";
           editedCabalFile = "1jlr0vf0rvg3kb39qh0swx2p37r1xqkzqr30j2fxjw6q4ycz8k01";
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring containers groundhog
             monad-control monad-logger postgresql-libpq postgresql-simple
             resource-pool text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "PostgreSQL backend for the groundhog library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-sqlite" = callPackage
        ({ mkDerivation, base, bytestring, containers, direct-sqlite
         , groundhog, monad-control, monad-logger, resource-pool, stdenv
         , text, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "groundhog-sqlite";
           version = "0.7.0.1";
           sha256 = "be89709d458bb03a688281fbeab0408cdbc4f7942bf7559c25feb6ab9c4f5553";
           libraryHaskellDepends = [
             base bytestring containers direct-sqlite groundhog monad-control
             monad-logger resource-pool text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Sqlite3 backend for the groundhog library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-th" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, groundhog
         , stdenv, template-haskell, text, time, unordered-containers, yaml
         }:
         mkDerivation {
           pname = "groundhog-th";
           version = "0.7.0.1";
           sha256 = "700cd109989bbf4dd8cff72249077035cb2ca8c1d4c9748bfecf4bc17f3ee095";
           libraryHaskellDepends = [
             aeson base bytestring containers groundhog template-haskell text
             time unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           description = "Type-safe datatype-database mapping library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "grouped-list" = callPackage
        ({ mkDerivation, base, containers, deepseq, pointed, stdenv }:
         mkDerivation {
           pname = "grouped-list";
           version = "0.2.1.2";
           sha256 = "5bc49f34b1d9759a819c919971d789b14d37a8e22de811a5fc062675e3f8e875";
           libraryHaskellDepends = [ base containers deepseq pointed ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/grouped-list/blob/master/README.md";
           description = "Grouped lists. Equal consecutive elements are grouped.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groupoids" = callPackage
        ({ mkDerivation, base, semigroupoids, stdenv }:
         mkDerivation {
           pname = "groupoids";
           version = "4.0";
           sha256 = "6671953fa0970c13ac8014278fcd6227b4c07e1a69d5a23965e2df1418218a22";
           libraryHaskellDepends = [ base semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/groupoids/";
           description = "This package has been absorbed into semigroupoids 4.0";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groups" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "groups";
           version = "0.4.0.0";
           sha256 = "d328395164033e310148d57d5be86fc6cc4dbc97b4296b91f235b213cc80e8ce";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell 98 groups";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "growler" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring
         , case-insensitive, either, http-types, lens, monad-control, mtl
         , pipes, pipes-aeson, pipes-wai, regex-compat, stdenv, text
         , transformers, transformers-base, unordered-containers, vector
         , wai, wai-extra, warp
         }:
         mkDerivation {
           pname = "growler";
           version = "0.6.0";
           sha256 = "e560344ffae87dd5159bf45e822f1c2970eb0e14031dbcc3439a4d70c59f7e6a";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring case-insensitive either
             http-types lens monad-control mtl pipes pipes-aeson pipes-wai
             regex-compat text transformers transformers-base
             unordered-containers vector wai wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/iand675/growler";
           description = "A revised version of the scotty library that attempts to be simpler and more performant";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gsasl" = callPackage
        ({ mkDerivation, base, bytestring, gsasl, stdenv, transformers }:
         mkDerivation {
           pname = "gsasl";
           version = "0.3.6";
           sha256 = "786036025e5d5649c029c1db23c395e1592c073a58848ae4afe4f2797de1f931";
           libraryHaskellDepends = [ base bytestring transformers ];
           libraryPkgconfigDepends = [ gsasl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-gsasl/";
           description = "Bindings for GNU libgsasl";
           license = stdenv.lib.licenses.gpl3;
         }) {inherit (pkgs) gsasl;};
      "gtk" = callPackage
        ({ mkDerivation, array, base, bytestring, cairo, containers, gio
         , glib, gtk2, gtk2hs-buildtools, mtl, pango, stdenv, text
         }:
         mkDerivation {
           pname = "gtk";
           version = "0.14.2";
           sha256 = "58f780c51fe2f3e25939a048bbe7d0b880e6aeb412df2648438f926a2b7b7eb5";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base bytestring cairo containers gio glib mtl pango text
           ];
           libraryPkgconfigDepends = [ gtk2 ];
           libraryToolDepends = [ gtk2hs-buildtools ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Binding to the Gtk+ graphical user interface library";
           license = stdenv.lib.licenses.lgpl21;
         }) {gtk2 = pkgs.gnome2.gtk;};
      "gtk2hs-buildtools" = callPackage
        ({ mkDerivation, alex, array, base, containers, directory, filepath
         , happy, hashtables, pretty, process, random, stdenv
         }:
         mkDerivation {
           pname = "gtk2hs-buildtools";
           version = "0.13.0.5";
           sha256 = "d95811a505ec10e4c82f3ca81c06b317eb9d345e73b6eda7aeaebd1e868f0a93";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             array base containers directory filepath hashtables pretty process
             random
           ];
           executableToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Tools to build the Gtk2Hs suite of User Interface libraries";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "gtk3" = callPackage
        ({ mkDerivation, array, base, bytestring, cairo, containers, gio
         , glib, gtk2hs-buildtools, gtk3, mtl, pango, stdenv, text
         }:
         mkDerivation {
           pname = "gtk3";
           version = "0.14.2";
           sha256 = "da198906bf3807e61c6d3c85c8537f424d9073d517d511d38197c569a1cb3d1d";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base bytestring cairo containers gio glib mtl pango text
           ];
           libraryPkgconfigDepends = [ gtk3 ];
           libraryToolDepends = [ gtk2hs-buildtools ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Binding to the Gtk+ 3 graphical user interface library";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) gtk3;};
      "gtksourceview3" = callPackage
        ({ mkDerivation, array, base, containers, glib, gtk2hs-buildtools
         , gtk3, gtksourceview3, mtl, stdenv, text
         }:
         mkDerivation {
           pname = "gtksourceview3";
           version = "0.13.2.1";
           sha256 = "61542fc063d948a0487c0fe784f8154d4a9ca66df3e29bbff0047843bb006ceb";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base containers glib gtk3 mtl text
           ];
           libraryPkgconfigDepends = [ gtksourceview3 ];
           libraryToolDepends = [ gtk2hs-buildtools ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Binding to the GtkSourceView library";
           license = stdenv.lib.licenses.lgpl21;
         }) {gtksourceview3 = pkgs.gnome3.gtksourceview;};
      "hOpenPGP" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , bifunctors, binary, binary-conduit, byteable, bytestring, bzlib
         , conduit, conduit-extra, containers, crypto-cipher-types
         , cryptonite, data-default-class, errors, hashable
         , incremental-parser, ixset-typed, lens, memory, monad-loops
         , nettle, network, network-uri, newtype, openpgp-asciiarmor
         , resourcet, securemem, semigroups, split, stdenv, text, time
         , time-locale-compat, transformers, unordered-containers
         , wl-pprint-extras, zlib
         }:
         mkDerivation {
           pname = "hOpenPGP";
           version = "2.4.4";
           sha256 = "6d137b38a2a60f711fd34612849f34a1731271c6a2cc83aa57c37cfea1f5a806";
           revision = "1";
           editedCabalFile = "1pb2yhp968d99x9736rkv8wlqbgq3k1kmmlznnqrqjj9p7aahv2n";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring bifunctors binary
             binary-conduit byteable bytestring bzlib conduit conduit-extra
             containers crypto-cipher-types cryptonite data-default-class errors
             hashable incremental-parser ixset-typed lens memory monad-loops
             nettle network network-uri newtype openpgp-asciiarmor resourcet
             securemem semigroups split text time time-locale-compat
             transformers unordered-containers wl-pprint-extras zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/hOpenPGP/";
           description = "native Haskell implementation of OpenPGP (RFC4880)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hPDB" = callPackage
        ({ mkDerivation, AC-Vector, base, bytestring, containers, deepseq
         , directory, ghc-prim, iterable, mmap, mtl, Octree, parallel
         , QuickCheck, stdenv, tagged, template-haskell, text
         , unordered-containers, vector, zlib
         }:
         mkDerivation {
           pname = "hPDB";
           version = "1.2.0.9";
           sha256 = "444b884c1e9af07ae75784d13c83736bcd94b7d766e2ec11d696e8adef8f8ecd";
           libraryHaskellDepends = [
             AC-Vector base bytestring containers deepseq directory ghc-prim
             iterable mmap mtl Octree parallel QuickCheck tagged
             template-haskell text unordered-containers vector zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/BioHaskell/hPDB";
           description = "Protein Databank file format library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hackage-db" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, directory
         , filepath, stdenv, tar, utf8-string
         }:
         mkDerivation {
           pname = "hackage-db";
           version = "1.22";
           sha256 = "4d32a368f8d41cba824bc7a1869d9b8df0e845496a4610f6e7f32791083f1066";
           revision = "1";
           editedCabalFile = "0xj3wwf0wl8qfcz4zsxw0r6f79rg7h010jfv54gsiyzwpf67l9xm";
           libraryHaskellDepends = [
             base bytestring Cabal containers directory filepath tar utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/peti/hackage-db";
           description = "access Hackage's package database via Data.Map";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hackage-mirror" = callPackage
        ({ mkDerivation, aws, base, bytestring, cereal, conduit
         , conduit-extra, cryptohash, data-default, directory, exceptions
         , fast-logger, filepath, http-conduit, lifted-async, lifted-base
         , mmorph, monad-control, monad-logger, old-locale
         , optparse-applicative, resourcet, retry, shakespeare, stdenv, stm
         , tar, template-haskell, temporary, text, thyme, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "hackage-mirror";
           version = "0.1.1.1";
           sha256 = "d710bae7061d831ae6c018691011344dd8cf93b08b950944aed7c119fbee8eae";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aws base bytestring cereal conduit conduit-extra cryptohash
             data-default directory exceptions fast-logger filepath http-conduit
             lifted-async lifted-base mmorph monad-control monad-logger
             old-locale resourcet retry shakespeare stm tar template-haskell
             temporary text thyme transformers unordered-containers
           ];
           executableHaskellDepends = [
             base monad-logger optparse-applicative
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://fpcomplete.com";
           description = "Simple mirroring utility for Hackage";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hackage-security" = callPackage
        ({ mkDerivation, base, base16-bytestring, base64-bytestring
         , bytestring, containers, cryptohash-sha256, directory, ed25519
         , etlas-cabal, fetchgit, filepath, ghc-prim, mtl, network
         , network-uri, parsec, pretty, stdenv, tar, template-haskell, time
         , transformers, zlib
         }:
         mkDerivation {
           pname = "hackage-security";
           version = "0.5.2.2";
           src = fetchgit {
             url = "https://github.com/typelead/eta.git";
             sha256 = "0sbwqd5wslk3dk7q3vi6nvzn6zrxbjncj34van31by1s1fs4dlv7";
             rev = "5c446e9a4ebe8fc426806b3c1fe28a994bf1a572";
           };
           postUnpack = "sourceRoot+=/etlas/hackage-security/hackage-security; echo source root reset to $sourceRoot";
           libraryHaskellDepends = [
             base base16-bytestring base64-bytestring bytestring containers
             cryptohash-sha256 directory ed25519 etlas-cabal filepath ghc-prim
             mtl network network-uri parsec pretty tar template-haskell time
             transformers zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/well-typed/hackage-security";
           description = "Hackage security library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hackage-whatsnew" = callPackage
        ({ mkDerivation, base, Cabal, containers, directory, filepath
         , hackage-db, process, stdenv, temporary
         }:
         mkDerivation {
           pname = "hackage-whatsnew";
           version = "0.1.0.1";
           sha256 = "0d20f9aff145861f0746950028304a285968a72c5d3aeec797d9826dbca1e02d";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base Cabal containers directory filepath hackage-db process
             temporary
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stepcut/hackage-whatsnew";
           description = "Check for differences between working directory and hackage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hackmanager" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, directory, file-embed
         , Glob, hastache, http-client, http-client-tls, http-types, mtl
         , optparse-applicative, process, stdenv, text
         }:
         mkDerivation {
           pname = "hackmanager";
           version = "0.1.0.0";
           sha256 = "8a5cebf772c8f99b2e56deb9f64a90344ded1528ac1a9967eab2776d72053546";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring Cabal directory file-embed Glob hastache
             http-client http-client-tls http-types mtl process text
           ];
           executableHaskellDepends = [ base optparse-applicative text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/hackmanager";
           description = "Generate useful files for Haskell projects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haddock-api" = callPackage
        ({ mkDerivation, array, base, bytestring, Cabal, containers
         , deepseq, directory, filepath, ghc, ghc-paths, haddock-library
         , stdenv, xhtml
         }:
         mkDerivation {
           pname = "haddock-api";
           version = "2.16.1";
           sha256 = "e2061d67e3de2bb39a98225712f119ef21a62567afac361bd9b2ddf0ba2aedea";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base bytestring Cabal containers deepseq directory filepath
             ghc ghc-paths haddock-library xhtml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haddock/";
           description = "A documentation-generation tool for Haskell libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haddock-library" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, stdenv, transformers }:
         mkDerivation {
           pname = "haddock-library";
           version = "1.2.1";
           sha256 = "0fb1a09d2b6f5339bc008a8ebf6519f22d27f65cfcc682488a7b67e8ee151056";
           libraryHaskellDepends = [ base bytestring deepseq transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haddock/";
           description = "Library exposing some functionality of Haddock";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haddocset" = callPackage
        ({ mkDerivation, base, Cabal, conduit, conduit-extra, directory
         , exceptions, filepath, ghc, haddock-api, http-types, mtl
         , optparse-applicative, process, resourcet, sqlite-simple, stdenv
         , tagsoup, text, transformers
         }:
         mkDerivation {
           pname = "haddocset";
           version = "0.4.2";
           sha256 = "a8f687bb96989a85dc56a208e04bde55f4a6c4473d6ff42ff2ae0d6a62511290";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base Cabal conduit conduit-extra directory exceptions filepath ghc
             haddock-api http-types mtl optparse-applicative process resourcet
             sqlite-simple tagsoup text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/haddocset";
           description = "Generate docset of Dash by Haddock haskell documentation tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hakyll" = callPackage
        ({ mkDerivation, base, binary, blaze-html, blaze-markup, bytestring
         , cmdargs, containers, cryptohash, data-default, deepseq, directory
         , filepath, fsnotify, http-conduit, http-types, lrucache, mtl
         , network, network-uri, pandoc, pandoc-citeproc, parsec, process
         , random, regex-base, regex-tdfa, resourcet, scientific, snap-core
         , snap-server, stdenv, system-filepath, tagsoup, text, time
         , time-locale-compat, unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "hakyll";
           version = "4.8.3.2";
           sha256 = "ddc8c659590d29ba34afdced18ff1e60dc9d1bfb102a5cc7df447e31ee5e0b39";
           revision = "1";
           editedCabalFile = "14yig0ba41hhhycr20jfimk5g8s1gvzl023jbzi1warv6bnarnc8";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary blaze-html blaze-markup bytestring cmdargs containers
             cryptohash data-default deepseq directory filepath fsnotify
             http-conduit http-types lrucache mtl network network-uri pandoc
             pandoc-citeproc parsec process random regex-base regex-tdfa
             resourcet scientific snap-core snap-server system-filepath tagsoup
             text time time-locale-compat unordered-containers vector yaml
           ];
           executableHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jaspervdj.be/hakyll";
           description = "A static website compiler library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hakyll-sass" = callPackage
        ({ mkDerivation, aeson-pretty, base, data-default-class, filepath
         , hakyll, hsass, stdenv
         }:
         mkDerivation {
           pname = "hakyll-sass";
           version = "0.2.2";
           sha256 = "14e3076b7921f37ecd0edf736be931536705461b66755387ec7813aa5e3e8302";
           libraryHaskellDepends = [
             aeson-pretty base data-default-class filepath hakyll hsass
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/meoblast001/hakyll-sass";
           description = "Hakyll SASS compiler over hsass";
           license = stdenv.lib.licenses.mit;
         }) {};
      "half" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "half";
           version = "0.2.2.3";
           sha256 = "85c244c80d1c889a3d79073a6f5a99d9e769dbe3c574ca11d992b2b4f7599a5c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/half";
           description = "Half-precision floating-point";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hamlet" = callPackage
        ({ mkDerivation, base, shakespeare, stdenv }:
         mkDerivation {
           pname = "hamlet";
           version = "1.2.0";
           sha256 = "d1c94b259163cb37f5c02ef3418ebf4caf8d95c8ee00588d4493aa3aae1a8a66";
           libraryHaskellDepends = [ base shakespeare ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/shakespearean-templates";
           description = "Haml-like template files that are compile-time checked (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "handwriting" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, directory
         , filepath, lens, lens-aeson, random, split, stdenv, text
         , transformers, wreq
         }:
         mkDerivation {
           pname = "handwriting";
           version = "0.1.0.3";
           sha256 = "7e1b406d19b2f39b34910462dce214c7ca91bb9d78bf9fafb9f906dd44d5beaa";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers lens lens-aeson split text
             transformers wreq
           ];
           executableHaskellDepends = [
             base bytestring directory filepath random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ismailmustafa/handwriting-haskell#readme";
           description = "API Client for the handwriting.io API.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hapistrano" = callPackage
        ({ mkDerivation, base, base-compat, either, filepath, mtl, process
         , stdenv, time, time-locale-compat, transformers
         }:
         mkDerivation {
           pname = "hapistrano";
           version = "0.2.1.2";
           sha256 = "23ad0b7a3702fad6fd19b82ffc2db2ef99308c1ed6b73c3bdad700e08a44ed09";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base either filepath mtl process time time-locale-compat
             transformers
           ];
           executableHaskellDepends = [ base base-compat ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/hapistrano";
           description = "A deployment library for Haskell applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "happstack-authenticate" = callPackage
        ({ mkDerivation, acid-state, aeson, authenticate, base
         , base64-bytestring, boomerang, bytestring, containers
         , data-default, email-validate, filepath, happstack-hsp
         , happstack-jmacro, happstack-server, hsp, hsx-jmacro, hsx2hs
         , http-conduit, http-types, ixset-typed, jmacro, jwt, lens
         , mime-mail, mtl, pwstore-purehaskell, random, safecopy
         , shakespeare, stdenv, text, time, unordered-containers, userid
         , web-routes, web-routes-boomerang, web-routes-happstack
         , web-routes-hsp, web-routes-th
         }:
         mkDerivation {
           pname = "happstack-authenticate";
           version = "2.3.4.6";
           sha256 = "633fb4d68122bd33725adb4f39e348b0ca293041abbf9941a3e5e2ce784d641a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             acid-state aeson authenticate base base64-bytestring boomerang
             bytestring containers data-default email-validate filepath
             happstack-hsp happstack-jmacro happstack-server hsp hsx-jmacro
             hsx2hs http-conduit http-types ixset-typed jmacro jwt lens
             mime-mail mtl pwstore-purehaskell random safecopy shakespeare text
             time unordered-containers userid web-routes web-routes-boomerang
             web-routes-happstack web-routes-hsp web-routes-th
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Happstack Authentication Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "happstack-clientsession" = callPackage
        ({ mkDerivation, base, bytestring, cereal, clientsession
         , happstack-server, monad-control, mtl, safecopy, stdenv
         , transformers-base
         }:
         mkDerivation {
           pname = "happstack-clientsession";
           version = "7.3.1";
           sha256 = "5b83ea0dae41857ec9ba6de68842633e85297660565e15c739d238f51b3f86ea";
           libraryHaskellDepends = [
             base bytestring cereal clientsession happstack-server monad-control
             mtl safecopy transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://happstack.com";
           description = "client-side session data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "happstack-hsp" = callPackage
        ({ mkDerivation, base, bytestring, happstack-server, harp, hsp
         , hsx2hs, mtl, stdenv, syb, text, utf8-string
         }:
         mkDerivation {
           pname = "happstack-hsp";
           version = "7.3.7.1";
           sha256 = "bbc884e4a5ca78faf08e17799c1d037622e377915ece889674004e0e54109617";
           libraryHaskellDepends = [
             base bytestring happstack-server harp hsp hsx2hs mtl syb text
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Support for using HSP templates in Happstack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "happstack-jmacro" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, cereal
         , digest, happstack-server, jmacro, stdenv, text, utf8-string
         , wl-pprint-text
         }:
         mkDerivation {
           pname = "happstack-jmacro";
           version = "7.0.11";
           sha256 = "29c6b844d91fb7288c5264312c0cd203d964cfb0a13f98a5551699350fdbdf1c";
           libraryHaskellDepends = [
             base base64-bytestring bytestring cereal digest happstack-server
             jmacro text utf8-string wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Support for using JMacro with Happstack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "happstack-server" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-html, bytestring
         , containers, directory, exceptions, extensible-exceptions
         , filepath, hslogger, html, monad-control, mtl, network
         , network-uri, old-locale, parsec, process, sendfile, stdenv, syb
         , system-filepath, template-haskell, text, threads, time
         , time-compat, transformers, transformers-base, transformers-compat
         , unix, utf8-string, xhtml, zlib
         }:
         mkDerivation {
           pname = "happstack-server";
           version = "7.4.6.2";
           sha256 = "0725900491022e8073d0d61408c2f1d170dbeb7c51bc52e1716c9bf829763b09";
           libraryHaskellDepends = [
             base base64-bytestring blaze-html bytestring containers directory
             exceptions extensible-exceptions filepath hslogger html
             monad-control mtl network network-uri old-locale parsec process
             sendfile syb system-filepath template-haskell text threads time
             time-compat transformers transformers-base transformers-compat unix
             utf8-string xhtml zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://happstack.com";
           description = "Web related tools and services";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "happstack-server-tls" = callPackage
        ({ mkDerivation, base, bytestring, extensible-exceptions
         , happstack-server, hslogger, HsOpenSSL, network, openssl, sendfile
         , stdenv, time, unix
         }:
         mkDerivation {
           pname = "happstack-server-tls";
           version = "7.1.6.2";
           sha256 = "bc3e5a908871f1a242e099ff401e45284dcec07e8842e033d5f457ac7bd2f0d5";
           libraryHaskellDepends = [
             base bytestring extensible-exceptions happstack-server hslogger
             HsOpenSSL network sendfile time unix
           ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "extend happstack-server with https:// support (TLS/SSL)";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openssl;};
      "happy" = callPackage
        ({ mkDerivation, array, base, Cabal, containers, directory
         , filepath, mtl, stdenv
         }:
         mkDerivation {
           pname = "happy";
           version = "1.19.5";
           sha256 = "62f03ac11d7b4b9913f212f5aa2eee1087f3b46dc07d799d41e1854ff02843da";
           revision = "2";
           editedCabalFile = "1dvhv94lzmya938i5crshg9qbx7dxvkyxkhfbqimxkydxn7l2w7w";
           isLibrary = false;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal directory filepath ];
           executableHaskellDepends = [ array base containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/happy/";
           description = "Happy is a parser generator for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "harp" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "harp";
           version = "0.4.2";
           sha256 = "7faa6236d0381e5caeacb4a7acb912c328b4d5f58944f238d478d972c6f19cf3";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/seereason/harp";
           description = "HaRP allows pattern-matching with regular expressions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashable" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, ghc-prim, integer-gmp
         , stdenv, text
         }:
         mkDerivation {
           pname = "hashable";
           version = "1.2.7.0";
           sha256 = "ecb5efc0586023f5a0dc861100621c1dbb4cbb2f0516829a16ebac39f0432abf";
           revision = "1";
           editedCabalFile = "197063dpl0wn67dp7a06yc2hxp81n24ykk7klbjx0fndm5n87dh3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring deepseq ghc-prim integer-gmp text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tibbe/hashable";
           description = "A class for types that can be converted to a hash value";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashable-extras" = callPackage
        ({ mkDerivation, base, bifunctors, bytestring, hashable, stdenv
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "hashable-extras";
           version = "0.2.3";
           sha256 = "03e0303a50e265d8682402152c90e199d0f4685a1e553bf20a380652d6f06b6a";
           revision = "1";
           editedCabalFile = "1is856b5l3chqbbgm0767bcqxwyyciwy5jmvpfmqd4m32a1rhw4d";
           libraryHaskellDepends = [
             base bifunctors bytestring hashable transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/analytics/hashable-extras/";
           description = "Higher-rank Hashable";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashable-time" = callPackage
        ({ mkDerivation, base, hashable, stdenv, time }:
         mkDerivation {
           pname = "hashable-time";
           version = "0.2";
           sha256 = "97b722ab467fae0d499de91bfaf3d6e346c7c1cac126796f0031aee5dbfe2b0a";
           revision = "1";
           editedCabalFile = "0d8xfx6dqliqgj0d6lc6ns9k4rgfz3m0gqzsa8cmm6hvdyjsn9dr";
           libraryHaskellDepends = [ base hashable time ];
           doHaddock = false;
           doCheck = false;
           description = "Hashable instances for Data.Time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashtables" = callPackage
        ({ mkDerivation, base, ghc-prim, hashable, primitive, stdenv
         , vector
         }:
         mkDerivation {
           pname = "hashtables";
           version = "1.2.1.0";
           sha256 = "ef5122c8f3b72d1e817a4f2adb410ad88b30818934a276b7184790697f4fdcac";
           libraryHaskellDepends = [
             base ghc-prim hashable primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/gregorycollins/hashtables";
           description = "Mutable hash tables in the ST monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskeline" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , process, stdenv, stm, terminfo, transformers, unix
         }:
         mkDerivation {
           pname = "haskeline";
           version = "0.7.4.2";
           sha256 = "5543ec8cd932396360a5c707bf0958b39bb99a559fb4fd80ed366a953c6cb0eb";
           configureFlags = [ "-fterminfo" ];
           libraryHaskellDepends = [
             base bytestring containers directory filepath process stm terminfo
             transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/judah/haskeline";
           description = "A command-line interface for user input, written in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-gi" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, directory
         , file-embed, filepath, glib, gobjectIntrospection, haskell-gi-base
         , mtl, pretty-show, process, safe, stdenv, text, transformers
         , xdg-basedir, xml-conduit
         }:
         mkDerivation {
           pname = "haskell-gi";
           version = "0.17.4";
           sha256 = "e3c306c877f3b28e66f49b1187671233d4a3e15d0d0ed7931213624b67fb733b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring Cabal containers directory file-embed filepath
             haskell-gi-base mtl pretty-show process safe text transformers
             xdg-basedir xml-conduit
           ];
           libraryPkgconfigDepends = [ glib gobjectIntrospection ];
           executableHaskellDepends = [
             base containers directory filepath haskell-gi-base pretty-show text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Generate Haskell bindings for GObject Introspection capable libraries";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib; inherit (pkgs) gobjectIntrospection;};
      "haskell-gi-base" = callPackage
        ({ mkDerivation, base, bytestring, containers, glib, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "haskell-gi-base";
           version = "0.17";
           sha256 = "fba8d755d1772cd0e01f7e8e7ac939d5bde9646d6493516c561484853ff77b76";
           libraryHaskellDepends = [
             base bytestring containers text transformers
           ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi-base";
           description = "Foundation for libraries generated by haskell-gi";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "haskell-lexer" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "haskell-lexer";
           version = "1.0.1";
           sha256 = "d7d42ab3c4bc2f0232ede8b005fb9de57f862ee4c1c83aa61e1022346fc84366";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A fully compliant Haskell 98 lexer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-neo4j-client" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, data-default
         , hashable, HTTP, http-client, http-client-tls, http-conduit
         , http-types, lifted-base, mtl, network-uri, resourcet, scientific
         , stdenv, text, transformers, transformers-base
         , transformers-compat, unordered-containers, vector
         }:
         mkDerivation {
           pname = "haskell-neo4j-client";
           version = "0.3.2.4";
           sha256 = "30eea529b6d8bd4b887cec7a6b210dd80223d97811bb26042b0c1ccfc8c381c2";
           libraryHaskellDepends = [
             aeson base bytestring containers data-default hashable HTTP
             http-client http-client-tls http-conduit http-types lifted-base mtl
             network-uri resourcet scientific text transformers
             transformers-base transformers-compat unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/asilvestre/haskell-neo4j-rest-client";
           description = "A Haskell neo4j client";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haskell-spacegoo" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
         , mtl, pretty, pretty-show, stdenv, text, vector, vector-space
         }:
         mkDerivation {
           pname = "haskell-spacegoo";
           version = "0.2.0.1";
           sha256 = "1eb3faa9a7f6a5870337eeb0bb3ad915f58987dfe4643fe95c91cbb2738ddd3c";
           libraryHaskellDepends = [
             aeson base bytestring conduit conduit-extra mtl pretty pretty-show
             text vector vector-space
           ];
           doHaddock = false;
           doCheck = false;
           description = "Client API for Rocket Scissor Spacegoo";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haskell-src" = callPackage
        ({ mkDerivation, array, base, happy, pretty, stdenv, syb }:
         mkDerivation {
           pname = "haskell-src";
           version = "1.0.2.0";
           sha256 = "2a25ee5729230edddb94af8d9881efbc1d8798bd316097f4646749cb2fa491a6";
           revision = "1";
           editedCabalFile = "13lipvh20r35vcgschkvxl8csfi6bn7nqk6avzp7jwrhmpgi9wi0";
           libraryHaskellDepends = [ array base pretty syb ];
           libraryToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           description = "Support for manipulating Haskell source code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-src-exts" = callPackage
        ({ mkDerivation, array, base, cpphs, ghc-prim, happy, pretty
         , stdenv
         }:
         mkDerivation {
           pname = "haskell-src-exts";
           version = "1.17.1";
           sha256 = "ba5c547720514515ad0b94eb8a3d7e22a0e2ad2d85b5e1d178e62c61615528bd";
           revision = "2";
           editedCabalFile = "1prylvx2fv6ic72xfhsj5md4amjdr2wngqiqx6wddnviibgl6f8v";
           libraryHaskellDepends = [ array base cpphs ghc-prim pretty ];
           libraryToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-suite/haskell-src-exts";
           description = "Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-src-meta" = callPackage
        ({ mkDerivation, base, haskell-src-exts, pretty, stdenv, syb
         , template-haskell, th-orphans
         }:
         mkDerivation {
           pname = "haskell-src-meta";
           version = "0.6.0.14";
           sha256 = "769124392398695667c800225cd908cb455dadf54a9317870bd9384e0eeb20c9";
           libraryHaskellDepends = [
             base haskell-src-exts pretty syb template-haskell th-orphans
           ];
           doHaddock = false;
           doCheck = false;
           description = "Parse source to template-haskell abstract syntax";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskintex" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, directory
         , filepath, haskell-src-exts, HaTeX, hint, parsec, process, stdenv
         , text, transformers
         }:
         mkDerivation {
           pname = "haskintex";
           version = "0.6.0.1";
           sha256 = "9b45463a0d77e8665cc82b656b6d9f8020c873d73f2dd9fe92fcb85a45e90f44";
           revision = "1";
           editedCabalFile = "1izqirnyamfsbwkw2lv85jqijs5lcrhih85xszh6yk3mirsf45la";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers directory filepath
             haskell-src-exts HaTeX hint parsec process text transformers
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://daniel-diaz.github.io/projects/haskintex";
           description = "Haskell Evaluation inside of LaTeX code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hasql" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-prelude, bytestring
         , bytestring-tree-builder, contravariant, contravariant-extras
         , data-default-class, dlist, either, hashable, hashtables, loch-th
         , mtl, placeholders, postgresql-binary, postgresql-libpq
         , profunctors, scientific, semigroups, stdenv, text, time
         , transformers, uuid, vector
         }:
         mkDerivation {
           pname = "hasql";
           version = "0.19.15.2";
           sha256 = "b025bd613d23444f18f1196ca51fb2bdbb4b10bf779c1db85685eeb755c8bb34";
           libraryHaskellDepends = [
             aeson attoparsec base base-prelude bytestring
             bytestring-tree-builder contravariant contravariant-extras
             data-default-class dlist either hashable hashtables loch-th mtl
             placeholders postgresql-binary postgresql-libpq profunctors
             scientific semigroups text time transformers uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/hasql";
           description = "An efficient PostgreSQL driver and a flexible mapping API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hastache" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , directory, filepath, ieee754, mtl, process, stdenv, syb, text
         , transformers
         }:
         mkDerivation {
           pname = "hastache";
           version = "0.6.1";
           sha256 = "8c8f89669d6125201d7163385ea9055ab8027a69d1513259f8fbdd53c244b464";
           revision = "5";
           editedCabalFile = "0fwd1jd6sqkscmy2yq1w3dcl4va4w9n8mhs6ldrilh1cj6b54r3f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-builder bytestring containers directory filepath ieee754
             mtl syb text transformers
           ];
           executableHaskellDepends = [
             base blaze-builder bytestring containers directory filepath ieee754
             mtl process syb text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lymar/hastache";
           description = "Haskell implementation of Mustache templates";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hasty-hamiltonian" = callPackage
        ({ mkDerivation, base, lens, mcmc-types, mwc-probability, pipes
         , primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "hasty-hamiltonian";
           version = "1.1.4";
           sha256 = "595b3cde3461f81df391c9d5335695fbf64a80187fb52036b75b495da74a92ed";
           libraryHaskellDepends = [
             base lens mcmc-types mwc-probability pipes primitive transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/hasty-hamiltonian";
           description = "Speedy traversal through parameter space";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haxl" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, deepseq
         , directory, exceptions, filepath, hashable, HUnit, pretty, stdenv
         , text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "haxl";
           version = "0.3.1.0";
           sha256 = "fba961b0f3a9a9b6f7cf6ac24689d48fb8404d79ec86a36c2784f3f45d06669a";
           revision = "2";
           editedCabalFile = "1lb5435ym29x63w12hj40g4pgz1h2awiyj8p3qk8wyyr4hw558gk";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers deepseq directory exceptions
             filepath hashable HUnit pretty text time unordered-containers
             vector
           ];
           executableHaskellDepends = [ base hashable time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/facebook/Haxl";
           description = "A Haskell library for efficient, concurrent, and concise data access";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haxl-amazonka" = callPackage
        ({ mkDerivation, amazonka, amazonka-core, async, base, conduit
         , hashable, haxl, stdenv, transformers
         }:
         mkDerivation {
           pname = "haxl-amazonka";
           version = "0.1.0.0";
           sha256 = "7ca933cec8cf15d41384a8f5135713e69da7cd41c9421638afa0980b1c2768ec";
           revision = "2";
           editedCabalFile = "1bajgc0njnpz31rkw5rfxs763rzg7x6ir45sfwk4d9zhici0n3bj";
           libraryHaskellDepends = [
             amazonka amazonka-core async base conduit hashable haxl
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tvh/haxl-amazonka#readme";
           description = "Haxl data source for accessing AWS services through amazonka";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haxr" = callPackage
        ({ mkDerivation, array, base, base-compat, base64-bytestring
         , blaze-builder, bytestring, HaXml, HsOpenSSL, http-streams
         , http-types, io-streams, mtl, mtl-compat, network, network-uri
         , old-locale, old-time, stdenv, template-haskell, text, time
         , utf8-string
         }:
         mkDerivation {
           pname = "haxr";
           version = "3000.11.2";
           sha256 = "ebcda06d7ee79d5e635a7ec34f86400dd54ddd2434eda082aac6d3c8fd6e8b47";
           libraryHaskellDepends = [
             array base base-compat base64-bytestring blaze-builder bytestring
             HaXml HsOpenSSL http-streams http-types io-streams mtl mtl-compat
             network network-uri old-locale old-time template-haskell text time
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/HaXR";
           description = "XML-RPC client and server library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hbayes" = callPackage
        ({ mkDerivation, array, base, binary, boxes, containers, directory
         , filepath, gamma, HUnit, mtl, mwc-random, parsec, pretty
         , QuickCheck, random, split, statistics, stdenv, test-framework
         , test-framework-hunit, test-framework-quickcheck2, vector
         }:
         mkDerivation {
           pname = "hbayes";
           version = "0.5.2";
           sha256 = "c284e97dd276ed5371dee4b53da9e124adb4e958cd89d6d9ca1b27b506e416f5";
           revision = "2";
           editedCabalFile = "19nclaq6y157gn8k4sl79rm30ws5gcykiq4zjmcnm7d5c1rm4dhn";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base binary boxes containers directory filepath gamma HUnit
             mtl mwc-random parsec pretty QuickCheck random split statistics
             test-framework test-framework-hunit test-framework-quickcheck2
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.alpheccar.org";
           description = "Bayesian Networks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hbeanstalk" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , containers, network, stdenv
         }:
         mkDerivation {
           pname = "hbeanstalk";
           version = "0.2.4";
           sha256 = "feaf97fd18fedb3e5abf337e61c98a03108d917d9f87f885c8d02b6b838aac8f";
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring containers network
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/scsibug/hbeanstalk/";
           description = "Client for the beanstalkd workqueue service";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hdaemonize" = callPackage
        ({ mkDerivation, base, extensible-exceptions, filepath, hsyslog
         , mtl, stdenv, unix
         }:
         mkDerivation {
           pname = "hdaemonize";
           version = "0.5.0.2";
           sha256 = "55cd4ff1dd4ca4fd00f450db3964639c5cc5e98f33f1b3d45c8c3f2d485953ae";
           libraryHaskellDepends = [
             base extensible-exceptions filepath hsyslog mtl unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/greydot/hdaemonize";
           description = "Library to handle the details of writing daemons for UNIX";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hdevtools" = callPackage
        ({ mkDerivation, base, bin-package-db, Cabal, cmdargs, directory
         , filepath, ghc, ghc-paths, network, process, stdenv, syb, time
         , transformers, unix
         }:
         mkDerivation {
           pname = "hdevtools";
           version = "0.1.4.1";
           sha256 = "3e95943fbd6986800e00c1e49ef97deb83b56a37cc8ffafc00f6192510f8596a";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bin-package-db Cabal cmdargs directory filepath ghc ghc-paths
             network process syb time transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdevtools/hdevtools/";
           description = "Persistent GHC powered background server for FAST haskell development tools";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hdocs" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, Cabal
         , containers, filepath, ghc, ghc-paths, haddock-api
         , haddock-library, mtl, network, process, stdenv, text
         }:
         mkDerivation {
           pname = "hdocs";
           version = "0.5.0.1";
           sha256 = "6d4e53adcfc7375736ce47beb07e0ab3c6ec96300ce91edbae1fbd009bfff0db";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring Cabal containers filepath ghc ghc-paths
             haddock-api haddock-library mtl network process text
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base bytestring containers filepath haddock-api
             mtl network text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvoidex/hdocs";
           description = "Haskell docs tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "heap" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "heap";
           version = "1.0.3";
           sha256 = "9bd57e9ca3480d4322ccc5ec094767ee2a64425b2d4022065a8f36b44aabf402";
           revision = "1";
           editedCabalFile = "0j1f0xl3y2vqiyh3m9w5vssxyi62s6qic3zmpkm429vawyh4yad5";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Heaps in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "heaps" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "heaps";
           version = "0.3.3";
           sha256 = "04e358d3e6d8ca7786749b6d3945e18159506f8b21ca48b1913c771dcaae1537";
           revision = "1";
           editedCabalFile = "0nnvczx0gmwhp0glmm76wm2wplgs4k9cs9mblkkgclyzq5sghdfh";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/heaps/";
           description = "Asymptotically optimal Brodal/Okasaki heaps";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hebrew-time" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "hebrew-time";
           version = "0.1.1";
           sha256 = "c7997ee86df43d5d734df63c5e091543bb7fd75a93d530c1857067e27a8b7932";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/hebrew-time";
           description = "Hebrew dates and prayer times";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hedis" = callPackage
        ({ mkDerivation, attoparsec, base, BoundedChan, bytestring
         , bytestring-lexing, mtl, network, resource-pool, stdenv, time
         , vector
         }:
         mkDerivation {
           pname = "hedis";
           version = "0.6.10";
           sha256 = "31974bfd8e891a4b54a444dcc86dfdac83875e0c3c5933648884230db72a895d";
           libraryHaskellDepends = [
             attoparsec base BoundedChan bytestring bytestring-lexing mtl
             network resource-pool time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/informatikr/hedis";
           description = "Client library for the Redis datastore: supports full command set, pipelining";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "heist" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-builder, blaze-html
         , bytestring, containers, directory, directory-tree, dlist, either
         , filepath, hashable, map-syntax, MonadCatchIO-transformers, mtl
         , process, random, stdenv, text, time, transformers
         , unordered-containers, vector, xmlhtml
         }:
         mkDerivation {
           pname = "heist";
           version = "0.14.1.4";
           sha256 = "debf008e68310d7e494560ebf7226693e5bc6820be39b6dae91f965805cf5fc9";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-builder blaze-html bytestring
             containers directory directory-tree dlist either filepath hashable
             map-syntax MonadCatchIO-transformers mtl process random text time
             transformers unordered-containers vector xmlhtml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://snapframework.com/";
           description = "An Haskell template system supporting both HTML5 and XML";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "here" = callPackage
        ({ mkDerivation, base, haskell-src-meta, mtl, parsec, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "here";
           version = "1.2.9";
           sha256 = "c6e87d889bbfa414b7a4dcad0dc55aae1158630065d5f52408fe8b72adc8ff38";
           libraryHaskellDepends = [
             base haskell-src-meta mtl parsec template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tmhedberg/here";
           description = "Here docs & interpolated strings via quasiquotation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "heredoc" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "heredoc";
           version = "0.2.0.0";
           sha256 = "c90d9fc61cb8cd812be510845493b6a6eddcc4b772581fd40a9433ed8f130f40";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/heredoc";
           description = "multi-line string / here document using QuasiQuotes";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "hex" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "hex";
           version = "0.1.2";
           sha256 = "12ee1243edd80570a486521565fb0c9b5e39374f21a12f050636e71d55ec61ec";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Convert strings into hexadecimal and back";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hexpat" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, List
         , stdenv, text, transformers, utf8-string
         }:
         mkDerivation {
           pname = "hexpat";
           version = "0.20.9";
           sha256 = "5d1c075f1ae00be2e80c0018b522a351b2f4ef73b9baca1113ee80e554449d9d";
           libraryHaskellDepends = [
             base bytestring containers deepseq List text transformers
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Hexpat/";
           description = "XML parser/formatter based on expat";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hexstring" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, binary, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "hexstring";
           version = "0.11.1";
           sha256 = "40d8dbfe22f572ffdb73f28c448b228a75008e83cc3bf78e939add0c9d800914";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base16-bytestring binary bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Fast and safe representation of a hex string";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hflags" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell, text
         }:
         mkDerivation {
           pname = "hflags";
           version = "0.4.2";
           sha256 = "2cd30d637f4011d9b614698ef7f7bf1f55c45900e6683d60c7b17af5750f2cc5";
           revision = "1";
           editedCabalFile = "1kasg8y0ia3q2iy6vmjvwwn9dyxzy59s6s9chwxhdgsvncx38ra1";
           libraryHaskellDepends = [ base containers template-haskell text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/errge/hflags";
           description = "Command line flag parser, very similar to Google's gflags";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "hformat" = callPackage
        ({ mkDerivation, base, base-unicode-symbols, stdenv, text }:
         mkDerivation {
           pname = "hformat";
           version = "0.1.0.1";
           sha256 = "62830d91b7d338f2fee8c3aa2b6ab874d6340ed84b0a67dd0f31fbcad6d08d0c";
           libraryHaskellDepends = [ base base-unicode-symbols text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mvoidex/hformat";
           description = "Simple Haskell formatting";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hfsevents" = callPackage
        ({ mkDerivation, base, bytestring, cereal, Cocoa, CoreServices, mtl
         , stdenv, text
         }:
         mkDerivation {
           pname = "hfsevents";
           version = "0.1.6";
           sha256 = "74c3f3f3a5e55fff320c352a2d481069ff915860a0ab970864c6a0e6b65d3f05";
           libraryHaskellDepends = [ base bytestring cereal mtl text ];
           librarySystemDepends = [ Cocoa ];
           libraryToolDepends = [ CoreServices ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/luite/hfsevents";
           description = "File/folder watching for OS X";
           license = stdenv.lib.licenses.bsd3;
           platforms = [ "x86_64-darwin" ];
         }) {inherit (pkgs.darwin.apple_sdk.frameworks) Cocoa;};
      "hgettext" = callPackage
        ({ mkDerivation, base, Cabal, containers, directory, filepath
         , haskell-src-exts, process, setlocale, stdenv, uniplate
         }:
         mkDerivation {
           pname = "hgettext";
           version = "0.1.30";
           sha256 = "26453a4d359c99c41d462db9f8c9144d172523b3fa7076117a877e6c43f3ffdd";
           revision = "3";
           editedCabalFile = "1cxc4jqkngabnramva9s718mavk1082pjkkq2z8x326k0v269w2g";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base Cabal containers directory filepath process setlocale
           ];
           executableHaskellDepends = [ base haskell-src-exts uniplate ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vasylp/hgettext";
           description = "Bindings to libintl.h (gettext, bindtextdomain)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hid" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, hidapi, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "hid";
           version = "0.2.2";
           sha256 = "0dd5c562b871626cfad11846d0d3b788823adc12fe009403a42e5f56108773d2";
           libraryHaskellDepends = [ base bytestring transformers ];
           libraryPkgconfigDepends = [ hidapi ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/hid";
           description = "Interface to hidapi library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) hidapi;};
      "hidapi" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, deepseq-generics
         , stdenv, systemd
         }:
         mkDerivation {
           pname = "hidapi";
           version = "0.1.4";
           sha256 = "fc40ea58320f9f1459a8da6463419bb15930d2e6d8273d5592cde509d4c96a75";
           libraryHaskellDepends = [
             base bytestring deepseq deepseq-generics
           ];
           librarySystemDepends = [ systemd ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vahokif/haskell-hidapi";
           description = "Haskell bindings to HIDAPI";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) systemd;};
      "hierarchical-clustering" = callPackage
        ({ mkDerivation, array, base, containers, stdenv }:
         mkDerivation {
           pname = "hierarchical-clustering";
           version = "0.4.6";
           sha256 = "75f17f09b9c38d51a208edee10da2f4706ee784b5cdfe8efc31f7f86bbcdccb1";
           libraryHaskellDepends = [ array base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Fast algorithms for single, average/UPGMA and complete linkage clustering";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "highjson" = callPackage
        ({ mkDerivation, attoparsec, base, buffer-builder, bytestring
         , containers, hashable, hvect, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "highjson";
           version = "0.2.0.2";
           sha256 = "7fd64bb5206b6d16d420e34eb7f3fefc6d888be518f0dc635a77ed51d63f1f1f";
           libraryHaskellDepends = [
             attoparsec base buffer-builder bytestring containers hashable hvect
             scientific text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/highjson";
           description = "Very fast JSON serialisation and parsing library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "highlighting-kate" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, containers, mtl
         , parsec, pcre-light, stdenv, utf8-string
         }:
         mkDerivation {
           pname = "highlighting-kate";
           version = "0.6.3";
           sha256 = "71dab85c49b038053b90062ed882e486233cbaa2b762d017224d06482075840d";
           configureFlags = [ "-fpcre-light" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-html bytestring containers mtl parsec pcre-light
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/highlighting-kate";
           description = "Syntax highlighting";
           license = "GPL";
         }) {};
      "hindent" = callPackage
        ({ mkDerivation, base, containers, descriptive, directory, ghc-prim
         , haskell-src-exts, monad-loops, mtl, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "hindent";
           version = "4.6.4";
           sha256 = "26fc1498705b8a64b03eb5b699ba6229955273d91a49a01c3c2b58436c8e4dcf";
           revision = "3";
           editedCabalFile = "0dggiv76b6nj1lgvmihnb2174knpf5kzdafppmcsds9bjh2w7sw6";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers haskell-src-exts monad-loops mtl text transformers
           ];
           executableHaskellDepends = [
             base descriptive directory ghc-prim haskell-src-exts text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/chrisdone/hindent";
           description = "Extensible Haskell pretty printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hinotify" = callPackage
        ({ mkDerivation, async, base, containers, directory, stdenv, unix
         }:
         mkDerivation {
           pname = "hinotify";
           version = "0.3.9";
           sha256 = "f2480e4c08a516831c2221eebc6a9d3242e892932d9315c34cbe92a101c5df99";
           revision = "1";
           editedCabalFile = "0df5pak0586626k3ryzg2lb26ys562l3i94jr9vpa0krs8iia209";
           libraryHaskellDepends = [ async base containers directory unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kolmodin/hinotify.git";
           description = "Haskell binding to inotify";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hint" = callPackage
        ({ mkDerivation, base, directory, exceptions, filepath, ghc
         , ghc-paths, mtl, random, stdenv, unix
         }:
         mkDerivation {
           pname = "hint";
           version = "0.5.2";
           sha256 = "b988ddf97c01dcfe21d3db97e4de94f8a9eeed645cc89ed0471f977b1fa22c0f";
           libraryHaskellDepends = [
             base directory exceptions filepath ghc ghc-paths mtl random unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvdan/hint";
           description = "Runtime Haskell interpreter (GHC API wrapper)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "histogram-fill" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, monad-primitive
         , primitive, stdenv, vector
         }:
         mkDerivation {
           pname = "histogram-fill";
           version = "0.8.4.1";
           sha256 = "385919434a933b7ad4c7c262308186e4057d6e2e653fa98fa020f949d4c7557d";
           revision = "1";
           editedCabalFile = "1h7xhl7fymm1q6wsm4mx3zh5lnd60f2xhxial7gxa4pzsnbkg9cb";
           libraryHaskellDepends = [
             base deepseq ghc-prim monad-primitive primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Shimuuar/histogram-fill/";
           description = "Library for histograms creation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hit" = callPackage
        ({ mkDerivation, attoparsec, base, byteable, bytestring, containers
         , cryptohash, hourglass, mtl, parsec, patience, random, stdenv
         , system-fileio, system-filepath, unix-compat, utf8-string, vector
         , zlib, zlib-bindings
         }:
         mkDerivation {
           pname = "hit";
           version = "0.6.3";
           sha256 = "db86b3712029a4e40d1306dd6cc9ca2c9f4c77fe65a2b74106f1cbd2de26e471";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base byteable bytestring containers cryptohash hourglass
             mtl parsec patience random system-fileio system-filepath
             unix-compat utf8-string vector zlib zlib-bindings
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hit";
           description = "Git operations in haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hjpath" = callPackage
        ({ mkDerivation, base, containers, hjson, parsec, stdenv }:
         mkDerivation {
           pname = "hjpath";
           version = "3.0.1";
           sha256 = "12aa694ac8f1ef4bd26e46504c183fee2f3087b5f85365bb07f9602222efbf72";
           libraryHaskellDepends = [ base containers hjson parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://bitcheese.net/wiki/code/hjpath";
           description = "XPath-like syntax for querying JSON";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hjsmin" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , language-javascript, optparse-applicative, stdenv, text
         }:
         mkDerivation {
           pname = "hjsmin";
           version = "0.2.0.2";
           sha256 = "bec153d2396962c63998eb12d0a2c7c9f7df6f774cb00e41b6cdb1f5a4905484";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-builder bytestring containers language-javascript text
           ];
           executableHaskellDepends = [
             base blaze-builder bytestring containers language-javascript
             optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/erikd/hjsmin";
           description = "Haskell implementation of a javascript minifier";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hjson" = callPackage
        ({ mkDerivation, base, containers, parsec, stdenv }:
         mkDerivation {
           pname = "hjson";
           version = "1.3.2";
           sha256 = "684699c938131f1e394b90546e8bbe1249a3eebfe7b5a6a96b544b7c7d79a9e4";
           libraryHaskellDepends = [ base containers parsec ];
           doHaddock = false;
           doCheck = false;
           description = "JSON parsing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hledger" = callPackage
        ({ mkDerivation, base, base-compat, cmdargs, containers, csv
         , directory, filepath, haskeline, hledger-lib, HUnit, mtl
         , mtl-compat, old-time, parsec, pretty-show, process, regex-tdfa
         , safe, shakespeare, split, stdenv, tabular, terminfo, text, time
         , unordered-containers, utf8-string, wizards
         }:
         mkDerivation {
           pname = "hledger";
           version = "0.27";
           sha256 = "0aecdf586a46c24d6d67659157d1edbfc0d78afb50ea7cfbec1a01bf86b792b0";
           revision = "2";
           editedCabalFile = "16lh88x19vj6c3fz5xby23vgsqqijbxvj6j9i5llmx2yq7qmkw8i";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base-compat cmdargs containers csv directory filepath
             haskeline hledger-lib HUnit mtl mtl-compat old-time parsec
             pretty-show process regex-tdfa safe shakespeare split tabular
             terminfo text time unordered-containers utf8-string wizards
           ];
           executableHaskellDepends = [
             base base-compat cmdargs containers csv directory filepath
             haskeline hledger-lib HUnit mtl mtl-compat old-time parsec
             pretty-show process regex-tdfa safe shakespeare split tabular
             terminfo text time unordered-containers utf8-string wizards
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Command-line interface for the hledger accounting tool";
           license = "GPL";
         }) {};
      "hledger-interest" = callPackage
        ({ mkDerivation, base, Cabal, Decimal, hledger-lib, mtl, stdenv
         , time
         }:
         mkDerivation {
           pname = "hledger-interest";
           version = "1.4.4";
           sha256 = "d6ad4a75d810d64c9f70a19ff2b51fe37d79313c4bb1b78d95e5ddcc5998769a";
           revision = "1";
           editedCabalFile = "0abpm432n1k0ii3kspvs1pc9hczjh22n8vhlniavh7mng7sxi0wm";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             base Cabal Decimal hledger-lib mtl time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/peti/hledger-interest";
           description = "computes interest for a given account";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hledger-lib" = callPackage
        ({ mkDerivation, array, base, base-compat, blaze-markup, bytestring
         , cmdargs, containers, csv, Decimal, deepseq, directory, filepath
         , HUnit, mtl, mtl-compat, old-time, parsec, pretty-show, regex-tdfa
         , safe, split, stdenv, time, transformers, uglymemo, utf8-string
         }:
         mkDerivation {
           pname = "hledger-lib";
           version = "0.27";
           sha256 = "77c47900106e65411743097cd0855b5484e1439b0de4c5ee6d2a0c5748672606";
           revision = "3";
           editedCabalFile = "1cgya5p183r3bi455pvgnwkwzs62dyxzv0nr6p05irn0pl3lywvb";
           libraryHaskellDepends = [
             array base base-compat blaze-markup bytestring cmdargs containers
             csv Decimal deepseq directory filepath HUnit mtl mtl-compat
             old-time parsec pretty-show regex-tdfa safe split time transformers
             uglymemo utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Core data types, parsers and functionality for the hledger accounting tools";
           license = "GPL";
         }) {};
      "hledger-ui" = callPackage
        ({ mkDerivation, base, base-compat, brick, cmdargs, containers
         , data-default, filepath, hledger, hledger-lib, HUnit, lens
         , pretty-show, safe, split, stdenv, time, transformers, vector, vty
         }:
         mkDerivation {
           pname = "hledger-ui";
           version = "0.27.4";
           sha256 = "c99544721f630fb561f5f44e9b0295db991b59a6222b66f38696fef90fec377d";
           revision = "1";
           editedCabalFile = "1kdxbprmpcjzx6h67crngdy1k5gqc8ypnhb8bnigyczriwvhlmc1";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base base-compat brick cmdargs containers data-default filepath
             hledger hledger-lib HUnit lens pretty-show safe split time
             transformers vector vty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Curses-style user interface for the hledger accounting tool";
           license = "GPL";
         }) {};
      "hledger-web" = callPackage
        ({ mkDerivation, base, base-compat, blaze-html, blaze-markup
         , bytestring, clientsession, cmdargs, conduit-extra, data-default
         , directory, filepath, hjsmin, hledger, hledger-lib, http-client
         , http-conduit, HUnit, json, parsec, safe, shakespeare, stdenv
         , template-haskell, text, time, transformers, wai, wai-extra
         , wai-handler-launch, warp, yaml, yesod, yesod-core, yesod-form
         , yesod-static
         }:
         mkDerivation {
           pname = "hledger-web";
           version = "0.27";
           sha256 = "92722fa89b09b9d1fd2f66703083e84e0a03a97b6aea08c9064723d4858df1ef";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base-compat blaze-html blaze-markup bytestring clientsession
             cmdargs conduit-extra data-default directory filepath hjsmin
             hledger hledger-lib http-client http-conduit HUnit json parsec safe
             shakespeare template-haskell text time transformers wai wai-extra
             wai-handler-launch warp yaml yesod yesod-core yesod-form
             yesod-static
           ];
           executableHaskellDepends = [
             base base-compat blaze-html blaze-markup bytestring clientsession
             cmdargs conduit-extra data-default directory filepath hjsmin
             hledger hledger-lib http-client http-conduit HUnit json parsec safe
             shakespeare template-haskell text time transformers wai wai-extra
             wai-handler-launch warp yaml yesod yesod-core yesod-form
             yesod-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Web interface for the hledger accounting tool";
           license = "GPL";
         }) {};
      "hlibgit2" = callPackage
        ({ mkDerivation, base, bindings-DSL, openssl, stdenv, zlib }:
         mkDerivation {
           pname = "hlibgit2";
           version = "0.18.0.15";
           sha256 = "1170c1f71b39d13699018c29688c005c7aa2d07d8bbbb9d383a9a85e5d4c5601";
           libraryHaskellDepends = [ base bindings-DSL zlib ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           description = "Low-level bindings to libgit2";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) openssl;};
      "hlibsass" = callPackage
        ({ mkDerivation, base, libsass, stdenv }:
         mkDerivation {
           pname = "hlibsass";
           version = "0.1.5.0";
           sha256 = "ce3e9a15d01c1b61d41b03e9b05ecd9b4b9aaf6da7d591086181b74e18d25bb8";
           configureFlags = [ "-fexternalLibsass" ];
           libraryHaskellDepends = [ base ];
           librarySystemDepends = [ libsass ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jakubfijalkowski/hlibsass";
           description = "Low-level bindings to Libsass";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) libsass;};
      "hlint" = callPackage
        ({ mkDerivation, ansi-terminal, base, cmdargs, containers, cpphs
         , directory, extra, filepath, haskell-src-exts, hscolour, process
         , refact, stdenv, transformers, uniplate
         }:
         mkDerivation {
           pname = "hlint";
           version = "1.9.35";
           sha256 = "5e6289dadc77a0862ee12ec09136059011fd779c96ff6ffeec899170a97d7a8a";
           revision = "1";
           editedCabalFile = "1nf2h4hin10l60cscipq6j31fgkb0dpkw9x2jhnsrygbw6za83qh";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             ansi-terminal base cmdargs containers cpphs directory extra
             filepath haskell-src-exts hscolour process refact transformers
             uniplate
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/hlint#readme";
           description = "Source code suggestions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hmatrix" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, deepseq
         , openblasCompat, random, split, stdenv, storable-complex, vector
         }:
         mkDerivation {
           pname = "hmatrix";
           version = "0.17.0.2";
           sha256 = "28ed9558064917636db095ef76e10b59ae935e3ee68c96ff0d27f9e405ccfab9";
           configureFlags = [ "-fdisable-default-paths" "-fopenblas" ];
           libraryHaskellDepends = [
             array base binary bytestring deepseq random split storable-complex
             vector
           ];
           librarySystemDepends = [ openblasCompat ];
           doHaddock = false;
           doCheck = false;
           preConfigure = "sed -i hmatrix.cabal -e '/\\/usr\\//D'";
           homepage = "https://github.com/albertoruiz/hmatrix";
           description = "Numeric Linear Algebra";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openblasCompat;};
      "hmatrix-gsl" = callPackage
        ({ mkDerivation, array, base, gsl, hmatrix, process, random, stdenv
         , vector
         }:
         mkDerivation {
           pname = "hmatrix-gsl";
           version = "0.17.0.0";
           sha256 = "fc50e9f80adee9f93874b20aae1a8009a1dcd94316784827618d5ad192e578c9";
           libraryHaskellDepends = [
             array base hmatrix process random vector
           ];
           libraryPkgconfigDepends = [ gsl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/albertoruiz/hmatrix";
           description = "Numerical computation";
           license = "GPL";
         }) {inherit (pkgs) gsl;};
      "hmatrix-gsl-stats" = callPackage
        ({ mkDerivation, base, binary, gsl, hmatrix, stdenv
         , storable-complex, vector
         }:
         mkDerivation {
           pname = "hmatrix-gsl-stats";
           version = "0.4.1.4";
           sha256 = "98fe0e49be78a1ff7e5ca44ab086d57bafcf97b86bc249d940501a28dacffafa";
           libraryHaskellDepends = [
             base binary hmatrix storable-complex vector
           ];
           libraryPkgconfigDepends = [ gsl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/hmatrix-gsl-stats";
           description = "GSL Statistics interface";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) gsl;};
      "hmt" = callPackage
        ({ mkDerivation, array, base, bytestring, colour, containers
         , data-ordlist, directory, filepath, lazy-csv, logict
         , multiset-comb, parsec, permutation, primes, safe, split, stdenv
         , utf8-string
         }:
         mkDerivation {
           pname = "hmt";
           version = "0.15";
           sha256 = "498df72d63766f4b8ea3a98d09d7bfd73c14743b9d0885b80dae509ba07e3314";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base bytestring colour containers data-ordlist directory
             filepath lazy-csv logict multiset-comb parsec permutation primes
             safe split utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://rd.slavepianos.org/t/hmt";
           description = "Haskell Music Theory";
           license = "GPL";
         }) {};
      "hoauth2" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-conduit, http-types
         , stdenv, text
         }:
         mkDerivation {
           pname = "hoauth2";
           version = "0.5.4.0";
           sha256 = "dc83b0cd5ee51b9c9b28ea04417341dbd146720f43ac73792b180e205ea4cdf9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring http-conduit http-types text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/freizl/hoauth2";
           description = "Haskell OAuth2 authentication client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "holy-project" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, base, bytestring, Cabal
         , directory, filepath, hastache, http-conduit, HUnit, lens
         , lens-aeson, process, QuickCheck, random, smallcheck, split
         , stdenv, syb, tasty, tasty-hunit, tasty-quickcheck
         , tasty-smallcheck, text, time, unix
         }:
         mkDerivation {
           pname = "holy-project";
           version = "0.2.0.1";
           sha256 = "b0f60f48377986212ee45a7ab360f4ef32578d4fa4b65cc21132f9c1e90a2814";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-terminal base bytestring directory filepath hastache
             http-conduit lens lens-aeson process random split syb text time
             unix
           ];
           executableHaskellDepends = [
             aeson ansi-terminal base bytestring Cabal directory filepath
             hastache http-conduit HUnit lens lens-aeson process QuickCheck
             random smallcheck split syb tasty tasty-hunit tasty-quickcheck
             tasty-smallcheck text time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yogsototh/holy-project";
           description = "Start your Haskell project with cabal, git and tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hoogle" = callPackage
        ({ mkDerivation, aeson, array, base, binary, blaze-builder
         , bytestring, Cabal, case-insensitive, cmdargs, conduit, containers
         , deepseq, directory, filepath, haskell-src-exts, http-types
         , old-locale, parsec, process, QuickCheck, random, resourcet, safe
         , shake, stdenv, tagsoup, text, time, transformers, uniplate, unix
         , vector, vector-algorithms, wai, warp
         }:
         mkDerivation {
           pname = "hoogle";
           version = "4.2.43";
           sha256 = "eb30df565d363cd5d98821c51b0daf93493dec3bfe95c016922c95a20efa7c17";
           revision = "1";
           editedCabalFile = "023h4ki129xfrw15k0vajkpixp0fzcwfsjr2zwfxhqhibgb78zmn";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base binary blaze-builder bytestring case-insensitive conduit
             containers deepseq directory filepath haskell-src-exts http-types
             parsec process QuickCheck random resourcet safe text transformers
             uniplate unix vector vector-algorithms wai
           ];
           executableHaskellDepends = [
             aeson array base binary blaze-builder bytestring Cabal
             case-insensitive cmdargs conduit containers deepseq directory
             filepath haskell-src-exts http-types old-locale parsec process
             QuickCheck random resourcet safe shake tagsoup text time
             transformers uniplate unix vector vector-algorithms wai warp
           ];
           doHaddock = false;
           doCheck = false;
           testTarget = "--test-option=--no-net";
           homepage = "http://www.haskell.org/hoogle/";
           description = "Haskell API Search";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hopenpgp-tools" = callPackage
        ({ mkDerivation, aeson, alex, ansi-wl-pprint, array, attoparsec
         , base, base16-bytestring, binary, binary-conduit, bytestring
         , conduit, conduit-extra, containers, crypto-pubkey, cryptohash
         , directory, errors, fgl, graphviz, happy, hOpenPGP, ixset-typed
         , lens, monad-loops, openpgp-asciiarmor, optparse-applicative
         , resourcet, stdenv, text, time, time-locale-compat, transformers
         , unordered-containers, wl-pprint-extras, wl-pprint-terminfo, yaml
         }:
         mkDerivation {
           pname = "hopenpgp-tools";
           version = "0.18";
           sha256 = "e13fa9cbf0f725f026e781c8d4d83b05a5b4bd126d276085152adc0a88c93f76";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson ansi-wl-pprint array attoparsec base base16-bytestring binary
             binary-conduit bytestring conduit conduit-extra containers
             crypto-pubkey cryptohash directory errors fgl graphviz hOpenPGP
             ixset-typed lens monad-loops openpgp-asciiarmor
             optparse-applicative resourcet text time time-locale-compat
             transformers unordered-containers wl-pprint-extras
             wl-pprint-terminfo yaml
           ];
           executableToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/hopenpgp-tools";
           description = "hOpenPGP-based command-line tools";
           license = "unknown";
         }) {};
      "hopenssl" = callPackage
        ({ mkDerivation, base, bytestring, mtl, openssl, stdenv }:
         mkDerivation {
           pname = "hopenssl";
           version = "1.7";
           sha256 = "9ee64bb5834e475a6bdfa1fb578e6a966f74bebb8be95685a9d695cffb4c46ff";
           libraryHaskellDepends = [ base bytestring mtl ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/peti/hopenssl";
           description = "FFI bindings to OpenSSL's EVP digest interface";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openssl;};
      "hosc" = callPackage
        ({ mkDerivation, base, binary, blaze-builder, bytestring
         , data-binary-ieee754, network, stdenv, time, transformers
         }:
         mkDerivation {
           pname = "hosc";
           version = "0.15";
           sha256 = "8e35a78a5619f57148a07e0b5995c209175a0ae3f1f4e1c5c8c9dc54822de2fa";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary blaze-builder bytestring data-binary-ieee754 network
             time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://rd.slavepianos.org/t/hosc";
           description = "Haskell Open Sound Control";
           license = "GPL";
         }) {};
      "hostname" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hostname";
           version = "1.0";
           sha256 = "9b43dab1b6da521f35685b20555da00738c8e136eb972458c786242406a9cf5c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A very simple package providing a cross-platform means of determining the hostname";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hostname-validate" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv }:
         mkDerivation {
           pname = "hostname-validate";
           version = "1.0.0";
           sha256 = "7fafb1e0cfe19d453030754962e74cdb8f3e791ec5b974623cbf26872779c857";
           libraryHaskellDepends = [ attoparsec base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Validate hostnames e.g. localhost or foo.co.uk.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hourglass" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "hourglass";
           version = "0.2.10";
           sha256 = "d553362d7a6f7df60d8ff99304aaad0995be81f9d302725ebe9441829a0f8d80";
           revision = "1";
           editedCabalFile = "13q3v4hvwaqxc85m006avx0wka0y8nigka7z8nqhy6rn39qxjjdj";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-hourglass";
           description = "simple performant time related library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hpack" = callPackage
        ({ mkDerivation, aeson, base, base-compat, containers, deepseq
         , directory, filepath, Glob, stdenv, text, unordered-containers
         , yaml
         }:
         mkDerivation {
           pname = "hpack";
           version = "0.14.1";
           sha256 = "a930e8719c52f42826efab92f33252e3dfbf664296ce8075334b48e38bc51280";
           revision = "2";
           editedCabalFile = "0rnk8vn8rhdgbnixbsjivfd9vw4nz6bzq1j3zazwrrg1xik7j5hj";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base base-compat containers deepseq directory filepath Glob
             text unordered-containers yaml
           ];
           executableHaskellDepends = [
             aeson base base-compat containers deepseq directory filepath Glob
             text unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/hpack#readme";
           description = "An alternative format for Haskell packages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hpc" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, stdenv
         , time
         }:
         mkDerivation {
           pname = "hpc";
           version = "0.6.0.2";
           sha256 = "95e6f1e5ccfe9e6415eec9d7bb3eccc2c113cecf2079d1f792646269ab4c0aaf";
           libraryHaskellDepends = [
             base containers directory filepath time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Code Coverage Library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hpc-coveralls" = callPackage
        ({ mkDerivation, aeson, async, base, bytestring, Cabal, cmdargs
         , containers, curl, directory, directory-tree, hpc, process
         , pureMD5, regex-posix, retry, safe, split, stdenv, transformers
         }:
         mkDerivation {
           pname = "hpc-coveralls";
           version = "1.0.6";
           sha256 = "e58739ab2c0db02770911927aa534e04c808b38f11b39b646c14b0cab802cf84";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring Cabal cmdargs containers curl directory
             directory-tree hpc process pureMD5 retry safe split transformers
           ];
           executableHaskellDepends = [
             aeson async base bytestring Cabal cmdargs containers curl directory
             directory-tree hpc process pureMD5 regex-posix retry safe split
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/guillaume-nargeot/hpc-coveralls";
           description = "Coveralls.io support for Haskell.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hpp" = callPackage
        ({ mkDerivation, base, bytestring, bytestring-trie, directory
         , fetchgit, filepath, ghc-prim, semigroups, stdenv, time
         , transformers
         }:
         mkDerivation {
           pname = "hpp";
           version = "0.5.2";
           src = fetchgit {
             url = "https://github.com/rahulmutt/hpp.git";
             sha256 = "1i9hk210cvxflhxsdv0pfxjrxayhgvdkiqnc5cm4l5h04ffcb9a3";
             rev = "75d74f53a34c875285a665d8878e5b363edfbea5";
           };
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring bytestring-trie directory filepath ghc-prim
             semigroups time transformers
           ];
           executableHaskellDepends = [ base directory filepath time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acowley/hpp";
           description = "A Haskell pre-processor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hprotoc" = callPackage
        ({ mkDerivation, alex, array, base, binary, bytestring, containers
         , directory, filepath, haskell-src-exts, mtl, parsec
         , protocol-buffers, protocol-buffers-descriptor, stdenv
         , utf8-string
         }:
         mkDerivation {
           pname = "hprotoc";
           version = "2.2.0";
           sha256 = "12461b7b11b90486f7b40cd21d3839f089695341e090eeac3a6fb85e715b50be";
           revision = "1";
           editedCabalFile = "02lw1j4lz476mdn3qwz75bkh0r25kbkm0r6jkqshdvc590cdkxnw";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base binary bytestring containers directory filepath
             haskell-src-exts mtl parsec protocol-buffers
             protocol-buffers-descriptor utf8-string
           ];
           libraryToolDepends = [ alex ];
           executableHaskellDepends = [
             array base binary bytestring containers directory filepath
             haskell-src-exts mtl parsec protocol-buffers
             protocol-buffers-descriptor utf8-string
           ];
           executableToolDepends = [ alex ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k-bx/protocol-buffers";
           description = "Parse Google Protocol Buffer specifications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hs-GeoIP" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, GeoIP, stdenv }:
         mkDerivation {
           pname = "hs-GeoIP";
           version = "0.3";
           sha256 = "8e5ff6a132d8944336f10dcaa69d8852cdd7953a5ff18248ae06cb2819a1ab8c";
           libraryHaskellDepends = [ base bytestring deepseq ];
           librarySystemDepends = [ GeoIP ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ozataman/hs-GeoIP";
           description = "Haskell bindings to the MaxMind GeoIPCity database via the C library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) GeoIP;};
      "hs-bibutils" = callPackage
        ({ mkDerivation, base, stdenv, syb }:
         mkDerivation {
           pname = "hs-bibutils";
           version = "5.5";
           sha256 = "95f9f34be9f3145da8acc8a0e9de379236cfe31c5a9bc0eb9489e77402a4c55d";
           libraryHaskellDepends = [ base syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://istitutocolli.org/repos/hs-bibutils/";
           description = "Haskell bindings to bibutils, the bibliography conversion utilities";
           license = "GPL";
         }) {};
      "hsass" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, filepath
         , hlibsass, monad-loops, stdenv, transformers
         }:
         mkDerivation {
           pname = "hsass";
           version = "0.4.0";
           sha256 = "512faf0e01e720395699066139379fb2e5e5f456f465c72d58282b75b6ec0f9d";
           libraryHaskellDepends = [
             base bytestring data-default-class filepath hlibsass monad-loops
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jakubfijalkowski/hsass";
           description = "Integrating Sass into Haskell applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hsb2hs" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , preprocessor-tools, stdenv
         }:
         mkDerivation {
           pname = "hsb2hs";
           version = "0.3.1";
           sha256 = "8ad800820554f273ada083dfce2f463d920fb1ceb053255023a4c883b090f9d8";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring containers directory filepath preprocessor-tools
           ];
           doHaddock = false;
           doCheck = false;
           description = "Preprocesses a file, adding blobs from files as string literals";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hscolour" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "hscolour";
           version = "1.24.1";
           sha256 = "e46fe3de8ed6f96e2216b94b7608d01919bc86b15dd8d0ec7e71c0e7e5bf79c8";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~malcolm/hscolour/";
           description = "Colourise Haskell code";
           license = "LGPL";
         }) {};
      "hsdev" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, array, async, attoparsec
         , base, bin-package-db, bytestring, Cabal, containers, cpphs
         , data-default, deepseq, directory, exceptions, filepath, fsnotify
         , ghc, ghc-paths, ghc-syb-utils, haddock-api, haskell-src-exts
         , hdocs, hformat, hlint, HTTP, lens, lifted-base, monad-control
         , monad-loops, mtl, network, optparse-applicative, process
         , regex-pcre-builtin, scientific, simple-log, stdenv, syb
         , template-haskell, text, text-region, time, transformers
         , transformers-base, uniplate, unix, unordered-containers, vector
         }:
         mkDerivation {
           pname = "hsdev";
           version = "0.2.0.0";
           sha256 = "da36361df0f56f5e217da972cd4a9e2a0f3321be684c365f9d599fb635f7b02e";
           revision = "4";
           editedCabalFile = "1iwmi8gbviaalijzay1cik29arvvxnkkp94vy3cj0sp9lhamggs0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty array async attoparsec base bin-package-db
             bytestring Cabal containers cpphs data-default deepseq directory
             exceptions filepath fsnotify ghc ghc-paths ghc-syb-utils
             haddock-api haskell-src-exts hdocs hformat hlint HTTP lens
             lifted-base monad-control monad-loops mtl network
             optparse-applicative process regex-pcre-builtin scientific
             simple-log syb template-haskell text text-region time transformers
             transformers-base uniplate unix unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base bytestring containers data-default deepseq
             directory exceptions filepath haskell-src-exts lens monad-loops mtl
             network optparse-applicative process text transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvoidex/hsdev";
           description = "Haskell development library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hse-cpp" = callPackage
        ({ mkDerivation, base, cpphs, haskell-src-exts, stdenv }:
         mkDerivation {
           pname = "hse-cpp";
           version = "0.1";
           sha256 = "a075790dd132107b8005478179fcaf7e37a78c3011ca536ff0d95e0b437c2b38";
           revision = "1";
           editedCabalFile = "0jrav7kl7a3a421xhaqh03jvj7qsgscpi93fpxss0q4pgq98gmcy";
           libraryHaskellDepends = [ base cpphs haskell-src-exts ];
           doHaddock = false;
           doCheck = false;
           description = "Preprocess+parse haskell code";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hsebaysdk" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client, http-types
         , stdenv, text, time, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "hsebaysdk";
           version = "0.4.0.0";
           sha256 = "0738d0df113b15bb9148ecbe02f0a34562c557d8f64b65065122925e29df8901";
           libraryHaskellDepends = [
             aeson base bytestring http-client http-types text time transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/creichert/hsebaysdk";
           description = "Haskell eBay SDK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsemail" = callPackage
        ({ mkDerivation, base, mtl, old-time, parsec, stdenv }:
         mkDerivation {
           pname = "hsemail";
           version = "1.7.7";
           sha256 = "25aac3890ff09812be47639ad52cd7be622dc9b193e5a0be115bda12ffcd989b";
           libraryHaskellDepends = [ base mtl old-time parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/peti/hsemail";
           description = "Internet Message Parsers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsexif" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, iconv
         , stdenv, text, time
         }:
         mkDerivation {
           pname = "hsexif";
           version = "0.6.0.10";
           sha256 = "64cb8abfa31085475ae45fddfc2716cb40764714d47c0fc6146fec2b8ab65d33";
           libraryHaskellDepends = [
             base binary bytestring containers iconv text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/emmanueltouzery/hsexif";
           description = "EXIF handling library in pure Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsignal" = callPackage
        ({ mkDerivation, array, base, binary, blas, bytestring, gsl
         , hmatrix, hmatrix-gsl, hmatrix-gsl-stats, hstatistics, liblapack
         , mtl, stdenv, storable-complex, vector
         }:
         mkDerivation {
           pname = "hsignal";
           version = "0.2.7.4";
           sha256 = "290436ca76d13a4435da0b33d20a69663d955abcf361661cf9835e7eedb4f53a";
           libraryHaskellDepends = [
             array base binary bytestring hmatrix hmatrix-gsl hmatrix-gsl-stats
             hstatistics mtl storable-complex vector
           ];
           librarySystemDepends = [ blas liblapack ];
           libraryPkgconfigDepends = [ gsl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/hsignal";
           description = "Signal processing and EEG data analysis";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) blas; inherit (pkgs) gsl; inherit (pkgs) liblapack;};
      "hslogger" = callPackage
        ({ mkDerivation, base, containers, directory, mtl, network
         , old-locale, process, stdenv, time, unix
         }:
         mkDerivation {
           pname = "hslogger";
           version = "1.2.10";
           sha256 = "d7ca6e94a4aacb47a8dc30e3960ab8deff482d2ec9dca9a87b225e03e97e452b";
           revision = "1";
           editedCabalFile = "04vhwv9qidwan7fbkgvx8z5hnybjaf6wq2951fx4qw3nqsys9250";
           libraryHaskellDepends = [
             base containers directory mtl network old-locale process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://software.complete.org/hslogger";
           description = "Versatile logging framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hslua" = callPackage
        ({ mkDerivation, base, bytestring, lua5_1, stdenv }:
         mkDerivation {
           pname = "hslua";
           version = "0.4.1";
           sha256 = "2df2b4f0566ef2244506f9830e0207fce3bece7c331129f69f446c722136173f";
           configureFlags = [ "-fsystem-lua" ];
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ lua5_1 ];
           doHaddock = false;
           doCheck = false;
           description = "A Lua language interpreter embedding in Haskell";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) lua5_1;};
      "hsndfile" = callPackage
        ({ mkDerivation, base, c2hs, libsndfile, stdenv }:
         mkDerivation {
           pname = "hsndfile";
           version = "0.8.0";
           sha256 = "e97e7ef4c26b0dba9400d9a77d3d5001735f64094b93f9733443f58f7f568efb";
           libraryHaskellDepends = [ base ];
           librarySystemDepends = [ libsndfile ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Hsndfile";
           description = "Haskell bindings for libsndfile";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) libsndfile;};
      "hsndfile-vector" = callPackage
        ({ mkDerivation, base, hsndfile, stdenv, vector }:
         mkDerivation {
           pname = "hsndfile-vector";
           version = "0.5.2";
           sha256 = "2ffe11eb9a3e63aae24e8e06d2e04e8ca4a617ccf1238843cc71517a905b2895";
           libraryHaskellDepends = [ base hsndfile vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Hsndfile";
           description = "Haskell bindings for libsndfile (Data.Vector interface)";
           license = stdenv.lib.licenses.lgpl2;
         }) {};
      "hsp" = callPackage
        ({ mkDerivation, base, mtl, stdenv, text }:
         mkDerivation {
           pname = "hsp";
           version = "0.10.0";
           sha256 = "4ed3905a9db91001bde09f060290833af462e87e35476ab0def1579a1ff7ceab";
           libraryHaskellDepends = [ base mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/nibro/hsp";
           description = "Haskell Server Pages is a library for writing dynamic server-side web pages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec" = callPackage
        ({ mkDerivation, base, hspec-core, hspec-discover
         , hspec-expectations, HUnit, QuickCheck, stdenv, transformers
         }:
         mkDerivation {
           pname = "hspec";
           version = "2.2.4";
           sha256 = "724b0af9c871711f10a414d335a2ed0caabb94efb8576f94b43386b7f103c9b1";
           revision = "1";
           editedCabalFile = "03w8nd1c7qxa46pfk7pfl6nr15a86x0srdlr2sr14cywg9rwn8pb";
           libraryHaskellDepends = [
             base hspec-core hspec-discover hspec-expectations HUnit QuickCheck
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "A Testing Framework for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, hspec-expectations
         , stdenv, text
         }:
         mkDerivation {
           pname = "hspec-attoparsec";
           version = "0.1.0.2";
           sha256 = "ea7a8b3f2989abde8c8537cec1a2ae312e88df80086b9b01ed12e5324137fb64";
           libraryHaskellDepends = [
             attoparsec base bytestring hspec-expectations text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/alpmestan/hspec-attoparsec";
           description = "Utility functions for testing your attoparsec parsers with hspec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-contrib" = callPackage
        ({ mkDerivation, base, hspec-core, HUnit, stdenv }:
         mkDerivation {
           pname = "hspec-contrib";
           version = "0.3.0";
           sha256 = "c4f62a0e23468716d735581ffa1899b4741c5ee43e696e40d7d03dd511f7da00";
           revision = "1";
           editedCabalFile = "0p629jlqkivzdxfzzvv1g5gndyc6kc3b724k45fwfmvqiz786n1k";
           libraryHaskellDepends = [ base hspec-core HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "Contributed functionality for Hspec";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-core" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, deepseq
         , hspec-expectations, HUnit, QuickCheck, quickcheck-io, random
         , setenv, stdenv, tf-random, time, transformers
         }:
         mkDerivation {
           pname = "hspec-core";
           version = "2.2.4";
           sha256 = "328ac2525b9eb0fe4807d5ae10fe2d846220f9a8b5ac6b5d316e1bea9e2d0475";
           revision = "4";
           editedCabalFile = "03naxs8yl2bzxg9d8lr0m92ccnha2j8b2ydyy04lzhsssjpxrp1g";
           libraryHaskellDepends = [
             ansi-terminal async base deepseq hspec-expectations HUnit
             QuickCheck quickcheck-io random setenv tf-random time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "A Testing Framework for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-discover" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "hspec-discover";
           version = "2.2.4";
           sha256 = "bb8ddb3c53d4c0cc3829c60d9b848aa19d843b19f22ef26355a12fb0d1e2e7af";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory filepath ];
           executableHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "Automatically discover and run Hspec tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-expectations" = callPackage
        ({ mkDerivation, base, HUnit, stdenv }:
         mkDerivation {
           pname = "hspec-expectations";
           version = "0.7.2";
           sha256 = "371a176b22ebdbc94b7bba55e0bda2296b44c11af01d20b23e4350ef7094a6f0";
           libraryHaskellDepends = [ base HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/hspec-expectations#readme";
           description = "Catchy combinators for HUnit";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-expectations-pretty-diff" = callPackage
        ({ mkDerivation, ansi-terminal, base, Diff, hscolour, HUnit
         , nicify-lib, stdenv, text
         }:
         mkDerivation {
           pname = "hspec-expectations-pretty-diff";
           version = "0.7.2.4";
           sha256 = "1bbfd524330be3cb0b27945556d01f48e3005e042ee475cdf6e441ba21b51b0a";
           libraryHaskellDepends = [
             ansi-terminal base Diff hscolour HUnit nicify-lib text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/hspec-expectations-pretty-diff#readme";
           description = "Catchy combinators for HUnit";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-jenkins" = callPackage
        ({ mkDerivation, base, blaze-markup, hspec, stdenv }:
         mkDerivation {
           pname = "hspec-jenkins";
           version = "0.1.1";
           sha256 = "c27f15e835ff5c1bb07096aee66f8845b691306353eb58d0378169ed1da05899";
           libraryHaskellDepends = [ base blaze-markup hspec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/worksap-ate/hspec-jenkins";
           description = "Jenkins-friendly XML formatter for Hspec";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-megaparsec" = callPackage
        ({ mkDerivation, base, hspec-expectations, megaparsec, stdenv }:
         mkDerivation {
           pname = "hspec-megaparsec";
           version = "0.1.1";
           sha256 = "4ff4683bdff9a3b0ba8a6ee1adfce01f30f8515f9db487b062e5e00e5a2795c5";
           revision = "1";
           editedCabalFile = "1f6gar0724dm1w23ldrr7gsiybm2nwzwd4znpr0088z8x7pqs9mm";
           libraryHaskellDepends = [ base hspec-expectations megaparsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/hspec-megaparsec";
           description = "Utility functions for testing Megaparsec parsers with Hspec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-meta" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, deepseq, directory
         , filepath, hspec-expectations, HUnit, QuickCheck, quickcheck-io
         , random, setenv, stdenv, time, transformers
         }:
         mkDerivation {
           pname = "hspec-meta";
           version = "2.2.1";
           sha256 = "aa7b54c33cad9842783035d1a5cddbbbc3d556c8b2c8f6d0e6bfd3177b9e37d4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal async base deepseq hspec-expectations HUnit
             QuickCheck quickcheck-io random setenv time transformers
           ];
           executableHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "A version of Hspec which is used to test Hspec itself";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-setup" = callPackage
        ({ mkDerivation, base, directory, filepath, process, projectroot
         , stdenv
         }:
         mkDerivation {
           pname = "hspec-setup";
           version = "0.1.1.1";
           sha256 = "fd294bd10fc0fa1573e84d78ba7f6fd77e294efbaac419a5530e0818ece91109";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base directory filepath process projectroot
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-hspec-setup";
           description = "Add an hspec test-suite in one command";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-smallcheck" = callPackage
        ({ mkDerivation, base, hspec-core, smallcheck, stdenv }:
         mkDerivation {
           pname = "hspec-smallcheck";
           version = "0.4.1";
           sha256 = "c5ddd014ad58679554d2726a4442a124d7a3a9fad04c928c610cdc46773fc0f5";
           revision = "1";
           editedCabalFile = "1xn5adm1fxrzmsq51dqif36gga6b5950jv3m5ffm06axv93y0gxm";
           libraryHaskellDepends = [ base hspec-core smallcheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "SmallCheck support for the Hspec testing framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-snap" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers
         , digestive-functors, HandsomeSoup, hspec, hspec-core, hxt, lens
         , mtl, snap, snap-core, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "hspec-snap";
           version = "0.4.0.1";
           sha256 = "42fead47290131c3072453aee3883b7c4a7a34d5dde989ca6e0b9df8b3e08d3a";
           libraryHaskellDepends = [
             aeson base bytestring containers digestive-functors HandsomeSoup
             hspec hspec-core hxt lens mtl snap snap-core text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dbp/hspec-snap";
           description = "A library for testing with Hspec and the Snap Web Framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-wai" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, case-insensitive
         , hspec-core, hspec-expectations, http-types, QuickCheck, stdenv
         , text, transformers, wai, wai-extra, with-location
         }:
         mkDerivation {
           pname = "hspec-wai";
           version = "0.6.6";
           sha256 = "89a1753cd56b6f312a0af11b7f312c744c73a97d8ab3facfd87f8e4e3080b0e0";
           libraryHaskellDepends = [
             base base-compat bytestring case-insensitive hspec-core
             hspec-expectations http-types QuickCheck text transformers wai
             wai-extra with-location
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/hspec-wai#readme";
           description = "Experimental Hspec support for testing WAI applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-wai-json" = callPackage
        ({ mkDerivation, aeson, aeson-qq, base, bytestring
         , case-insensitive, hspec-wai, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "hspec-wai-json";
           version = "0.6.1";
           sha256 = "303e0e67c217ead3ef64f3ac3870b6c9b14a4135df5e8b2c79ad73df5a347c69";
           libraryHaskellDepends = [
             aeson aeson-qq base bytestring case-insensitive hspec-wai
             template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/hspec-wai#readme";
           description = "Testing JSON APIs with hspec-wai";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-webdriver" = callPackage
        ({ mkDerivation, base, data-default, hashable, hspec, hspec-core
         , HUnit, lifted-base, stdenv, stm, text, transformers
         , unordered-containers, webdriver
         }:
         mkDerivation {
           pname = "hspec-webdriver";
           version = "1.1.0";
           sha256 = "42c890d5f5c20f1e4eb7c21a5c33cab13adcc609e17f71495a136710186a6e69";
           libraryHaskellDepends = [
             base data-default hashable hspec hspec-core HUnit lifted-base stm
             text transformers unordered-containers webdriver
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
           description = "Write end2end web application tests using webdriver and hspec";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hstatistics" = callPackage
        ({ mkDerivation, array, base, hmatrix, hmatrix-gsl-stats, random
         , stdenv, vector
         }:
         mkDerivation {
           pname = "hstatistics";
           version = "0.2.5.4";
           sha256 = "e657ac9bb672b502d5dec0e8920679a5833be5bfe0a8a981b7eccc0a99a0e47b";
           libraryHaskellDepends = [
             array base hmatrix hmatrix-gsl-stats random vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/hstatistics";
           description = "Statistics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hstatsd" = callPackage
        ({ mkDerivation, base, bytestring, mtl, network, stdenv, text }:
         mkDerivation {
           pname = "hstatsd";
           version = "0.1";
           sha256 = "446779594257c0fa02d5271c997ee0c22f74f7636d89e34394ad87e5bd285824";
           libraryHaskellDepends = [ base bytestring mtl network text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/hstatsd";
           description = "Quick and dirty statsd interface";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "hsx-jmacro" = callPackage
        ({ mkDerivation, base, hsp, jmacro, mtl, stdenv, text
         , wl-pprint-text
         }:
         mkDerivation {
           pname = "hsx-jmacro";
           version = "7.3.8";
           sha256 = "97c7efa3f8acc5159d697e080fb9ed7abddfca64e4f03d67cb66583fd7114495";
           libraryHaskellDepends = [
             base hsp jmacro mtl text wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "hsp+jmacro support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsx2hs" = callPackage
        ({ mkDerivation, base, bytestring, haskell-src-exts
         , haskell-src-meta, mtl, stdenv, template-haskell, utf8-string
         }:
         mkDerivation {
           pname = "hsx2hs";
           version = "0.13.5";
           sha256 = "0dbaa29287ef82bfbe573f399a635aa109fe675e4dd91f3ee8c2cefd5593ed6e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring haskell-src-exts haskell-src-meta mtl
             template-haskell utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/seereason/hsx2hs";
           description = "HSX (Haskell Source with XML) allows literal XML syntax in Haskell source code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsyslog" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hsyslog";
           version = "2.0";
           sha256 = "f80e8cbab80388941588836e58dbb355898eb44f3f628867dc6b109b1f4a660b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/peti/hsyslog";
           description = "FFI interface to syslog(3) from POSIX.1-2001";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "htaglib" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, taglib, text }:
         mkDerivation {
           pname = "htaglib";
           version = "1.0.4";
           sha256 = "0b23c25f6ef721e193176fd2c4e491376235c5cb04dea0d75ebf721bd10b40a7";
           revision = "1";
           editedCabalFile = "0z0jzhmrm77b3rl1h89wfgbwjg374n1mda73z7qrrdfc7ky99dmy";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring text ];
           librarySystemDepends = [ taglib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/htaglib";
           description = "Bindings to TagLib, audio meta-data library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) taglib;};
      "html" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "html";
           version = "1.0.1.2";
           sha256 = "0c35495ea33d65e69c69bc7441ec8e1af69fbb43433c2aa3406c0a13a3ab3061";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "HTML combinator library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "html-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , containers, resourcet, stdenv, tagstream-conduit, text
         , transformers, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "html-conduit";
           version = "1.2.1.1";
           sha256 = "98c27470cbf99b12ca9705216567fc8aafffb843cd9c37762e8607da153aa8a8";
           revision = "2";
           editedCabalFile = "1fhna6ck1v05zpf4c715phz102v8vz0p7lsjk3fljmxblamc8kn6";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra containers resourcet
             tagstream-conduit text transformers xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/xml";
           description = "Parse HTML documents using xml-conduit datatypes";
           license = stdenv.lib.licenses.mit;
         }) {};
      "htoml" = callPackage
        ({ mkDerivation, aeson, base, containers, old-locale, parsec
         , stdenv, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "htoml";
           version = "1.0.0.3";
           sha256 = "08f8d88a326f80fb55c0abb9431941c3a2a30f2d58f49c94349961ceeb4c856f";
           libraryHaskellDepends = [
             aeson base containers old-locale parsec text time
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cies/htoml";
           description = "Parser for TOML files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-accept" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "http-accept";
           version = "0.2";
           sha256 = "3112c86be446d52b0b65b698ff79a95bfcdc77e1ea91dd44356e3d99329f7cc7";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/singpolyma/http-accept";
           description = "Functions for working with HTTP Accept headers";
           license = "unknown";
         }) {};
      "http-api-data" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, time
         , time-locale-compat
         }:
         mkDerivation {
           pname = "http-api-data";
           version = "0.2.4";
           sha256 = "6bb90863343b17b9ce6ee8cfce9a41db0b4287343aa6cf0654a3ad5c5c5e6635";
           libraryHaskellDepends = [
             base bytestring text time time-locale-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fizruk/http-api-data";
           description = "Converting to/from HTTP API data like URL pieces, headers and query parameters";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-client" = callPackage
        ({ mkDerivation, array, base, base64-bytestring, blaze-builder
         , bytestring, case-insensitive, containers, cookie
         , data-default-class, deepseq, exceptions, filepath, ghc-prim
         , http-types, mime-types, network, network-uri, random, stdenv
         , streaming-commons, text, time, transformers
         }:
         mkDerivation {
           pname = "http-client";
           version = "0.4.31.2";
           sha256 = "16410148a9705677cdd89510192caf1abd3460db2a17ce0c2fafd7bd0c15d88b";
           revision = "1";
           editedCabalFile = "0qwywj1l94jznjj7k7an2lhlyzka7mmmzqplbb2p4b4yvvrrp668";
           libraryHaskellDepends = [
             array base base64-bytestring blaze-builder bytestring
             case-insensitive containers cookie data-default-class deepseq
             exceptions filepath ghc-prim http-types mime-types network
             network-uri random streaming-commons text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/http-client";
           description = "An HTTP client engine, intended as a base layer for more user-friendly packages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-client-openssl" = callPackage
        ({ mkDerivation, base, HsOpenSSL, http-client, network, stdenv }:
         mkDerivation {
           pname = "http-client-openssl";
           version = "0.2.0.4";
           sha256 = "28dddd694ed91174c2544dd388d3550df5c79d5cc4be7e4b260a825ebde1afed";
           libraryHaskellDepends = [ base HsOpenSSL http-client network ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/http-client";
           description = "http-client backend using the OpenSSL library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-client-tls" = callPackage
        ({ mkDerivation, base, bytestring, connection, data-default-class
         , http-client, network, stdenv, tls
         }:
         mkDerivation {
           pname = "http-client-tls";
           version = "0.2.4.1";
           sha256 = "8dc85884e15cd32f59a47e11861d78566c6ccb202e8d317403b784278f628ba3";
           revision = "1";
           editedCabalFile = "0v7mb10cq7j6f1a0rli8wp5gmk06zx218ly4wzyg97a43g7v1w96";
           libraryHaskellDepends = [
             base bytestring connection data-default-class http-client network
             tls
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/http-client";
           description = "http-client backend using the connection package and tls library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-common" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
         , case-insensitive, directory, mtl, network, stdenv, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "http-common";
           version = "0.8.2.0";
           sha256 = "2915e77b0d000a617d4c1304fdc46f45b70acc0942670066a95b2c8d4e504593";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder bytestring case-insensitive
             directory mtl network text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://research.operationaldynamics.com/projects/http-streams/";
           description = "Common types for HTTP clients and servers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-conduit" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
         , data-default-class, exceptions, http-client, http-client-tls
         , http-types, lifted-base, monad-control, mtl, resourcet, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "http-conduit";
           version = "2.1.11";
           sha256 = "75df5c0515080a09b4cdc73a759523b10265a692ff50beb964766d4f8dcf0d7f";
           libraryHaskellDepends = [
             aeson base bytestring conduit conduit-extra data-default-class
             exceptions http-client http-client-tls http-types lifted-base
             monad-control mtl resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/http-conduit";
           description = "HTTP client package with conduit interface and HTTPS support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-date" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, stdenv }:
         mkDerivation {
           pname = "http-date";
           version = "0.0.6.1";
           sha256 = "f2e106603e2b3f710f1189e478f6c20067d9a9d21a20a633fe362b3f91807636";
           libraryHaskellDepends = [ array attoparsec base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "HTTP Date parser/formatter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-link-header" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring
         , bytestring-conversion, errors, http-api-data, network-uri, stdenv
         , text
         }:
         mkDerivation {
           pname = "http-link-header";
           version = "1.0.3";
           sha256 = "59bd2db4e7d14b6f7ce86848af5e38b4bd2e9963e9ffe5068c7b1a710dbdd7fe";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-conversion errors
             http-api-data network-uri text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/http-link-header";
           description = "A parser and writer for the HTTP Link header as specified in RFC 5988 \"Web Linking\"";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "http-media" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , stdenv
         }:
         mkDerivation {
           pname = "http-media";
           version = "0.6.4";
           sha256 = "ef762cf50854250e4247b744decbebe4d3d188dbc19bfd90aa344ed3c61cc9d3";
           libraryHaskellDepends = [
             base bytestring case-insensitive containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/zmthy/http-media";
           description = "Processing HTTP Content-Type and Accept headers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-reverse-proxy" = callPackage
        ({ mkDerivation, async, base, blaze-builder, bytestring
         , case-insensitive, conduit, conduit-extra, containers
         , data-default-class, http-client, http-types, lifted-base
         , monad-control, network, resourcet, stdenv, streaming-commons
         , text, transformers, wai, wai-logger, word8
         }:
         mkDerivation {
           pname = "http-reverse-proxy";
           version = "0.4.3.2";
           sha256 = "c2b3300bf43a9810e8642dd7fa44ecfb5e0ce1055dc01e0b604ae9a99fbfd77a";
           libraryHaskellDepends = [
             async base blaze-builder bytestring case-insensitive conduit
             conduit-extra containers data-default-class http-client http-types
             lifted-base monad-control network resourcet streaming-commons text
             transformers wai wai-logger word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/http-reverse-proxy";
           description = "Reverse proxy HTTP requests, either over raw sockets or with WAI";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-streams" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, case-insensitive, directory, HsOpenSSL
         , http-common, io-streams, mtl, network, network-uri
         , openssl-streams, stdenv, text, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "http-streams";
           version = "0.8.3.3";
           sha256 = "3f4597936490ab1ca12af71578a7c6fe6c4aa9f3d0936de88c7f83475593e232";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring blaze-builder bytestring
             case-insensitive directory HsOpenSSL http-common io-streams mtl
             network network-uri openssl-streams text transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://research.operationaldynamics.com/projects/http-streams/";
           description = "An HTTP client using io-streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-types" = callPackage
        ({ mkDerivation, array, base, blaze-builder, bytestring
         , case-insensitive, stdenv, text
         }:
         mkDerivation {
           pname = "http-types";
           version = "0.9.1";
           sha256 = "7bed648cdc1c69e76bf039763dbe1074b55fd2704911dd0cb6b7dfebf1b6f550";
           libraryHaskellDepends = [
             array base blaze-builder bytestring case-insensitive text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aristidb/http-types";
           description = "Generic HTTP types for Haskell (for both client and server code)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http2" = callPackage
        ({ mkDerivation, array, base, bytestring, bytestring-builder
         , case-insensitive, containers, psqueues, stdenv, stm
         }:
         mkDerivation {
           pname = "http2";
           version = "1.6.2";
           sha256 = "99e75ac0fa19276d276ec63bb94eefb2e952b0a374aea8f3d2c2408a634b6fe7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base bytestring bytestring-builder case-insensitive
             containers psqueues stm
           ];
           doHaddock = false;
           doCheck = false;
           description = "HTTP/2.0 library including frames and HPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "httpd-shed" = callPackage
        ({ mkDerivation, base, network, network-uri, stdenv }:
         mkDerivation {
           pname = "httpd-shed";
           version = "0.4.0.3";
           sha256 = "b0ff87d81e61f788d3920d952e4469d984742ba49c006df086c159886bf09218";
           revision = "1";
           editedCabalFile = "159cjn9j8lq00gj2yvrzp81r37av25f83chsimp88h55zm9z8akw";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base network network-uri ];
           doHaddock = false;
           doCheck = false;
           description = "A simple web-server with an interact style API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "human-readable-duration" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "human-readable-duration";
           version = "0.2.0.3";
           sha256 = "93f3a91a2994588728ae757dcca5104e18a570b3591773aa7f03c524c97599da";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yogsototh/human-readable-duration#readme";
           description = "Provide duration helper";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hunit-dejafu" = callPackage
        ({ mkDerivation, base, dejafu, exceptions, HUnit, stdenv }:
         mkDerivation {
           pname = "hunit-dejafu";
           version = "0.3.0.3";
           sha256 = "c9adfd6bd611e296c4e78b67d23d73cdec71cadd0f876be9a508ce5dc414b120";
           libraryHaskellDepends = [ base dejafu exceptions HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Deja Fu support for the HUnit test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hvect" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hvect";
           version = "0.3.1.0";
           sha256 = "b9ba2408a3718b7a38b72cf7f81ce51ac9f0db63908969d386213c47b6526ab8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/hvect";
           description = "Simple strict heterogeneous lists";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hw-bits" = callPackage
        ({ mkDerivation, base, bytestring, criterion, hw-prim, mmap, parsec
         , resourcet, stdenv, vector
         }:
         mkDerivation {
           pname = "hw-bits";
           version = "0.0.0.6";
           sha256 = "8cfe76cdfe568fb392abe90e1f362c340d32729baa47c113d027657c85ef6c37";
           revision = "1";
           editedCabalFile = "0ygw3q170wsp47l6aq0b7w1hdb4kiywp4zrzbdi8zfmmmaii3xp6";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring hw-prim parsec vector ];
           executableHaskellDepends = [
             base criterion mmap resourcet vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-bits#readme";
           description = "Conduits for tokenizing streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-conduit" = callPackage
        ({ mkDerivation, array, base, bytestring, conduit, criterion
         , hw-bits, resourcet, stdenv, word8
         }:
         mkDerivation {
           pname = "hw-conduit";
           version = "0.0.0.11";
           sha256 = "e0e1193a901858d9bc5fccc51f99977a9bffd24993f9de6c1c3030aa0a1ed77b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base bytestring conduit hw-bits resourcet word8
           ];
           executableHaskellDepends = [ base criterion ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-conduit#readme";
           description = "Conduits for tokenizing streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-diagnostics" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hw-diagnostics";
           version = "0.0.0.5";
           sha256 = "5ceaec01c446c5a507e889f514201e4739ea6f1cc22a4c68894bb023257bd931";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-diagnostics#readme";
           description = "Diagnostics library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-json" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, conduit
         , containers, criterion, hw-bits, hw-conduit, hw-diagnostics
         , hw-parser, hw-prim, hw-rankselect, mmap, mono-traversable
         , resourcet, stdenv, text, vector, word8
         }:
         mkDerivation {
           pname = "hw-json";
           version = "0.0.0.2";
           sha256 = "b1205920d0b1ef4046a0d5ff4513d9d6b4ca952e080b7608b9de85b67d38b3fa";
           revision = "1";
           editedCabalFile = "10gbp2dzqf8sw7qvmrv95mdfr539qlfkry5mlclnk8nvwdycprz3";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array attoparsec base bytestring conduit containers hw-bits
             hw-conduit hw-parser hw-prim hw-rankselect mono-traversable
             resourcet text vector word8
           ];
           executableHaskellDepends = [
             base bytestring conduit criterion hw-bits hw-conduit hw-diagnostics
             hw-prim hw-rankselect mmap resourcet vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-json#readme";
           description = "Conduits for tokenizing streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-parser" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, hw-prim
         , mono-traversable, stdenv, text
         }:
         mkDerivation {
           pname = "hw-parser";
           version = "0.0.0.1";
           sha256 = "9b08d5bc3441cfcaa91ae613655c47dfb4e988210245df7cada3dbc2a5128025";
           libraryHaskellDepends = [
             attoparsec base bytestring hw-prim mono-traversable text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-parser#readme";
           description = "Conduits for tokenizing streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-prim" = callPackage
        ({ mkDerivation, base, bytestring, random, stdenv, vector }:
         mkDerivation {
           pname = "hw-prim";
           version = "0.0.0.10";
           sha256 = "641a1da0488664d12438f396f08577e02f9ca43b53a6f00e52085f63a5ab776e";
           revision = "2";
           editedCabalFile = "0qh353zcnym6x69prfkb9fa8y1myzrs0gfz7gjb0fmagbf26p2h6";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring random vector ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-prim#readme";
           description = "Primitive functions and data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-rankselect" = callPackage
        ({ mkDerivation, base, hw-bits, hw-prim, stdenv, vector }:
         mkDerivation {
           pname = "hw-rankselect";
           version = "0.0.0.2";
           sha256 = "ad79b1fca42093c3db8c7196ab144a2a618c22e4368cc5ccf0d548a15fdc186a";
           revision = "1";
           editedCabalFile = "1hlqcz5cppwqg400f00mm8iqkqgybxdyjc9dhn4bx5yh59pa5xpn";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base hw-bits hw-prim vector ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-rankselect#readme";
           description = "Conduits for tokenizing streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-succinct" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, conduit, containers
         , hw-bits, hw-conduit, hw-parser, hw-prim, hw-rankselect
         , mono-traversable, stdenv, text, vector, word8
         }:
         mkDerivation {
           pname = "hw-succinct";
           version = "0.0.0.14";
           sha256 = "f3e2ec65f1d7e0baa7cda17442cdcd60635cd2693a38873361df9578b65ffbeb";
           libraryHaskellDepends = [
             attoparsec base bytestring conduit containers hw-bits hw-conduit
             hw-parser hw-prim hw-rankselect mono-traversable text vector word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-succinct#readme";
           description = "Conduits for tokenizing streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hweblib" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers, mtl
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "hweblib";
           version = "0.6.3";
           sha256 = "1e8ee12baac496d56831935a60e78f54eb43d2b7268bf7d31acb6b9a63e9b50d";
           libraryHaskellDepends = [
             attoparsec base bytestring containers mtl text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aycanirican/hweblib";
           description = "Haskell Web Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hworker" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, hedis, stdenv
         , text, time, uuid
         }:
         mkDerivation {
           pname = "hworker";
           version = "0.1.0.1";
           sha256 = "34cbcc4db8f190ab0dc02a072adcf1fc75b7beab7e545982872bf265a1223f1d";
           revision = "1";
           editedCabalFile = "0w2bpvfr68n2qipvr8gc5096dain3g2536m4n9kqx1fahf12mwy5";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring hedis text time uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dbp/hworker";
           description = "A reliable at-least-once job queue built on top of redis";
           license = stdenv.lib.licenses.isc;
         }) {};
      "hworker-ses" = callPackage
        ({ mkDerivation, aeson, amazonka, amazonka-core, amazonka-ses, base
         , hworker, lens, stdenv, text, time, unordered-containers
         }:
         mkDerivation {
           pname = "hworker-ses";
           version = "0.1.1.0";
           sha256 = "dd5330691585b39ff0ddba8eb7edd2129a5610bae8a0493c2855f2786a3581c7";
           revision = "1";
           editedCabalFile = "0vbzj885q7hrlsv2ds0izsjciishcfnh1m8nw98szzis4byhck48";
           libraryHaskellDepends = [
             aeson amazonka amazonka-core amazonka-ses base hworker lens text
             time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dbp/hworker-ses";
           description = "Library for sending email with Amazon's SES and hworker";
           license = stdenv.lib.licenses.isc;
         }) {};
      "hxt" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq
         , directory, filepath, hxt-charproperties, hxt-regex-xmlschema
         , hxt-unicode, mtl, network-uri, parsec, stdenv
         }:
         mkDerivation {
           pname = "hxt";
           version = "9.3.1.16";
           sha256 = "0d55e35cc718891d0987b7c8e6c43499efa727c68bc92e88e8b99461dff403e3";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq directory filepath
             hxt-charproperties hxt-regex-xmlschema hxt-unicode mtl network-uri
             parsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "A collection of tools for processing XML with Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-charproperties" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hxt-charproperties";
           version = "9.2.0.1";
           sha256 = "e46614d6bf0390b2a6a1aeeb0771e6d366944da40fb21c12c2f8a94d1f47b4d6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "Character properties and classes for XML and Unicode";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-css" = callPackage
        ({ mkDerivation, base, hxt, parsec, split, stdenv }:
         mkDerivation {
           pname = "hxt-css";
           version = "0.1.0.3";
           sha256 = "0244fc145d5923df0522ad80949e9b221b01a028c755ebfc4740339881ef65b7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base hxt parsec split ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/hxt-css";
           description = "CSS selectors for HXT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hxt-curl" = callPackage
        ({ mkDerivation, base, bytestring, curl, hxt, parsec, stdenv }:
         mkDerivation {
           pname = "hxt-curl";
           version = "9.1.1.1";
           sha256 = "cdc1cc8bf9b8699cabdee965c9737d497c199b5cf82eabc66a5fe3f2ffb3c5ea";
           libraryHaskellDepends = [ base bytestring curl hxt parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "LibCurl interface for HXT";
           license = "unknown";
         }) {};
      "hxt-expat" = callPackage
        ({ mkDerivation, base, bytestring, hexpat, hxt, stdenv }:
         mkDerivation {
           pname = "hxt-expat";
           version = "9.1.1";
           sha256 = "10d9c43c20c82e879fbc06944fcfed373f8b43bd3e0a44f9c712db30a27022d6";
           libraryHaskellDepends = [ base bytestring hexpat hxt ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
           description = "Expat parser for HXT";
           license = "unknown";
         }) {};
      "hxt-http" = callPackage
        ({ mkDerivation, base, bytestring, HTTP, hxt, network, network-uri
         , parsec, stdenv
         }:
         mkDerivation {
           pname = "hxt-http";
           version = "9.1.5.2";
           sha256 = "6fa19d03991d53c34f4525a4fdfaafde56dd48459093b4502832a1fdd9dfdd0b";
           libraryHaskellDepends = [
             base bytestring HTTP hxt network network-uri parsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "Interface to native Haskell HTTP package HTTP";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-pickle-utils" = callPackage
        ({ mkDerivation, base, hxt, mtl, stdenv }:
         mkDerivation {
           pname = "hxt-pickle-utils";
           version = "0.1.0.3";
           sha256 = "9ddba19f27d9d8c155012da4dd9598fb318cab862da10f14ee4bc3eb5321a9c5";
           revision = "3";
           editedCabalFile = "0d5fg718y7xzw76ip33q0w1liqk70q9074qkd198mjnijxjcrkf3";
           libraryHaskellDepends = [ base hxt mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/silkapp/hxt-pickle-utils";
           description = "Utility functions for using HXT picklers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hxt-regex-xmlschema" = callPackage
        ({ mkDerivation, base, bytestring, hxt-charproperties, parsec
         , stdenv, text
         }:
         mkDerivation {
           pname = "hxt-regex-xmlschema";
           version = "9.2.0.3";
           sha256 = "f4743ba65498d6001cdfcf5cbc3317d4bc43941be5c7030b60beb83408c892b0";
           libraryHaskellDepends = [
             base bytestring hxt-charproperties parsec text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
           description = "A regular expression library for W3C XML Schema regular expressions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-relaxng" = callPackage
        ({ mkDerivation, base, containers, hxt, hxt-charproperties
         , hxt-regex-xmlschema, network-uri, parsec, stdenv
         }:
         mkDerivation {
           pname = "hxt-relaxng";
           version = "9.1.5.5";
           sha256 = "0efe2de0abc71f9cef655e52543528c4ab8ed1793be58afe6f1734d8cb3f441f";
           libraryHaskellDepends = [
             base containers hxt hxt-charproperties hxt-regex-xmlschema
             network-uri parsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "The HXT RelaxNG validator";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-tagsoup" = callPackage
        ({ mkDerivation, base, hxt, hxt-charproperties, hxt-unicode, stdenv
         , tagsoup
         }:
         mkDerivation {
           pname = "hxt-tagsoup";
           version = "9.1.4";
           sha256 = "d77b290d63acf0ac8e5a07c5c69753f9984b97e0c9d2c0befadd7dd5b144b283";
           libraryHaskellDepends = [
             base hxt hxt-charproperties hxt-unicode tagsoup
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "TagSoup parser for HXT";
           license = "unknown";
         }) {};
      "hxt-unicode" = callPackage
        ({ mkDerivation, base, hxt-charproperties, stdenv }:
         mkDerivation {
           pname = "hxt-unicode";
           version = "9.0.2.4";
           sha256 = "7b5823f3bd94b57022d9d84ab3555303653c5121eaaef2ee1fd4918f3c434466";
           libraryHaskellDepends = [ base hxt-charproperties ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "Unicode en-/decoding functions for utf8, iso-latin-* and other encodings";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hybrid-vectors" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv, vector }:
         mkDerivation {
           pname = "hybrid-vectors";
           version = "0.2.1";
           sha256 = "2edcd8fcfedc76a944ac690bfc257f2974100df6484c6c20883d27773836cca2";
           revision = "2";
           editedCabalFile = "0nvvzbkprn8jb0sjik3v4a5fml30jlbhaw06wxqmpg0ay6149p76";
           libraryHaskellDepends = [ base deepseq primitive vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/hybrid-vectors";
           description = "Hybrid vectors e.g. Mixed Boxed/Unboxed vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hyperloglog" = callPackage
        ({ mkDerivation, approximate, base, binary, bits, bytes, cereal
         , cereal-vector, comonad, deepseq, distributive, hashable
         , hashable-extras, lens, reflection, safecopy, semigroupoids
         , semigroups, siphash, stdenv, tagged, vector
         }:
         mkDerivation {
           pname = "hyperloglog";
           version = "0.4.0.4";
           sha256 = "34d7a2db30d680bc38ab7fa3488e9182adacee65a751b75cc5e99eb9f39b9847";
           libraryHaskellDepends = [
             approximate base binary bits bytes cereal cereal-vector comonad
             deepseq distributive hashable hashable-extras lens reflection
             safecopy semigroupoids semigroups siphash tagged vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/analytics/hyperloglog";
           description = "An approximate streaming (constant space) unique object counter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hyphenation" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv
         , unordered-containers, zlib
         }:
         mkDerivation {
           pname = "hyphenation";
           version = "0.6";
           sha256 = "2f673666c18f63581422f7c6389b78b0ff754406671296a3d680d417942512f7";
           revision = "1";
           editedCabalFile = "03ribrpwjbnc9yajhhph8hm5z0dvgynfhilwnl8jwzrchi2nvwqx";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers unordered-containers zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/hyphenation";
           description = "Configurable Knuth-Liang hyphenation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hzulip" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, exceptions
         , http-client, http-client-tls, http-types, lens, lens-aeson, mtl
         , stdenv, stm, stm-conduit, text, transformers
         }:
         mkDerivation {
           pname = "hzulip";
           version = "1.1.1.3";
           sha256 = "a49c129e665984ebfc013bffdf7f997b76e7362fb66d622e5f43a35ba1468661";
           libraryHaskellDepends = [
             aeson base bytestring conduit exceptions http-client
             http-client-tls http-types lens lens-aeson mtl stm stm-conduit text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/hzulip";
           description = "A haskell wrapper for the Zulip API";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "ical" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, containers, either, mtl
         , stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "ical";
           version = "0.0.1";
           sha256 = "f5e45df4249aa90a87080ef6714d77d8e961c5ba50e6813062379fcdaea7d882";
           revision = "1";
           editedCabalFile = "0sxh3m5iscf1kdkmc8bqgb8snn878ljm962h0f1sgx8z72avawr9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base containers either mtl text time transformers
           ];
           executableHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/chrisdone/ical#readme";
           description = "iCalendar format parser and org-mode converter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iconv" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "iconv";
           version = "0.4.1.3";
           sha256 = "36425168e3314bc83ba5ee95152872d52e94ee0f9503f3591f84d458e005b554";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "String encoding conversion";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ide-backend" = callPackage
        ({ mkDerivation, aeson, async, attoparsec, base, binary, bytestring
         , bytestring-trie, Cabal-ide-backend, containers, crypto-api
         , data-accessor, data-accessor-mtl, directory, executable-path
         , filemanip, filepath, fingertree, ghc-prim, ide-backend-common
         , mtl, network, pretty-show, process, pureMD5, random, stdenv
         , tagged, template-haskell, temporary, text, time, transformers
         , unix, unix-compat, unordered-containers, utf8-string
         }:
         mkDerivation {
           pname = "ide-backend";
           version = "0.10.0.1";
           sha256 = "07186ec1d8135e94fac39c16fc10145c3a6cee957b96fa739f240afd0ae5faf0";
           revision = "1";
           editedCabalFile = "0bb6cg0yiadcwa7pdg5gan3lir3pxdakwimi0cp64hi76scy0xng";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             async attoparsec base binary bytestring Cabal-ide-backend
             containers data-accessor data-accessor-mtl directory filemanip
             filepath ghc-prim ide-backend-common mtl network pretty-show
             process pureMD5 template-haskell temporary text time transformers
             unix utf8-string
           ];
           executableHaskellDepends = [
             aeson async attoparsec base binary bytestring bytestring-trie
             Cabal-ide-backend containers crypto-api data-accessor
             data-accessor-mtl directory executable-path filemanip filepath
             fingertree ghc-prim ide-backend-common mtl network pretty-show
             process pureMD5 random tagged template-haskell temporary text time
             transformers unix unix-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "An IDE backend library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ide-backend-common" = callPackage
        ({ mkDerivation, aeson, async, attoparsec, base, base64-bytestring
         , binary, bytestring, bytestring-trie, containers, crypto-api
         , data-accessor, directory, filepath, fingertree, monad-logger, mtl
         , network, pretty-show, process, pureMD5, stdenv, tagged
         , template-haskell, temporary, text, transformers, unix
         , unix-compat
         }:
         mkDerivation {
           pname = "ide-backend-common";
           version = "0.10.1.2";
           sha256 = "031028f38e1a6174a58665cecd882356c6ca7579c6c21a9e2461f13d81a5915b";
           revision = "1";
           editedCabalFile = "1ncxddrqgdz60575ddsbpd1vr18ps5qrq6n9g4571428gx2skjn4";
           libraryHaskellDepends = [
             aeson async attoparsec base base64-bytestring binary bytestring
             bytestring-trie containers crypto-api data-accessor directory
             filepath fingertree monad-logger mtl network pretty-show process
             pureMD5 tagged template-haskell temporary text transformers unix
             unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Shared library used be ide-backend and ide-backend-server";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ide-backend-rts" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ide-backend-rts";
           version = "0.1.3.1";
           sha256 = "407e6c80dedc129f22e9564f447314f4053d1cc6ca244b7c9ff755e82f7d41fe";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "RTS for the IDE backend";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ide-backend-server" = callPackage
        ({ mkDerivation, array, async, base, bytestring, Cabal, containers
         , data-accessor, data-accessor-mtl, directory, file-embed
         , filemanip, filepath, ghc, haddock-api, ide-backend-common, mtl
         , network, process, stdenv, tar, temporary, text, time
         , transformers, unix, unordered-containers, zlib
         }:
         mkDerivation {
           pname = "ide-backend-server";
           version = "0.10.0.2";
           sha256 = "e5290e08247cc77b7736016342d743c01d850b01e38193bfa2b897d19accfe5f";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array async base bytestring Cabal containers data-accessor
             data-accessor-mtl directory file-embed filemanip filepath ghc
             haddock-api ide-backend-common mtl network process tar temporary
             text time transformers unix unordered-containers zlib
           ];
           doHaddock = false;
           doCheck = false;
           description = "An IDE backend server";
           license = stdenv.lib.licenses.mit;
         }) {};
      "idris" = callPackage
        ({ mkDerivation, aeson, annotated-wl-pprint, ansi-terminal
         , ansi-wl-pprint, async, base, base64-bytestring, binary
         , blaze-html, blaze-markup, bytestring, cheapskate, containers
         , deepseq, directory, filepath, fingertree, fsnotify, gmp
         , haskeline, ieee754, libffi, mtl, network, optparse-applicative
         , parsers, pretty, process, safe, split, stdenv, terminal-size
         , text, time, transformers, transformers-compat, trifecta, uniplate
         , unix, unordered-containers, utf8-string, vector
         , vector-binary-instances, zip-archive
         }:
         mkDerivation {
           pname = "idris";
           version = "0.11.2";
           sha256 = "4120eec85e07dc9e96835fc5226f4d8044b2401c0c007987465d906db7773fad";
           configureFlags = [ "-fcurses" "-f-execonly" "-fffi" "-fgmp" ];
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson annotated-wl-pprint ansi-terminal ansi-wl-pprint async base
             base64-bytestring binary blaze-html blaze-markup bytestring
             cheapskate containers deepseq directory filepath fingertree
             fsnotify haskeline ieee754 libffi mtl network optparse-applicative
             parsers pretty process safe split terminal-size text time
             transformers transformers-compat trifecta uniplate unix
             unordered-containers utf8-string vector vector-binary-instances
             zip-archive
           ];
           librarySystemDepends = [ gmp ];
           executableHaskellDepends = [
             base directory filepath haskeline transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.idris-lang.org/";
           description = "Functional Programming Language with Dependent Types";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) gmp;};
      "ieee754" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ieee754";
           version = "0.7.9";
           sha256 = "dc1860c545d7143ea8c7e53509ac535ca2932495f0f89b2801c960295cfcdd15";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/patperry/hs-ieee754";
           description = "Utilities for dealing with IEEE floating point numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ig" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, bytestring
         , conduit, conduit-extra, crypto-api, cryptohash
         , cryptohash-cryptoapi, data-default, http-conduit, http-types
         , lifted-base, monad-control, resourcet, stdenv, text, time
         , transformers, transformers-base, unordered-containers
         }:
         mkDerivation {
           pname = "ig";
           version = "0.7";
           sha256 = "31763aae55c9cfa47a8f3f8e04ba0b91adb4b6aa5f92e3401208205b873d5c55";
           libraryHaskellDepends = [
             aeson base base16-bytestring bytestring conduit conduit-extra
             crypto-api cryptohash cryptohash-cryptoapi data-default
             http-conduit http-types lifted-base monad-control resourcet text
             time transformers transformers-base unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/ig";
           description = "Bindings to Instagram's API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ignore" = callPackage
        ({ mkDerivation, base, directory, Glob, mtl, path, pcre-heavy
         , stdenv, text
         }:
         mkDerivation {
           pname = "ignore";
           version = "0.1.1.0";
           sha256 = "aaf481fdab8bdc5a506e4726eadf56697726f82086a3cd0439526b9442c73575";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base directory Glob mtl path pcre-heavy text
           ];
           executableHaskellDepends = [ base directory path ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/ignore";
           description = "Handle ignore files of different VCSes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ihaskell" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bin-package-db
         , bytestring, cereal, cmdargs, containers, directory, filepath, ghc
         , ghc-parser, ghc-paths, haskeline, haskell-src-exts, hlint
         , http-client, http-client-tls, ipython-kernel, mtl, parsec
         , process, random, shelly, split, stdenv, stm, strict, system-argv0
         , text, transformers, unix, unordered-containers, utf8-string, uuid
         , vector
         }:
         mkDerivation {
           pname = "ihaskell";
           version = "0.8.4.0";
           sha256 = "f77909f31fc5c8b0792460c09248a3b4f2a54cbbce060d393bd542c4fae27f27";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base64-bytestring bin-package-db bytestring cereal
             cmdargs containers directory filepath ghc ghc-parser ghc-paths
             haskeline haskell-src-exts hlint http-client http-client-tls
             ipython-kernel mtl parsec process random shelly split stm strict
             system-argv0 text transformers unix unordered-containers
             utf8-string uuid vector
           ];
           executableHaskellDepends = [
             aeson base bin-package-db bytestring containers directory ghc
             ipython-kernel process strict text transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/gibiansky/IHaskell";
           description = "A Haskell backend kernel for the IPython project";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ihaskell-aeson" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, here
         , ihaskell, stdenv, text
         }:
         mkDerivation {
           pname = "ihaskell-aeson";
           version = "0.3.0.0";
           sha256 = "a716703680e95ecd6c1e9bd93819c2aeeeec248397024b84f5ad22caf15c4b40";
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring here ihaskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/gibiansky/ihaskell";
           description = "IHaskell display instances for Aeson";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ihaskell-basic" = callPackage
        ({ mkDerivation, base, ihaskell, stdenv }:
         mkDerivation {
           pname = "ihaskell-basic";
           version = "0.3.0.0";
           sha256 = "1c1ee80276e7950370b8b3fe61fc6764e60fb41d1adab5028e74e865a0e964ed";
           libraryHaskellDepends = [ base ihaskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/gibiansky/IHaskell";
           description = "IHaskell display instances for basic types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ihaskell-blaze" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, ihaskell, stdenv
         }:
         mkDerivation {
           pname = "ihaskell-blaze";
           version = "0.3.0.0";
           sha256 = "eba41d50a7d9af9fd9e1a9e0d1346ec77dd564866c673dcad905ea69c38f83c6";
           libraryHaskellDepends = [ base blaze-html blaze-markup ihaskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/gibiansky/ihaskell";
           description = "IHaskell display instances for blaze-html types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ihaskell-charts" = callPackage
        ({ mkDerivation, base, bytestring, Chart, Chart-cairo
         , data-default-class, directory, ihaskell, stdenv
         }:
         mkDerivation {
           pname = "ihaskell-charts";
           version = "0.3.0.0";
           sha256 = "c3919848c37f067299e9e24daa725b81af140f4a69b5ff3ad1618f92baaf915a";
           libraryHaskellDepends = [
             base bytestring Chart Chart-cairo data-default-class directory
             ihaskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/gibiansky/ihaskell";
           description = "IHaskell display instances for charts types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ihaskell-diagrams" = callPackage
        ({ mkDerivation, active, base, bytestring, diagrams, diagrams-cairo
         , diagrams-lib, directory, ihaskell, stdenv, text
         }:
         mkDerivation {
           pname = "ihaskell-diagrams";
           version = "0.3.1.0";
           sha256 = "1f137977fde3cc9f3efbd2b5c1a21e06cbfdee6eab1c096c8fc1429dbba907a3";
           libraryHaskellDepends = [
             active base bytestring diagrams diagrams-cairo diagrams-lib
             directory ihaskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/gibiansky/ihaskell";
           description = "IHaskell display instances for diagram types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ihaskell-hatex" = callPackage
        ({ mkDerivation, base, HaTeX, ihaskell, stdenv, text }:
         mkDerivation {
           pname = "ihaskell-hatex";
           version = "0.2.1.0";
           sha256 = "11999ba26d5d09a1f51f88907ca52dcbff9b7714e3f8b66d2bb150cd975a1525";
           libraryHaskellDepends = [ base HaTeX ihaskell text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/gibiansky/IHaskell";
           description = "IHaskell display instances for hatex";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ihaskell-inline-r" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-html, bytestring
         , filepath, ihaskell, ihaskell-blaze, inline-r, stdenv
         , template-haskell, temporary
         }:
         mkDerivation {
           pname = "ihaskell-inline-r";
           version = "0.1.1.0";
           sha256 = "e6584ad3c1140ebbcf26c37ae668b00c8b033574f380b11f486c69f1eb58665a";
           libraryHaskellDepends = [
             base base64-bytestring blaze-html bytestring filepath ihaskell
             ihaskell-blaze inline-r template-haskell temporary
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://tweag.github.io/HaskellR/";
           description = "Embed R quasiquotes and plots in IHaskell notebooks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ihaskell-juicypixels" = callPackage
        ({ mkDerivation, base, bytestring, directory, ihaskell, JuicyPixels
         , stdenv
         }:
         mkDerivation {
           pname = "ihaskell-juicypixels";
           version = "0.3.0.0";
           sha256 = "1e4ce2bcede2d2a3a808078f83aecc24dba6220913af34f4ff907c400aa5fa2a";
           libraryHaskellDepends = [
             base bytestring directory ihaskell JuicyPixels
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/gibiansky/ihaskell";
           description = "IHaskell - IHaskellDisplay instances of the image types of the JuicyPixels package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ihaskell-magic" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, ihaskell
         , ipython-kernel, magic, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "ihaskell-magic";
           version = "0.3.0.0";
           sha256 = "b45999a7fec36b642e05d739af16999b80677998d09d756bc6aa0d1314f35b16";
           libraryHaskellDepends = [
             base base64-bytestring bytestring ihaskell ipython-kernel magic
             text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/gibiansky/IHaskell";
           description = "IHaskell display instances for bytestrings";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ihaskell-rlangqq" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-html, bytestring
         , directory, filepath, ihaskell, ihaskell-blaze, Rlang-QQ, split
         , stdenv, stm, template-haskell, xformat
         }:
         mkDerivation {
           pname = "ihaskell-rlangqq";
           version = "0.3.0.0";
           sha256 = "52c59fed843f2451c4d888d9e1a5f00370799ba114dab799294d885007e55ef0";
           libraryHaskellDepends = [
             base base64-bytestring blaze-html bytestring directory filepath
             ihaskell ihaskell-blaze Rlang-QQ split stm template-haskell xformat
           ];
           doHaddock = false;
           doCheck = false;
           description = "a rDisp quasiquote to show plots from Rlang-QQ in IHaskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "imagesize-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , exceptions, stdenv
         }:
         mkDerivation {
           pname = "imagesize-conduit";
           version = "1.1";
           sha256 = "31c5784578b305921b89f7ab6fca35747e5a35f12884770b78c31e3a0a01ac19";
           revision = "3";
           editedCabalFile = "0p4zmizr01pg3d7gb0q88j1alvvlzbdvzyf1wbgajng68a4g0li9";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra exceptions
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/silkapp/imagesize-conduit";
           description = "Determine the size of some common image formats";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "immortal" = callPackage
        ({ mkDerivation, base, lifted-base, monad-control, stdenv, stm
         , transformers-base
         }:
         mkDerivation {
           pname = "immortal";
           version = "0.2.2";
           sha256 = "b3858f3830f5eacd7380184d57845ba6b1aee638193fbbf2b285cc31e2c3623a";
           libraryHaskellDepends = [
             base lifted-base monad-control stm transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/immortal";
           description = "Spawn threads that never die (unless told to do so)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "include-file" = callPackage
        ({ mkDerivation, base, bytestring, random, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "include-file";
           version = "0.1.0.3";
           sha256 = "208f1f3bdc717f5f953cb7c9935c84d6a6291b7cd5ed8a22fa8567184be33d29";
           libraryHaskellDepends = [
             base bytestring random template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Inclusion of files in executables at compile-time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "incremental-parser" = callPackage
        ({ mkDerivation, base, monoid-subclasses, stdenv }:
         mkDerivation {
           pname = "incremental-parser";
           version = "0.2.5";
           sha256 = "7d0fd208e86d383ec00ceabc6c229d66ae35726862b003820df06e855ea87ac1";
           libraryHaskellDepends = [ base monoid-subclasses ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/blamario/incremental-parser";
           description = "Generic parser library capable of providing partial results from partial input";
           license = "GPL";
         }) {};
      "indents" = callPackage
        ({ mkDerivation, base, concatenative, mtl, parsec, stdenv }:
         mkDerivation {
           pname = "indents";
           version = "0.3.3";
           sha256 = "b61f51ac894609cb5571cc3ded12db5de97185a8de236c69ec24c87457109f9a";
           libraryHaskellDepends = [ base concatenative mtl parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://patch-tag.com/r/salazar/indents";
           description = "indentation sensitive parser-combinators for parsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "inflections" = callPackage
        ({ mkDerivation, base, containers, parsec, stdenv }:
         mkDerivation {
           pname = "inflections";
           version = "0.2.0.1";
           sha256 = "4bc856a2b409fbf874714f7bf50b9db4701242cf58e133bd31b1ae39fe8e2c35";
           libraryHaskellDepends = [ base containers parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/inflections-hs";
           description = "Inflections library for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ini" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "ini";
           version = "0.3.5";
           sha256 = "bfd3836dfe38440987ce53f7eeffee00b54e3b7e4c0cd81ba315932cd7562cc6";
           revision = "1";
           editedCabalFile = "0imgz9a8wz20zngy6c4w61k1n6cmqpklr0kj4k7dk2j16l4hd8g6";
           libraryHaskellDepends = [
             attoparsec base text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/chrisdone/ini";
           description = "Quick and easy configuration files in the INI format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "inline-c" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, binary, bytestring
         , containers, cryptohash, directory, filepath, hashable, mtl
         , parsec, parsers, QuickCheck, stdenv, template-haskell
         , transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "inline-c";
           version = "0.5.5.9";
           sha256 = "2e48cae75fe1e4fd9f7c0ab4e7a4cbb4dcb9d2e9075d40adc33ac9038297fe22";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-wl-pprint base binary bytestring containers cryptohash
             directory filepath hashable mtl parsec parsers QuickCheck
             template-haskell transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Write Haskell source files including C code inline. No FFI required.";
           license = stdenv.lib.licenses.mit;
         }) {};
      "inline-c-cpp" = callPackage
        ({ mkDerivation, base, inline-c, stdenv, template-haskell }:
         mkDerivation {
           pname = "inline-c-cpp";
           version = "0.1.0.0";
           sha256 = "2e179756d13191e7c75522e7fda1b4ed9bfbe870484fb27479ab332bee396a45";
           libraryHaskellDepends = [ base inline-c template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Lets you embed C++ code into Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "inline-r" = callPackage
        ({ mkDerivation, aeson, base, bytestring, c2hs, containers
         , data-default-class, deepseq, exceptions, mtl, pretty, primitive
         , process, R, reflection, setenv, singletons, stdenv
         , template-haskell, text, th-lift, th-orphans, transformers, unix
         , vector
         }:
         mkDerivation {
           pname = "inline-r";
           version = "0.8.0.1";
           sha256 = "4ce2363046cb3173e00e1f60fe666e539d88ab61a4a3d5eb06d550dba0f41e61";
           libraryHaskellDepends = [
             aeson base bytestring containers data-default-class deepseq
             exceptions mtl pretty primitive process reflection setenv
             singletons template-haskell text th-lift th-orphans transformers
             unix vector
           ];
           libraryPkgconfigDepends = [ R ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           description = "Seamlessly call R from Haskell and vice versa. No FFI required.";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) R;};
      "insert-ordered-containers" = callPackage
        ({ mkDerivation, aeson, base, base-compat, hashable, lens
         , semigroupoids, semigroups, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "insert-ordered-containers";
           version = "0.2.1.0";
           sha256 = "d71d126bf455898492e1d2ba18b2ad04453f8b0e4daff3926a67f0560a712298";
           revision = "8";
           editedCabalFile = "0ry5jsyimf1dx6013k1bhvsy3vjpg94q7z0sy9yxhmfdf16zb1fa";
           libraryHaskellDepends = [
             aeson base base-compat hashable lens semigroupoids semigroups text
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/insert-ordered-containers#readme";
           description = "Associative containers retaining insertion order for traversals";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "integration" = callPackage
        ({ mkDerivation, base, parallel, stdenv }:
         mkDerivation {
           pname = "integration";
           version = "0.2.1";
           sha256 = "0c27385eadc10a580e78f7b7d4bc919c346b2c9b1e73aea7e7804d824d53582f";
           libraryHaskellDepends = [ base parallel ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ekmett/integration";
           description = "Fast robust numeric integration via tanh-sinh quadrature";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "interpolate" = callPackage
        ({ mkDerivation, base, haskell-src-meta, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "interpolate";
           version = "0.1.0";
           sha256 = "2d1a6d5d19fe19d2fa4c7552ef7fd26a26ddfe13d80f458cec03afd030088c72";
           revision = "1";
           editedCabalFile = "0ld319k9phmp6dp8m87bdhqp5519dxggf8r2a5z8hkznyjpa131j";
           libraryHaskellDepends = [ base haskell-src-meta template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "String interpolation done right";
           license = stdenv.lib.licenses.mit;
         }) {};
      "interpolatedstring-perl6" = callPackage
        ({ mkDerivation, base, bytestring, haskell-src-meta, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "interpolatedstring-perl6";
           version = "1.0.0";
           sha256 = "65e0b2ad2d7482755570637212417b84d1db3bcc3cd1aa348b6b37f57911a1d3";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring haskell-src-meta template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           description = "QuasiQuoter for Perl6-style multi-line interpolated strings";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "intervals" = callPackage
        ({ mkDerivation, array, base, distributive, ghc-prim, stdenv }:
         mkDerivation {
           pname = "intervals";
           version = "0.7.2";
           sha256 = "0dd04a7dfd0ac6b364c66b78dafa48739c5116253078d4023e104f5e99d5fe28";
           libraryHaskellDepends = [ array base distributive ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/intervals";
           description = "Interval Arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "invariant" = callPackage
        ({ mkDerivation, array, base, bifunctors, containers, contravariant
         , ghc-prim, profunctors, semigroups, StateVar, stdenv, stm, tagged
         , template-haskell, transformers, transformers-compat
         , unordered-containers
         }:
         mkDerivation {
           pname = "invariant";
           version = "0.3.1";
           sha256 = "db88ce3955ba99cec99dd1da2d917ce26c204837a6779712dd55f79cc873fdff";
           libraryHaskellDepends = [
             array base bifunctors containers contravariant ghc-prim profunctors
             semigroups StateVar stm tagged template-haskell transformers
             transformers-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nfrisby/invariant-functors";
           description = "Haskell 98 invariant functors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-choice" = callPackage
        ({ mkDerivation, base, lifted-base, monad-control, stdenv
         , template-haskell, transformers, transformers-base
         }:
         mkDerivation {
           pname = "io-choice";
           version = "0.0.6";
           sha256 = "612b281110d18615000704f24fdb54a3b4401f7a39dcfe358433d7b4c22e1cef";
           libraryHaskellDepends = [
             base lifted-base monad-control template-haskell transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "Choice for IO and lifted IO";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-machine" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "io-machine";
           version = "0.2.0.0";
           sha256 = "05dcc8d5fcbb6f0d7f3519488ebf743eaa776bc93c2f8b0d4bbd866ac1331ccb";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoshikuniJujo/io-machine#readme";
           description = "Easy I/O model to learn IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-manager" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "io-manager";
           version = "0.1.0.2";
           sha256 = "bf0aa7740a8aaf31fc4f2570a47957365ae7d9248edd309e694053f1cd804138";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Skeleton library around the IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-memoize" = callPackage
        ({ mkDerivation, async, base, stdenv }:
         mkDerivation {
           pname = "io-memoize";
           version = "1.1.1.0";
           sha256 = "c753a1b1a2fb286bf608d6467e6e7599cde8e641c619885197f298bf1b2f483d";
           libraryHaskellDepends = [ async base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/io-memoize";
           description = "Memoize IO actions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-region" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "io-region";
           version = "0.1.1";
           sha256 = "ee303f66c2b3d33fae877b0dbb7c64624109fc759dffa669ca182e387f1015f1";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/io-region/wiki";
           description = "Exception safe resource management with dynamic regions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-storage" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "io-storage";
           version = "0.3";
           sha256 = "9a0df5cc7ff2eeef11e29e1362fea284f535bc2fe67469bba6dbc41c4f5b49bd";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/willdonnelly/io-storage";
           description = "A key-value store in the IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-streams" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, bytestring-builder
         , network, primitive, process, stdenv, text, time, transformers
         , vector, zlib-bindings
         }:
         mkDerivation {
           pname = "io-streams";
           version = "1.3.5.0";
           sha256 = "6c27d7ef3c5e06f4dd3aac33d5f2354b9778455473ab314a0b58dec4794ecae0";
           configureFlags = [ "-fNoInteractiveTests" ];
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-builder network primitive
             process text time transformers vector zlib-bindings
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple, composable, and easy-to-use stream I/O";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ip6addr" = callPackage
        ({ mkDerivation, base, cmdargs, IPv6Addr, stdenv, text }:
         mkDerivation {
           pname = "ip6addr";
           version = "0.5.1.4";
           sha256 = "fe5f93753026cc82123cbf626473d9353c94d8f681e90771b63dfebdd2f1f2f8";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base cmdargs IPv6Addr text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/ip6addr";
           description = "Commandline tool to generate IPv6 address text representations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iproute" = callPackage
        ({ mkDerivation, appar, base, byteorder, containers, network
         , stdenv
         }:
         mkDerivation {
           pname = "iproute";
           version = "1.7.1";
           sha256 = "57b8d03ca8ce92f8ec1334564f3edff53a0621ccbc43c00ba02eaa5007ee3eee";
           libraryHaskellDepends = [
             appar base byteorder containers network
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.mew.org/~kazu/proj/iproute/";
           description = "IP Routing Table";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ipython-kernel" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cereal, containers
         , directory, filepath, mtl, process, SHA, stdenv, temporary, text
         , transformers, unordered-containers, uuid, zeromq4-haskell
         }:
         mkDerivation {
           pname = "ipython-kernel";
           version = "0.8.4.0";
           sha256 = "ac4c822836d5b2cecf7ac4c61fe32ed876b09d18bcbe44760a6096bcd7338264";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring cereal containers directory filepath mtl
             process SHA temporary text transformers unordered-containers uuid
             zeromq4-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/gibiansky/IHaskell";
           description = "A library for creating kernels for IPython frontends";
           license = stdenv.lib.licenses.mit;
         }) {};
      "irc" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv }:
         mkDerivation {
           pname = "irc";
           version = "0.6.1.0";
           sha256 = "3816ead4dfb32d61c03265e3a2a45053508cb27ca3132595773a27ef381637e1";
           libraryHaskellDepends = [ attoparsec base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "A small library for parsing IRC messages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "irc-client" = callPackage
        ({ mkDerivation, base, bytestring, conduit, data-default-class
         , irc-conduit, irc-ctcp, old-locale, stdenv, stm, stm-conduit, text
         , time, transformers
         }:
         mkDerivation {
           pname = "irc-client";
           version = "0.3.0.0";
           sha256 = "ddc97ede9d741130d9ee0ff5128550ae9a5f6f4a04f4cb3b0d5c05c887314e0c";
           libraryHaskellDepends = [
             base bytestring conduit data-default-class irc-conduit irc-ctcp
             old-locale stm stm-conduit text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/irc-client";
           description = "An IRC client library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "irc-conduit" = callPackage
        ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
         , connection, irc, irc-ctcp, network-conduit-tls, stdenv, text
         , time, tls, transformers, x509-validation
         }:
         mkDerivation {
           pname = "irc-conduit";
           version = "0.1.2.0";
           sha256 = "77aea49a8efdbd8dc405d8a9ed4afddb11c906136bd3c8ec3bd32e981d0a84d7";
           libraryHaskellDepends = [
             async base bytestring conduit conduit-extra connection irc irc-ctcp
             network-conduit-tls text time tls transformers x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/irc-conduit";
           description = "Streaming IRC message library using conduits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "irc-ctcp" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "irc-ctcp";
           version = "0.1.3.0";
           sha256 = "d67cd91a5521173565033777cea76636e4d2be6e6224f681392d9e726f4bb79a";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/irc-ctcp";
           description = "A CTCP encoding and decoding library for IRC clients";
           license = stdenv.lib.licenses.mit;
         }) {};
      "irc-dcc" = callPackage
        ({ mkDerivation, attoparsec, base, binary, bytestring, errors
         , io-streams, iproute, irc-ctcp, network, path, stdenv
         , transformers, utf8-string
         }:
         mkDerivation {
           pname = "irc-dcc";
           version = "1.2.1";
           sha256 = "b348e0b921c27e2f29188b5604e0185cec9b0f0da36e24cad920ec1a33f5c512";
           revision = "1";
           editedCabalFile = "0sz7lh29g5z8mdvmlh7nva1kjqvjba0idjalr332z1l7gksvn9yg";
           libraryHaskellDepends = [
             attoparsec base binary bytestring errors io-streams iproute
             irc-ctcp network path transformers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/JanGe/irc-dcc";
           description = "A DCC message parsing and helper library for IRC clients";
           license = stdenv.lib.licenses.mit;
         }) {};
      "islink" = callPackage
        ({ mkDerivation, base, stdenv, unordered-containers }:
         mkDerivation {
           pname = "islink";
           version = "0.1.0.0";
           sha256 = "cfbf9c1a6dc46327b7ed7bf9336e245a255626c9d04aeba3d887d90f26d2aed7";
           libraryHaskellDepends = [ base unordered-containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/islink";
           description = "Check if an HTML element is a link";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iso3166-country-codes" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "iso3166-country-codes";
           version = "0.20140203.7";
           sha256 = "3a9d48b3ccb6d0df6df9e41e3a58bfb1afa2c0ae702a9e33caacf1d2f3ccd5b1";
           revision = "1";
           editedCabalFile = "13s1rybq2fvaxavrk8wq8vg4wx3sga43qq3mxlqsas64ilkckfdg";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A datatype for ISO 3166 country codes";
           license = "LGPL";
         }) {};
      "iso639" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "iso639";
           version = "0.1.0.3";
           sha256 = "124b8322fabaedb4de3dbc39880b36d0eab0e28d5775954aadb6630bc0da25e8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/HugoDaniel/iso639";
           description = "ISO-639-1 language codes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iso8601-time" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "iso8601-time";
           version = "0.1.4";
           sha256 = "761d737ea0841ee8fd3660cfe20041e9458be8ab424de8b3b661bb249b930126";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/iso8601-time";
           description = "Convert to/from the ISO 8601 time format";
           license = stdenv.lib.licenses.mit;
         }) {};
      "iterable" = callPackage
        ({ mkDerivation, base, mtl, stdenv, tagged, template-haskell
         , vector
         }:
         mkDerivation {
           pname = "iterable";
           version = "3.0";
           sha256 = "6cd13d621144e937cc88acfed1663bd2e208dcbe54be4bad1f7b7279250a87a4";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base mtl tagged template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/BioHaskell/iterable";
           description = "API for hierarchical multilevel collections";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ix-shapable" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "ix-shapable";
           version = "0.1.0";
           sha256 = "5007ffb6a8a7bb490f962cedceed5ceb7c435126d09bc565441070cbfda79222";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           description = "Reshape multi-dimensional arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ixset" = callPackage
        ({ mkDerivation, base, containers, safecopy, stdenv, syb
         , syb-with-class, template-haskell
         }:
         mkDerivation {
           pname = "ixset";
           version = "1.0.7";
           sha256 = "2f0e5a581b1d3c5e4685da8b109b2089177632fe8931ae68f5973fba687b42d1";
           libraryHaskellDepends = [
             base containers safecopy syb syb-with-class template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://happstack.com";
           description = "Efficient relational queries on Haskell sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ixset-typed" = callPackage
        ({ mkDerivation, base, containers, deepseq, safecopy, stdenv, syb
         , template-haskell
         }:
         mkDerivation {
           pname = "ixset-typed";
           version = "0.3.1";
           sha256 = "b41863c89610460d8bd0879cf77fd9b010f85f662c7edc4c57e79ab6cd00b575";
           libraryHaskellDepends = [
             base containers deepseq safecopy syb template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Efficient relational queries on Haskell sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jmacro" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers
         , haskell-src-exts, haskell-src-meta, mtl, parseargs, parsec
         , regex-posix, safe, stdenv, syb, template-haskell, text
         , unordered-containers, vector, wl-pprint-text
         }:
         mkDerivation {
           pname = "jmacro";
           version = "0.6.14";
           sha256 = "acb9411ab79f192a4ae0cd67cb45abbacef19c7a59d3199db36348b015df9920";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers haskell-src-exts haskell-src-meta
             mtl parsec regex-posix safe syb template-haskell text
             unordered-containers vector wl-pprint-text
           ];
           executableHaskellDepends = [
             aeson base bytestring containers haskell-src-exts haskell-src-meta
             mtl parseargs parsec regex-posix safe syb template-haskell text
             unordered-containers vector wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           description = "QuasiQuotation library for programmatic generation of Javascript code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jmacro-rpc" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-html, bytestring
         , containers, contravariant, jmacro, mtl, scientific, split, stdenv
         , text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "jmacro-rpc";
           version = "0.3.2";
           sha256 = "a32f53b97bc84e79834df4c4630745c6b07ae46b45bc2ca2d43d91a38571c5d9";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-html bytestring containers
             contravariant jmacro mtl scientific split text unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/gershomb/jmacro";
           description = "JSON-RPC clients and servers using JMacro, and evented client-server Reactive Programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jmacro-rpc-happstack" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, bytestring, containers
         , happstack-server, jmacro, jmacro-rpc, mtl, stdenv
         }:
         mkDerivation {
           pname = "jmacro-rpc-happstack";
           version = "0.3.2";
           sha256 = "99cdee3c1a5bd4499acf8decb2e76af48e7da7ccba01d51b86f65ea92944b064";
           libraryHaskellDepends = [
             aeson base blaze-html bytestring containers happstack-server jmacro
             jmacro-rpc mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
           description = "Happstack backend for jmacro-rpc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jmacro-rpc-snap" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, jmacro
         , jmacro-rpc, mtl, snap-core, stdenv
         }:
         mkDerivation {
           pname = "jmacro-rpc-snap";
           version = "0.3";
           sha256 = "48aea4a4ba90532ca105b6b274060a47a1c509b8346e0db1b61365c2a9e8dfeb";
           libraryHaskellDepends = [
             aeson base bytestring containers jmacro jmacro-rpc mtl snap-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
           description = "Snap backend for jmacro-rpc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jose" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , bifunctors, byteable, bytestring, cryptonite, data-default-class
         , lens, memory, mtl, network-uri, QuickCheck, quickcheck-instances
         , safe, semigroups, stdenv, template-haskell, text, time
         , unordered-containers, vector, x509
         }:
         mkDerivation {
           pname = "jose";
           version = "0.4.0.3";
           sha256 = "742b8037e5cc9c427789196bd425594c3fb17768fb584c8434548415aa5e0f0a";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring bifunctors byteable
             bytestring cryptonite data-default-class lens memory mtl
             network-uri QuickCheck quickcheck-instances safe semigroups
             template-haskell text time unordered-containers vector x509
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/frasertweedale/hs-jose";
           description = "Javascript Object Signing and Encryption and JSON Web Token library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "jose-jwt" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cereal, containers
         , cryptonite, either, memory, mtl, stdenv, text, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "jose-jwt";
           version = "0.7.3";
           sha256 = "b405c3c35936fe5a44e44416e4689207d94eff808b10b9bae60840c1ff11b9f4";
           libraryHaskellDepends = [
             aeson base bytestring cereal containers cryptonite either memory
             mtl text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tekul/jose-jwt";
           description = "JSON Object Signing and Encryption Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "js-flot" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "js-flot";
           version = "0.8.3";
           sha256 = "1ba2f2a6b8d85da76c41f526c98903cbb107f8642e506c072c1e7e3c20fe5e7a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/js-flot#readme";
           description = "Obtain minified flot code";
           license = stdenv.lib.licenses.mit;
         }) {};
      "js-jquery" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "js-jquery";
           version = "1.12.4";
           sha256 = "6038b72113932bec21c89293fb5f7e23621d03e315596986d9feab34a159ffdb";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/js-jquery#readme";
           description = "Obtain minified jQuery code";
           license = stdenv.lib.licenses.mit;
         }) {};
      "jsaddle" = callPackage
        ({ mkDerivation, base, glib, gtk3, lens, stdenv, template-haskell
         , text, transformers, webkitgtk3, webkitgtk3-javascriptcore
         }:
         mkDerivation {
           pname = "jsaddle";
           version = "0.3.0.3";
           sha256 = "8dcb54c32c281409da90e7d155913bfae5da1a2f4c71b409f70290c5f5ba2c89";
           libraryHaskellDepends = [
             base glib gtk3 lens template-haskell text transformers webkitgtk3
             webkitgtk3-javascriptcore
           ];
           doHaddock = false;
           doCheck = false;
           description = "High level interface for webkit-javascriptcore";
           license = stdenv.lib.licenses.mit;
         }) {};
      "json" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, mtl, parsec
         , pretty, stdenv, syb, text
         }:
         mkDerivation {
           pname = "json";
           version = "0.9.1";
           sha256 = "96b57e4d167e45dc80aeff872a922ae9cdb953a1ded29ebbb51019b68f0085a2";
           libraryHaskellDepends = [
             array base bytestring containers mtl parsec pretty syb text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Support for serialising Haskell to and from JSON";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-autotype" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, filepath
         , GenericPretty, hashable, hflags, lens, mmap, mtl, pretty, process
         , scientific, stdenv, text, uniplate, unordered-containers, vector
         , yaml
         }:
         mkDerivation {
           pname = "json-autotype";
           version = "1.0.15";
           sha256 = "4552e903a49953d48a5f60fb8532b51c40f3061c39cc842d6282ab42f6bbe045";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers filepath GenericPretty hashable
             hflags lens mmap mtl pretty process scientific text uniplate
             unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base bytestring containers filepath GenericPretty hashable
             hflags lens mtl pretty process scientific text uniplate
             unordered-containers vector yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mgajda/json-autotype";
           description = "Automatic type declaration for JSON input data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-builder" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-textual, bytestring
         , containers, stdenv, text, unordered-containers, utf8-string
         , vector
         }:
         mkDerivation {
           pname = "json-builder";
           version = "0.3";
           sha256 = "b5ef217d5432e8e962fac45f5a266993a0ea26d29c2580b93d0c9988d7480b4d";
           revision = "1";
           editedCabalFile = "13cs8n3d0cc81lly3dxrq8k6wvxjyhkmhzghs51fzgahawb9kcww";
           libraryHaskellDepends = [
             base blaze-builder blaze-textual bytestring containers text
             unordered-containers utf8-string vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lpsmith/json-builder";
           description = "Data structure agnostic JSON serialization";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-schema" = callPackage
        ({ mkDerivation, aeson, base, containers, generic-aeson
         , generic-deriving, mtl, scientific, stdenv, text, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "json-schema";
           version = "0.7.4.1";
           sha256 = "560d6a17d6eab734f43d329e51967e3ed62f8df2a6fea4a92d06359fe77d7c96";
           revision = "16";
           editedCabalFile = "0mn7aj3rr4vpg99kcpvgq1qvdl28dx9yld2b9pb79wdva9x69c2h";
           libraryHaskellDepends = [
             aeson base containers generic-aeson generic-deriving mtl scientific
             text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Types and type classes for defining JSON schemas";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jwt" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, cryptonite
         , data-default, http-types, memory, network-uri, scientific
         , semigroups, stdenv, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "jwt";
           version = "0.7.2";
           sha256 = "17967413d21399596a236bc8169d9e030bb85e2b1c349c6e470543767cc20a31";
           revision = "1";
           editedCabalFile = "1q8h94yslw6k6zcjbwx94pnji8dcr2w5n1wzgzfb8hb78w2qr1dm";
           libraryHaskellDepends = [
             aeson base bytestring containers cryptonite data-default http-types
             memory network-uri scientific semigroups text time
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/ssaasen/haskell-jwt";
           description = "JSON Web Token (JWT) decoding and encoding";
           license = stdenv.lib.licenses.mit;
         }) {};
      "kan-extensions" = callPackage
        ({ mkDerivation, adjunctions, array, base, comonad, containers
         , contravariant, distributive, free, mtl, semigroupoids, stdenv
         , tagged, transformers
         }:
         mkDerivation {
           pname = "kan-extensions";
           version = "4.2.3";
           sha256 = "334f0edbbf08ebf93c9f7db5473086dcababc6a72d75fa9d8e43237f9b5adc47";
           libraryHaskellDepends = [
             adjunctions array base comonad containers contravariant
             distributive free mtl semigroupoids tagged transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/kan-extensions/";
           description = "Kan extensions, Kan lifts, various forms of the Yoneda lemma, and (co)density (co)monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kanji" = callPackage
        ({ mkDerivation, base, bytestring, containers, microlens, stdenv
         , text
         }:
         mkDerivation {
           pname = "kanji";
           version = "2.0.0";
           sha256 = "1547515b9f21d2b7ebd493770291d0a31905f957adb0a077b3846d935822053c";
           libraryHaskellDepends = [
             base bytestring containers microlens text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fosskers/nanq";
           description = "Perform 漢字検定 (Japan Kanji Aptitude Test) level analysis on Japanese Kanji";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "kansas-comet" = callPackage
        ({ mkDerivation, aeson, base, containers, data-default-class
         , scotty, stdenv, stm, text, time, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "kansas-comet";
           version = "0.4";
           sha256 = "1f1a4565f2e955b8947bafcb9611789b0ccdf9efdfed8aaa2a2aa162a07339e1";
           revision = "16";
           editedCabalFile = "1fnncjd9wjwrnl0247gizlvwklihjbfk21pad6a4mqnaa3li5672";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base containers data-default-class scotty stm text time
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ku-fpg/kansas-comet/";
           description = "A JavaScript push mechanism based on the comet idiom";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "katip" = callPackage
        ({ mkDerivation, aeson, auto-update, base, bytestring, containers
         , either, exceptions, hostname, microlens, microlens-th
         , monad-control, mtl, old-locale, resourcet, stdenv, string-conv
         , template-haskell, text, time, time-locale-compat, transformers
         , transformers-base, transformers-compat, unix
         , unordered-containers
         }:
         mkDerivation {
           pname = "katip";
           version = "0.2.0.0";
           sha256 = "bd947874e92da876603c1cbb3bc521e8f33cd08a59c2714d0e35e8dd15ad53b9";
           libraryHaskellDepends = [
             aeson auto-update base bytestring containers either exceptions
             hostname microlens microlens-th monad-control mtl old-locale
             resourcet string-conv template-haskell text time time-locale-compat
             transformers transformers-base transformers-compat unix
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Soostone/katip";
           description = "A structured logging framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "katip-elasticsearch" = callPackage
        ({ mkDerivation, aeson, async, base, bloodhound
         , enclosed-exceptions, exceptions, http-client, http-types, katip
         , retry, scientific, stdenv, stm, stm-chans, text, time
         , transformers, unordered-containers, uuid
         }:
         mkDerivation {
           pname = "katip-elasticsearch";
           version = "0.2.1.0";
           sha256 = "e00a3d10cf1b7ed9f2f4346c59a992bc5955d1da90d4cc93f9edacc56ccce984";
           libraryHaskellDepends = [
             aeson async base bloodhound enclosed-exceptions exceptions
             http-client http-types katip retry scientific stm stm-chans text
             time transformers unordered-containers uuid
           ];
           doHaddock = false;
           doCheck = false;
           description = "ElasticSearch scribe for the Katip logging framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kdt" = callPackage
        ({ mkDerivation, base, deepseq, deepseq-generics, heap, stdenv }:
         mkDerivation {
           pname = "kdt";
           version = "0.2.4";
           sha256 = "bc0f8f9ac0cb01466273171f47b627abe170d1130bd59657fb9198b4f9479f9a";
           libraryHaskellDepends = [ base deepseq deepseq-generics heap ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/giogadi/kdt";
           description = "Fast and flexible k-d trees for various types of point queries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "keter" = callPackage
        ({ mkDerivation, aeson, array, async, attoparsec, base
         , blaze-builder, bytestring, case-insensitive, conduit
         , conduit-extra, containers, data-default, directory, filepath
         , fsnotify, http-client, http-conduit, http-reverse-proxy
         , http-types, lifted-base, mtl, network, process, random
         , regex-tdfa, stdenv, stm, tar, template-haskell, text, time, tls
         , transformers, unix, unix-compat, unordered-containers, vector
         , wai, wai-app-static, wai-extra, warp, warp-tls, yaml, zlib
         }:
         mkDerivation {
           pname = "keter";
           version = "1.4.3.2";
           sha256 = "332c962cb73a5cf8213fb137b67e1ac8902a91489a5769ed990abf79a5374a8f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson array async attoparsec base blaze-builder bytestring
             case-insensitive conduit conduit-extra containers data-default
             directory filepath fsnotify http-client http-conduit
             http-reverse-proxy http-types lifted-base mtl network process
             random regex-tdfa stm tar template-haskell text time tls
             transformers unix unix-compat unordered-containers vector wai
             wai-app-static wai-extra warp warp-tls yaml zlib
           ];
           executableHaskellDepends = [ base data-default filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Web application deployment manager, focusing on Haskell web frameworks";
           license = stdenv.lib.licenses.mit;
         }) {};
      "keycode" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv }:
         mkDerivation {
           pname = "keycode";
           version = "0.2.2";
           sha256 = "56f9407cf182b01e5f0fda80f569ff629f37d894f75ef28b6b8af3024343d310";
           revision = "2";
           editedCabalFile = "0g19sjk2sh1w9ahn93dnvjkim4mqapq0plmdd37179qfgi49qnp8";
           libraryHaskellDepends = [ base containers ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/keycode";
           description = "Maps web browser keycodes to their corresponding keyboard keys";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "keys" = callPackage
        ({ mkDerivation, array, base, comonad, containers, free, hashable
         , semigroupoids, semigroups, stdenv, transformers
         , transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "keys";
           version = "3.11";
           sha256 = "0cf397b7e6eb8cda930a02118c0bf262f9ef80c5a2f91822238b7778042cc4b2";
           revision = "1";
           editedCabalFile = "1lyg4wyi7mkqvbfl9lvfln3j4vys47jih56zyjba7nx36kbw185i";
           libraryHaskellDepends = [
             array base comonad containers free hashable semigroupoids
             semigroups transformers transformers-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/keys/";
           description = "Keyed functors and containers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kmeans" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "kmeans";
           version = "0.1.3";
           sha256 = "3d9e24a12ce01354c2a731ee079144c3bea2c9f011ffd51db82e5c26da1a2c0b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "K-means clustering algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "knob" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, transformers }:
         mkDerivation {
           pname = "knob";
           version = "0.1.1";
           sha256 = "8c2c84cfa20f3a2d7ca0636d2b3f2822c62501358075bfa356eb964b803e1217";
           libraryHaskellDepends = [ base bytestring transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/knob/";
           description = "Memory-backed handles";
           license = stdenv.lib.licenses.mit;
         }) {};
      "koofr-client" = callPackage
        ({ mkDerivation, aeson, base, bytestring, filepath, http-client
         , http-client-tls, http-types, mtl, stdenv
         }:
         mkDerivation {
           pname = "koofr-client";
           version = "1.0.0.3";
           sha256 = "2ab6f0af8be4f1912ad06ad860db993f9c33c8f0206f87ff0b566b7dda54e7af";
           revision = "1";
           editedCabalFile = "0qaipcg9n93z0za2a8jy3mv73a3q2b1dv98v2g5wwcv1qx7rvvhv";
           libraryHaskellDepends = [
             aeson base bytestring filepath http-client http-client-tls
             http-types mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/edofic/koofr-api-hs";
           description = "Client to Koofr API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "kraken" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client
         , http-client-tls, mtl, stdenv
         }:
         mkDerivation {
           pname = "kraken";
           version = "0.0.3";
           sha256 = "4001e1c545155434985f7ca93b5d1bcc6a465c83c58d4bb41a60bbfe521b1e9d";
           revision = "2";
           editedCabalFile = "0w8w1frkx54ldyhxp09ddm2y1l7q72xfl1p6py7y6ywxnq23lr4h";
           libraryHaskellDepends = [
             aeson base bytestring http-client http-client-tls mtl
           ];
           doHaddock = false;
           doCheck = false;
           description = "Kraken.io API client";
           license = stdenv.lib.licenses.mit;
         }) {};
      "kure" = callPackage
        ({ mkDerivation, base, dlist, stdenv, transformers }:
         mkDerivation {
           pname = "kure";
           version = "2.16.12";
           sha256 = "4c3e7d60fc33254f80ee5535d4fb5b254c1f52ab5f8ea1105eafcb2e637025d9";
           revision = "2";
           editedCabalFile = "07x04clvlzl2wr20pmis52jfyw4fanyaq00zx76r2zn7zdcvysy3";
           libraryHaskellDepends = [ base dlist transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.ittc.ku.edu/csdl/fpg/software/kure.html";
           description = "Combinators for Strategic Programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lackey" = callPackage
        ({ mkDerivation, base, servant, servant-foreign, stdenv, text }:
         mkDerivation {
           pname = "lackey";
           version = "0.3.2";
           sha256 = "0da7478ee80d29eb96efaf8d3df9acc24f037b062c743a6c987765d00abf84e1";
           libraryHaskellDepends = [ base servant servant-foreign text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/lackey#readme";
           description = "Generate Ruby clients from Servant APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "lambdacube-compiler" = callPackage
        ({ mkDerivation, aeson, async, base, base64-bytestring, bytestring
         , containers, deepseq, directory, exceptions, filepath, JuicyPixels
         , lambdacube-ir, megaparsec, monad-control, mtl
         , optparse-applicative, patience, pretty-show, process, QuickCheck
         , stdenv, tasty, tasty-quickcheck, text, time, vect, vector
         , websockets, wl-pprint
         }:
         mkDerivation {
           pname = "lambdacube-compiler";
           version = "0.5.0.1";
           sha256 = "d84cefdf1d21e12e6d9ca92f314e35881e5b911630709e36971337dda32ad564";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base containers deepseq directory exceptions filepath
             lambdacube-ir megaparsec mtl pretty-show text vector wl-pprint
           ];
           executableHaskellDepends = [
             aeson async base base64-bytestring bytestring containers deepseq
             directory exceptions filepath JuicyPixels lambdacube-ir megaparsec
             monad-control mtl optparse-applicative patience pretty-show process
             QuickCheck tasty tasty-quickcheck text time vect vector websockets
             wl-pprint
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://lambdacube3d.com";
           description = "LambdaCube 3D is a DSL to program GPUs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lambdacube-gl" = callPackage
        ({ mkDerivation, base, bytestring, containers, JuicyPixels
         , lambdacube-ir, mtl, OpenGLRaw, stdenv, vector, vector-algorithms
         }:
         mkDerivation {
           pname = "lambdacube-gl";
           version = "0.5.1.2";
           sha256 = "2b71bfd829096f8ac59f4e37ebdf6d8bdc4c84bdfaa6cd2c83d5e41fd05ef9fe";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers JuicyPixels lambdacube-ir mtl OpenGLRaw
             vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://lambdacube3d.com";
           description = "OpenGL 3.3 Core Profile backend for LambdaCube 3D";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lambdacube-ir" = callPackage
        ({ mkDerivation, aeson, base, containers, mtl, stdenv, text, vector
         }:
         mkDerivation {
           pname = "lambdacube-ir";
           version = "0.3.0.1";
           sha256 = "1f28588141a7f2b5ac9847f2f35c8129e68273a3804748a71f06cd728fa001f7";
           libraryHaskellDepends = [ aeson base containers mtl text vector ];
           doHaddock = false;
           doCheck = false;
           description = "LambdaCube 3D intermediate representation of 3D graphics pipelines";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-c" = callPackage
        ({ mkDerivation, alex, array, base, bytestring, containers
         , directory, filepath, happy, pretty, process, stdenv, syb
         }:
         mkDerivation {
           pname = "language-c";
           version = "0.5.0";
           sha256 = "86d58bc017a7bba157fc4d5d0ab9e3a3d3f3a2f98bfe46b5b0d5d72a0f5d2222";
           libraryHaskellDepends = [
             array base bytestring containers directory filepath pretty process
             syb
           ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://visq.github.io/language-c/";
           description = "Analysis and generation of C code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-c-quote" = callPackage
        ({ mkDerivation, alex, array, base, bytestring, containers
         , exception-mtl, exception-transformers, filepath, happy
         , haskell-src-meta, mainland-pretty, mtl, srcloc, stdenv, syb
         , symbol, template-haskell
         }:
         mkDerivation {
           pname = "language-c-quote";
           version = "0.11.7.1";
           sha256 = "5583e92748e6b4cac01536bff86eb119e424e136e03bb3ea0d2db3217328f88c";
           revision = "1";
           editedCabalFile = "0pbd8yqdg0bkyg8rnm3dcc9zqzb3bgfynmcsk18x7ijc7w54s4wi";
           libraryHaskellDepends = [
             array base bytestring containers exception-mtl
             exception-transformers filepath haskell-src-meta mainland-pretty
             mtl srcloc syb symbol template-haskell
           ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.drexel.edu/~mainland/";
           description = "C/CUDA/OpenCL/Objective-C quasiquoting library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-ecmascript" = callPackage
        ({ mkDerivation, base, containers, data-default-class, Diff, mtl
         , parsec, QuickCheck, stdenv, template-haskell, testing-feat
         , uniplate, wl-pprint
         }:
         mkDerivation {
           pname = "language-ecmascript";
           version = "0.17.1.0";
           sha256 = "df1e3f0d3096d522f278c644d3efbedabee29e2babfdf9d497287550f017883e";
           revision = "2";
           editedCabalFile = "0wndi8w3nchzvsmqxy5pbxld4c18a0b3ncffqfail1dpa6i30my6";
           libraryHaskellDepends = [
             base containers data-default-class Diff mtl parsec QuickCheck
             template-haskell testing-feat uniplate wl-pprint
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jswebtools/language-ecmascript";
           description = "JavaScript parser and pretty-printer library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-glsl" = callPackage
        ({ mkDerivation, base, parsec, prettyclass, stdenv }:
         mkDerivation {
           pname = "language-glsl";
           version = "0.2.0";
           sha256 = "236348543fb992e7cc563f80e1118ba942527ad295eba1a9466a30165cfcaef2";
           revision = "1";
           editedCabalFile = "0jfhljhmi53rilhz7yqv3xw10fssdcw5iir1ricl3fnzx5jimqbf";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base parsec prettyclass ];
           executableHaskellDepends = [ base parsec prettyclass ];
           doHaddock = false;
           doCheck = false;
           description = "GLSL abstract syntax tree, parser, and pretty-printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-haskell-extract" = callPackage
        ({ mkDerivation, base, regex-posix, stdenv, template-haskell }:
         mkDerivation {
           pname = "language-haskell-extract";
           version = "0.2.4";
           sha256 = "14da16e56665bf971723e0c5fd06dbb7cc30b4918cf8fb5748570785ded1acdb";
           libraryHaskellDepends = [ base regex-posix template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/finnsson/template-helper";
           description = "Module to automatically extract functions from the local code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-java" = callPackage
        ({ mkDerivation, alex, array, base, cpphs, parsec, pretty, stdenv
         }:
         mkDerivation {
           pname = "language-java";
           version = "0.2.8";
           sha256 = "0b789e089e4b18bf6248c2a1a9f3eff23cc19548899899f912597a1c33e9c367";
           libraryHaskellDepends = [ array base cpphs parsec pretty ];
           libraryToolDepends = [ alex ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/language-java";
           description = "Manipulating Java source: abstract syntax, lexer, parser, and pretty-printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-javascript" = callPackage
        ({ mkDerivation, alex, array, base, blaze-builder, bytestring
         , containers, happy, mtl, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "language-javascript";
           version = "0.6.0.9";
           sha256 = "a86b98d4fb8c27bbe54f7bedecde2acfea7e7d8e30a55434fd971b15238932cc";
           libraryHaskellDepends = [
             array base blaze-builder bytestring containers mtl text utf8-string
           ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/erikd/language-javascript";
           description = "Parser for JavaScript";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-lua2" = callPackage
        ({ mkDerivation, base, containers, Earley, lexer-applicative
         , microlens, regex-applicative, semigroups, srcloc, stdenv
         , transformers, unordered-containers, wl-pprint
         }:
         mkDerivation {
           pname = "language-lua2";
           version = "0.1.0.5";
           sha256 = "4f24d7b015dbe1c7e9d1ead835ce426223531b8b6f408ee97b3d18904424393d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers Earley lexer-applicative microlens
             regex-applicative semigroups srcloc transformers
             unordered-containers wl-pprint
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mitchellwrosen/language-lua2";
           description = "Lua parser and pretty printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-nix" = callPackage
        ({ mkDerivation, base, base-compat, Cabal, deepseq, lens, pretty
         , QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "language-nix";
           version = "2.1.0.1";
           sha256 = "f0147300724ac39ce388cd6cd717ac3ccc6ed1884ffaafebb18d0f3021e01acf";
           revision = "1";
           editedCabalFile = "1zv12p4ralrks0517zs52rzmzmsxxkcxkqz7zijfgcsvh6bsmafi";
           libraryHaskellDepends = [
             base base-compat Cabal deepseq lens pretty QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/language-nix#readme";
           description = "Data types and useful functions to represent and manipulate the Nix language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-thrift" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, containers, megaparsec
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "language-thrift";
           version = "0.8.0.2";
           sha256 = "383859c724d519f54e86b275496a96877cf9aa3a81c81636ede09a4084c62e8d";
           libraryHaskellDepends = [
             ansi-wl-pprint base containers megaparsec text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/abhinav/language-thrift#readme";
           description = "Parser and pretty printer for the Thrift IDL format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "largeword" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "largeword";
           version = "1.2.5";
           sha256 = "00b3b06d846649bf404f52a725c88349a38bc8c810e16c99f3100c4e1e9d7d46";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/idontgetoutmuch/largeword";
           description = "Provides Word128, Word192 and Word256 and a way of producing other large words if required";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "latex-formulae-hakyll" = callPackage
        ({ mkDerivation, base, hakyll, latex-formulae-image
         , latex-formulae-pandoc, lrucache, pandoc-types, stdenv
         }:
         mkDerivation {
           pname = "latex-formulae-hakyll";
           version = "0.2.0.2";
           sha256 = "82723a7eac09864eed8349b9b4cbef6f2eb85bb80950b427121c525e3c39bb65";
           libraryHaskellDepends = [
             base hakyll latex-formulae-image latex-formulae-pandoc lrucache
             pandoc-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liamoc/latex-formulae#readme";
           description = "Use actual LaTeX to render formulae inside Hakyll pages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "latex-formulae-image" = callPackage
        ({ mkDerivation, base, directory, errors, filepath, JuicyPixels
         , process, stdenv, temporary, transformers
         }:
         mkDerivation {
           pname = "latex-formulae-image";
           version = "0.1.1.2";
           sha256 = "92f1fa3233eef7992a6fcae9fa240c6859e63ff09d7e89ca212017b974f29f0d";
           libraryHaskellDepends = [
             base directory errors filepath JuicyPixels process temporary
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/liamoc/latex-formulae#readme";
           description = "A library for rendering LaTeX formulae as images using an actual LaTeX installation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "latex-formulae-pandoc" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, directory
         , filepath, JuicyPixels, latex-formulae-image, pandoc-types, stdenv
         }:
         mkDerivation {
           pname = "latex-formulae-pandoc";
           version = "0.2.0.4";
           sha256 = "76013ba9f4b9f1631ac347c026799b4a70bcb3b8a6e07038218befc5d0ec8332";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base64-bytestring bytestring directory filepath JuicyPixels
             latex-formulae-image pandoc-types
           ];
           executableHaskellDepends = [
             base latex-formulae-image pandoc-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/liamoc/latex-formulae#readme";
           description = "Render LaTeX formulae in pandoc documents to images with an actual LaTeX installation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lattices" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, semigroups
         , stdenv, tagged, universe-base, universe-reverse-instances
         , unordered-containers, void
         }:
         mkDerivation {
           pname = "lattices";
           version = "1.5.0";
           sha256 = "c6e3fb4334503b9087209195f40c96f56819497f999959358a2ff5d843a45d1f";
           revision = "1";
           editedCabalFile = "04l5x09f48vdkljzl79g2cybbm5wdxa0bf4xvlwdkcbky9h0qvan";
           libraryHaskellDepends = [
             base containers deepseq hashable semigroups tagged universe-base
             universe-reverse-instances unordered-containers void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/phadej/lattices/";
           description = "Fine-grained library for constructing and manipulating lattices";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lazy-csv" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "lazy-csv";
           version = "0.5.1";
           sha256 = "888bcbdd43886099f197c1c246cea324c97c076d4839e97eea0b8d6d7b49649f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring ];
           executableHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/lazy-csv";
           description = "Efficient lazy parsers for CSV (comma-separated values)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lca" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "lca";
           version = "0.3";
           sha256 = "ea4f35072f7b1b217cb0d65493afd8e8449017c7062afe092768ed1219982e20";
           revision = "1";
           editedCabalFile = "0cjv1nm1ja6xswr4gjpaqjxpli2zncbbbfpddfrm2kjiphy21j2p";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/lca/";
           description = "O(log n) persistent on-line lowest common ancestor calculation without preprocessing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "leksah-server" = callPackage
        ({ mkDerivation, attoparsec, base, bin-package-db, binary
         , binary-shared, bytestring, Cabal, conduit, conduit-extra
         , containers, deepseq, directory, executable-path, filepath, ghc
         , haddock-api, haddock-library, hslogger, HTTP, ltk, network
         , network-uri, parsec, pretty, process, resourcet, stdenv, strict
         , text, time, transformers, unix
         }:
         mkDerivation {
           pname = "leksah-server";
           version = "0.15.2.0";
           sha256 = "62a6a781f60822273592f34b08da46afba214a337befb92764a08f54e2355241";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bin-package-db binary binary-shared bytestring
             Cabal conduit conduit-extra containers deepseq directory
             executable-path filepath ghc haddock-api haddock-library hslogger
             HTTP ltk network network-uri parsec pretty process resourcet strict
             text time transformers unix
           ];
           executableHaskellDepends = [
             attoparsec base bin-package-db binary binary-shared bytestring
             Cabal conduit conduit-extra containers deepseq directory
             executable-path filepath ghc haddock-api haddock-library hslogger
             HTTP ltk network network-uri parsec pretty process resourcet strict
             text time transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://leksah.org";
           description = "Metadata collection for leksah";
           license = "GPL";
         }) {};
      "lens" = callPackage
        ({ mkDerivation, array, base, base-orphans, bifunctors, bytestring
         , comonad, containers, contravariant, distributive, exceptions
         , filepath, free, ghc-prim, hashable, kan-extensions, mtl, parallel
         , profunctors, reflection, semigroupoids, semigroups, stdenv
         , tagged, template-haskell, text, transformers, transformers-compat
         , unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "lens";
           version = "4.13";
           sha256 = "3556e7bf69d13fca0e73c5e429c8d25a876931c24ae5aa1f4755acac67078f3c";
           revision = "2";
           editedCabalFile = "1h8ldism5d3dcviiici8gpa73fhpjbwnkfmrmz8lrc32vbrz5siq";
           libraryHaskellDepends = [
             array base base-orphans bifunctors bytestring comonad containers
             contravariant distributive exceptions filepath free ghc-prim
             hashable kan-extensions mtl parallel profunctors reflection
             semigroupoids semigroups tagged template-haskell text transformers
             transformers-compat unordered-containers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/lens/";
           description = "Lenses, Folds and Traversals";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-action" = callPackage
        ({ mkDerivation, base, comonad, contravariant, lens, mtl
         , profunctors, semigroupoids, semigroups, stdenv, transformers
         }:
         mkDerivation {
           pname = "lens-action";
           version = "0.2.0.2";
           sha256 = "e26c70b2de68a7cfbce97bcdabdcdfb45b2c50708207a14f8dd24c3e29c6d371";
           revision = "2";
           editedCabalFile = "1z0bgv6zvxhhcamv4pnwi8lldps38qx0jjmq3h5703nfiikqrwgj";
           libraryHaskellDepends = [
             base comonad contravariant lens mtl profunctors semigroupoids
             semigroups transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/lens-action/";
           description = "Monadic Getters and Folds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-aeson" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, lens
         , scientific, stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "lens-aeson";
           version = "1.0.0.5";
           sha256 = "65faad5b75852209b4c6df43ae1f7460c2b94bf3bbc10b5cd529f43c743a5d9f";
           revision = "5";
           editedCabalFile = "1dzd2z5sb7sf5kgijm6lkxzbxhia761xfw5blpwfqp444q8dsi34";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring lens scientific text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lens/lens-aeson/";
           description = "Law-abiding lenses for aeson";
           license = stdenv.lib.licenses.mit;
         }) {};
      "lens-datetime" = callPackage
        ({ mkDerivation, base, lens, stdenv, time }:
         mkDerivation {
           pname = "lens-datetime";
           version = "0.3";
           sha256 = "bb1f8d7bf71c9ef8901bc39e2a2d629b1101307115c0c4d844fcbd8e86b6ccd4";
           libraryHaskellDepends = [ base lens time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nilcons/lens-datetime";
           description = "Lenses for Data.Time.* types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-family" = callPackage
        ({ mkDerivation, base, containers, lens-family-core, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "lens-family";
           version = "1.2.1";
           sha256 = "41838eba3fa063dc467bbcd70f9395c8429c08ecab2ff779d01b459222cd9ab7";
           libraryHaskellDepends = [
             base containers lens-family-core mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Lens Families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-family-core" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "lens-family-core";
           version = "1.2.1";
           sha256 = "95e3b9876a6cdcc6865bfad22e04af41430c7a9a6bc96e9a25a2a35a841d19a4";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell 98 Lens Families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-family-th" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "lens-family-th";
           version = "0.4.1.0";
           sha256 = "754fdc4c7c292b160a87974ec3690b755fb93f3877c8080d331cfa6ec4b39e20";
           revision = "2";
           editedCabalFile = "0simbh9r9gjb375slxpbnlxfj594fm5k1gh33k4x23i5vjg1934p";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/DanBurton/lens-family-th#readme";
           description = "Generate lens-family style lenses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-regex" = callPackage
        ({ mkDerivation, array, base, lens, regex-base, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "lens-regex";
           version = "0.1.0";
           sha256 = "4954b3ae395661e916c536bfe837c42a1cd8223ea81ffd86b1fdd9b6abfc5142";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base lens regex-base template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/himura/lens-regex";
           description = "Lens powered regular expression";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-simple" = callPackage
        ({ mkDerivation, base, lens-family, lens-family-core
         , lens-family-th, mtl, stdenv, transformers
         }:
         mkDerivation {
           pname = "lens-simple";
           version = "0.1.0.9";
           sha256 = "613d99b8074197f8a026a641a9940dd188e0d81e808169f420981a9ca15b832a";
           libraryHaskellDepends = [
             base lens-family lens-family-core lens-family-th mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michaelt/lens-simple";
           description = "simplified import of elementary lens-family combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lentil" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, csv, directory, filemanip
         , filepath, natural-sort, optparse-applicative, parsec, regex-tdfa
         , stdenv
         }:
         mkDerivation {
           pname = "lentil";
           version = "0.1.12.0";
           sha256 = "a49c806f024ba30197a85f043c84d8ad1ca5aaca3b6d96ebb8727a4e438380fb";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             ansi-wl-pprint base csv directory filemanip filepath natural-sort
             optparse-applicative parsec regex-tdfa
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.ariis.it/static/articles/lentil/page.html";
           description = "frugal issue tracker";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "leveldb-haskell" = callPackage
        ({ mkDerivation, base, bytestring, data-default, exceptions
         , filepath, leveldb, resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "leveldb-haskell";
           version = "0.6.4";
           sha256 = "25a8f9c2cdd5a32423389173a6323bd804689f69aee1082c57887ea74ead1b04";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring data-default exceptions filepath resourcet
             transformers
           ];
           librarySystemDepends = [ leveldb ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/kim/leveldb-haskell";
           description = "Haskell bindings to LevelDB";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) leveldb;};
      "lexer-applicative" = callPackage
        ({ mkDerivation, base, regex-applicative, srcloc, stdenv }:
         mkDerivation {
           pname = "lexer-applicative";
           version = "2.1.0.1";
           sha256 = "3e9612800e7d70f997e0d3396628b91133568b9e85e2c160834d1eb96acca49c";
           libraryHaskellDepends = [ base regex-applicative srcloc ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/lexer-applicative";
           description = "Simple lexer based on applicative regular expressions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "lhs2tex" = callPackage
        ({ mkDerivation, base, directory, filepath, mtl, process
         , regex-compat, stdenv
         }:
         mkDerivation {
           pname = "lhs2tex";
           version = "1.19";
           sha256 = "24ae0557d95673e0c6d9b0aca829181b734359880dd58802ac154b89f384b00e";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base directory filepath mtl process regex-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.andres-loeh.de/lhs2tex/";
           description = "Preprocessor for typesetting Haskell sources with LaTeX";
           license = "GPL";
         }) {};
      "libgit" = callPackage
        ({ mkDerivation, base, mtl, process, stdenv }:
         mkDerivation {
           pname = "libgit";
           version = "0.3.1";
           sha256 = "1d4c60dd987c363d77c4be947678d01a51ab4b568964c30a33827ccc854f7522";
           libraryHaskellDepends = [ base mtl process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-libgit";
           description = "Simple Git Wrapper";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "libinfluxdb" = callPackage
        ({ mkDerivation, base, bytestring, clock, containers, http-client
         , http-client-tls, http-types, resource-pool, stdenv, stm, text
         }:
         mkDerivation {
           pname = "libinfluxdb";
           version = "0.0.4";
           sha256 = "25b5bbc274c9e18bc46ea0271805adfcaaec6d46caa69eb465e0cbc03f63ef3f";
           revision = "1";
           editedCabalFile = "17ddlql04hgah7pr0zi8zvpza17ig7a0m27wr2c47gdzy7k0nr2v";
           libraryHaskellDepends = [
             base bytestring clock containers http-client http-client-tls
             http-types resource-pool stm text
           ];
           doHaddock = false;
           doCheck = false;
           description = "libinfluxdb";
           license = stdenv.lib.licenses.mit;
         }) {};
      "libnotify" = callPackage
        ({ mkDerivation, base, bytestring, glib, gtk, libnotify, stdenv }:
         mkDerivation {
           pname = "libnotify";
           version = "0.1.1.0";
           sha256 = "206ff7bb29530cd1cfabd417a9ae1aa38bf9f1a834a0f8db914d3d45c24e81f1";
           libraryHaskellDepends = [ base bytestring glib gtk ];
           librarySystemDepends = [ libnotify ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to libnotify library";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) libnotify;};
      "librato" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, either
         , http-client, http-conduit, http-types, mtl, resourcet, stdenv
         , text, unordered-containers, uri-templater, vector
         }:
         mkDerivation {
           pname = "librato";
           version = "0.2.0.1";
           sha256 = "e42365b06c6ee5d99742801330950a8e6fcb747974954f2f7dc3940dfa4418d0";
           revision = "1";
           editedCabalFile = "06md1545pfywdd3ggm6ss9lk8fzph1psl9jip3gp0qsxmv3diyix";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring either http-client http-conduit
             http-types mtl resourcet text unordered-containers uri-templater
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/SaneTracker/librato";
           description = "Bindings to the Librato API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "libsystemd-journal" = callPackage
        ({ mkDerivation, base, bytestring, hashable, hsyslog, pipes
         , pipes-safe, stdenv, systemd, text, transformers, uniplate
         , unix-bytestring, unordered-containers, uuid, vector
         }:
         mkDerivation {
           pname = "libsystemd-journal";
           version = "1.4.1";
           sha256 = "6d23d1a7ba6cf2bb014955ce13b482f422f75264185b86323dc100aa288e3a1b";
           revision = "1";
           editedCabalFile = "0g4km425r803skih1a2r1wsmmhkw7nqr9sl080m82g8pyck5wxsw";
           libraryHaskellDepends = [
             base bytestring hashable hsyslog pipes pipes-safe text transformers
             uniplate unix-bytestring unordered-containers uuid vector
           ];
           libraryPkgconfigDepends = [ systemd ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/libsystemd-journal";
           description = "Haskell bindings to libsystemd-journal";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) systemd;};
      "libxml-sax" = callPackage
        ({ mkDerivation, base, bytestring, libxml2, stdenv, text, xml-types
         }:
         mkDerivation {
           pname = "libxml-sax";
           version = "0.7.5";
           sha256 = "99141784cc0d6c5749f0df618b2d46922391eede09f4f9ccfc36fb58a9c16d51";
           libraryHaskellDepends = [ base bytestring text xml-types ];
           librarySystemDepends = [ libxml2 ];
           libraryPkgconfigDepends = [ libxml2 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-libxml/";
           description = "Bindings for the libXML2 SAX interface";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) libxml2;};
      "lift-generics" = callPackage
        ({ mkDerivation, base, generic-deriving, ghc-prim, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "lift-generics";
           version = "0.1.1";
           sha256 = "07cf2cc4416fb7b0e45595da8a964459498da976e18cdcc169ac2416143930cb";
           revision = "1";
           editedCabalFile = "03vpmdgarz41zx1q51a4bx3x3qfvs7wfnqym8xiv4i9sxdr82yy8";
           libraryHaskellDepends = [
             base generic-deriving ghc-prim template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/lift-generics";
           description = "GHC.Generics-based Language.Haskell.TH.Syntax.lift implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lifted-async" = callPackage
        ({ mkDerivation, async, base, constraints, lifted-base
         , monad-control, stdenv, transformers-base
         }:
         mkDerivation {
           pname = "lifted-async";
           version = "0.9.0";
           sha256 = "3930922419084557d8b78ad3c7202efbb599d35539adb564c2d11a6699e3d601";
           libraryHaskellDepends = [
             async base constraints lifted-base monad-control transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/maoe/lifted-async";
           description = "Run lifted IO operations asynchronously and wait for their results";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lifted-base" = callPackage
        ({ mkDerivation, base, monad-control, stdenv, transformers-base }:
         mkDerivation {
           pname = "lifted-base";
           version = "0.2.3.8";
           sha256 = "1605df810bc941951522d0cd1b777ff1d62dac6628aabed165a49b848f25df9f";
           libraryHaskellDepends = [ base monad-control transformers-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/lifted-base";
           description = "lifted IO operations from the base library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linear" = callPackage
        ({ mkDerivation, adjunctions, base, base-orphans, binary, bytes
         , cereal, containers, deepseq, distributive, ghc-prim, hashable
         , lens, reflection, semigroupoids, semigroups, stdenv, tagged
         , template-haskell, transformers, transformers-compat
         , unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "linear";
           version = "1.20.5";
           sha256 = "61d8b7242f1e7c27925df7ffe1aa8b1fd732e61598f3af48b9999d8fb464cc0d";
           revision = "2";
           editedCabalFile = "0fi7viyj3r9gri7wsnd4lvdnyrzpincknh10jgag540v7ff6aqcv";
           libraryHaskellDepends = [
             adjunctions base base-orphans binary bytes cereal containers
             deepseq distributive ghc-prim hashable lens reflection
             semigroupoids semigroups tagged template-haskell transformers
             transformers-compat unordered-containers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/linear/";
           description = "Linear Algebra";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linear-accelerate" = callPackage
        ({ mkDerivation, accelerate, base, lens, linear, stdenv }:
         mkDerivation {
           pname = "linear-accelerate";
           version = "0.2";
           sha256 = "e62ad99a2f2366c457a75eecba34c0fe8036ecf3f60d59ad41936b26f8af6310";
           libraryHaskellDepends = [ accelerate base lens linear ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/linear-accelerate/";
           description = "Instances to use linear vector spaces on accelerate backends";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linux-file-extents" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "linux-file-extents";
           version = "0.2.0.0";
           sha256 = "6c7cd9e700f666f774736d31a0e6aa7bfe9bd1e075c11eed701ba95095fd9bd0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/linux-file-extents";
           description = "Retrieve file fragmentation information under Linux";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linux-namespaces" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "linux-namespaces";
           version = "0.1.2.0";
           sha256 = "585c69130dfcc499cfba00385ae7facc8ab9f2c26bdf746a6e25fc96d3b5f67b";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/hs-linux-namespaces";
           description = "Create new or enter an existing linux namespaces";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "list-fusion-probe" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "list-fusion-probe";
           version = "0.1.0.6";
           sha256 = "7682145460eb6a18406743e74710acbefda2b836e82f73a8d46aab48d5baa6b1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "testing list fusion for success";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "list-prompt" = callPackage
        ({ mkDerivation, ansi-terminal, base, data-default, stdenv, stm
         , terminal-size, vty
         }:
         mkDerivation {
           pname = "list-prompt";
           version = "0.1.1.0";
           sha256 = "c7323c7a802940deba1a7be46265fd8c01f548174d5f08923a607e1730ca4dee";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base data-default stm terminal-size vty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/list-prompt.git";
           description = "A simple list prompt UI for the terminal";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "list-t" = callPackage
        ({ mkDerivation, base, base-prelude, mmorph, monad-control, mtl
         , stdenv, transformers, transformers-base
         }:
         mkDerivation {
           pname = "list-t";
           version = "0.4.7";
           sha256 = "6b5900d4570bef59b5ebdc25317a032314f738adacc742d19d9c5078bb48a6c9";
           revision = "1";
           editedCabalFile = "0qrpcj4ng3bl5vr9d6x0x6xw3pgiq6f1pq7cxmsl7p7syhvpi485";
           libraryHaskellDepends = [
             base base-prelude mmorph monad-control mtl transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/list-t";
           description = "ListT done right";
           license = stdenv.lib.licenses.mit;
         }) {};
      "load-env" = callPackage
        ({ mkDerivation, base, directory, parsec, stdenv }:
         mkDerivation {
           pname = "load-env";
           version = "0.1.1";
           sha256 = "8fe39c08a7f58f94732776b211a884834ada6d9f8cf560e6b7ec9a74e9edfd16";
           libraryHaskellDepends = [ base directory parsec ];
           doHaddock = false;
           doCheck = false;
           description = "Load environment variables from a file";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "loch-th" = callPackage
        ({ mkDerivation, base, pretty, stdenv, template-haskell }:
         mkDerivation {
           pname = "loch-th";
           version = "0.2.1";
           sha256 = "77541dcb8fb0ae2c7984fc704e53635dbec83974a172611339941bfc9f96d9cd";
           libraryHaskellDepends = [ base pretty template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liskin/loch-th";
           description = "Support for precise error locations in source files (Template Haskell version)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "log-domain" = callPackage
        ({ mkDerivation, base, binary, bytes, cereal, comonad, deepseq
         , distributive, hashable, hashable-extras, safecopy, semigroupoids
         , semigroups, stdenv, vector
         }:
         mkDerivation {
           pname = "log-domain";
           version = "0.10.3.1";
           sha256 = "36f427506218358b20a2066d5fb38406816fabac18ca26c807a416a795643815";
           revision = "2";
           editedCabalFile = "0vswf377xdplr6gai4jr493sjbx9yqgmr0nf2jqb87jm1jpx9h6m";
           libraryHaskellDepends = [
             base binary bytes cereal comonad deepseq distributive hashable
             hashable-extras safecopy semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/log-domain/";
           description = "Log-domain arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "logfloat" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "logfloat";
           version = "0.13.3.3";
           sha256 = "f774bd71d82ae053046ab602aa451ce4f65440d5c634dc8d950ae87f53527f82";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Log-domain floating point numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "logging-facade" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, transformers }:
         mkDerivation {
           pname = "logging-facade";
           version = "0.1.1";
           sha256 = "60f9f29d54e9756825400f281101872ed87de55271e87571068838a7b3d98da2";
           revision = "1";
           editedCabalFile = "1cm2q8l033w1bwi30mzsz0knr8pqxcb4f5c38594rdm96r9h12gw";
           libraryHaskellDepends = [ base template-haskell transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Simple logging abstraction that allows multiple back-ends";
           license = stdenv.lib.licenses.mit;
         }) {};
      "logict" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "logict";
           version = "0.6.0.2";
           sha256 = "1182b68e8d00279460c7fb9b8284bf129805c07754c678b2a8de5a6d768e161e";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~dolio/";
           description = "A backtracking logic-programming monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "loop" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "loop";
           version = "0.3.0";
           sha256 = "92962010bdab28cc0092dd3fe42819d6f215c717dd10d9349626d92a0d0b3ecf";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/loop";
           description = "Fast loops (for when GHC can't optimize forM_)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "lrucache" = callPackage
        ({ mkDerivation, base, containers, contravariant, stdenv }:
         mkDerivation {
           pname = "lrucache";
           version = "1.2.0.0";
           sha256 = "5f17a9e026e198152d13830a0eae0df21be437c238a3f157f7c188fe27a37616";
           libraryHaskellDepends = [ base containers contravariant ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/chowells79/lrucache";
           description = "a simple, pure LRU cache";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ltext" = callPackage
        ({ mkDerivation, aeson, base, containers, data-default, deepseq
         , directory, mtl, mtl-compat, optparse-applicative, parsec, pretty
         , stdenv, template-haskell, text, transformers, yaml
         }:
         mkDerivation {
           pname = "ltext";
           version = "0.0.2.1";
           sha256 = "2e0d10a71d59a59218f7e501fc53d6de05ee4e123c2e89bed2f12f4df34d2937";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers deepseq mtl mtl-compat parsec pretty
             template-haskell text transformers
           ];
           executableHaskellDepends = [
             aeson base containers data-default deepseq directory mtl mtl-compat
             optparse-applicative parsec pretty template-haskell text
             transformers yaml
           ];
           doHaddock = false;
           doCheck = false;
           description = "Higher-order file applicator";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ltk" = callPackage
        ({ mkDerivation, base, Cabal, containers, filepath, ghc, glib, gtk3
         , mtl, parsec, pretty, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "ltk";
           version = "0.15.0.5";
           sha256 = "44101ce43336e9746e295c14beda5cae1d2d4a9c67ca7d5ed1d51a90b3d8d1a2";
           libraryHaskellDepends = [
             base Cabal containers filepath ghc glib gtk3 mtl parsec pretty text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leksah.org";
           description = "Leksah tool kit";
           license = "GPL";
         }) {};
      "lucid" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , hashable, mmorph, mtl, semigroups, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "lucid";
           version = "2.9.7";
           sha256 = "a087af27ad196e3a41ccb6b954a12d384589a14b2ac55614e6a27817f65e0608";
           libraryHaskellDepends = [
             base blaze-builder bytestring containers hashable mmorph mtl
             semigroups text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/lucid";
           description = "Clear to write, read and edit DSL for HTML";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lucid-svg" = callPackage
        ({ mkDerivation, base, blaze-builder, lucid, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "lucid-svg";
           version = "0.6.0.1";
           sha256 = "a8cff758914de95defca5640a1f6c3ddf995078063fb8553da02249510db67cc";
           libraryHaskellDepends = [
             base blaze-builder lucid text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jeffreyrosenbluth/lucid-svg.git";
           description = "DSL for SVG using lucid for HTML";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "luminance" = callPackage
        ({ mkDerivation, base, containers, contravariant, dlist, gl, linear
         , mtl, resourcet, semigroups, stdenv, transformers, vector, void
         }:
         mkDerivation {
           pname = "luminance";
           version = "0.11.0.4";
           sha256 = "f34c1c4c00424a76710afc7090328f6624c3142b8154ba9847875ce18b37f9e4";
           libraryHaskellDepends = [
             base containers contravariant dlist gl linear mtl resourcet
             semigroups transformers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/luminance";
           description = "Type-safe, type-level and stateless graphics framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "luminance-samples" = callPackage
        ({ mkDerivation, base, contravariant, GLFW-b, JuicyPixels, linear
         , luminance, mtl, resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "luminance-samples";
           version = "0.11";
           sha256 = "78fbff7bd81b35cbfd8a66d3cb1e88fe3598266cfb3ab9364af6b77f8f2e78f9";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base contravariant GLFW-b JuicyPixels linear luminance mtl
             resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/luminance-samples";
           description = "Luminance samples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lzma" = callPackage
        ({ mkDerivation, base, bytestring, lzma, stdenv }:
         mkDerivation {
           pname = "lzma";
           version = "0.0.0.3";
           sha256 = "af8321c3511bde3e2745093fa3bd74c642e386db7d2e7c43b3a54814f1338144";
           revision = "2";
           editedCabalFile = "0c6jkr22w797jvmad9vki2mm7cdzxpqqxkpv836fh5m248nnc618";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ lzma ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/lzma";
           description = "LZMA/XZ compression and decompression";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) lzma;};
      "lzma-conduit" = callPackage
        ({ mkDerivation, base, bindings-DSL, bytestring, conduit, lzma
         , resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "lzma-conduit";
           version = "1.1.3.0";
           sha256 = "abf9e7a052a2bbd85923237a6fa7a73e7e077b20908ad3d68e6c24285aef390f";
           libraryHaskellDepends = [
             base bindings-DSL bytestring conduit resourcet transformers
           ];
           librarySystemDepends = [ lzma ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/alphaHeavy/lzma-conduit";
           description = "Conduit interface for lzma/xz compression";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) lzma;};
      "machines" = callPackage
        ({ mkDerivation, base, comonad, containers, free, mtl, pointed
         , profunctors, semigroups, stdenv, transformers, void
         }:
         mkDerivation {
           pname = "machines";
           version = "0.5.1";
           sha256 = "6229f4ff600fe2db87f43220d42089abd64dc0a0d959e15c5010a7ed81f7dbb7";
           revision = "1";
           editedCabalFile = "079dp8a30w53pcm5ik5qx6vsgir5g84xm9b9j59kamhvig65y3f5";
           libraryHaskellDepends = [
             base comonad containers free mtl pointed profunctors semigroups
             transformers void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/machines/";
           description = "Networked stream transducers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "machines-binary" = callPackage
        ({ mkDerivation, base, binary, bytestring, machines, stdenv }:
         mkDerivation {
           pname = "machines-binary";
           version = "0.3.0.3";
           sha256 = "60ff456d658ea1a427f32ee5ae1c726e2e7703942bd33edf28b457d753c20652";
           libraryHaskellDepends = [ base binary bytestring machines ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aloiscochard/machines-binary";
           description = "Binary utilities for the machines library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "machines-directory" = callPackage
        ({ mkDerivation, base, directory, filepath, machines, machines-io
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "machines-directory";
           version = "0.2.0.9";
           sha256 = "38e1e5874431f8cad71b3067bc16258e3dfa13b09bf9d8698d6e28d5e0fabf24";
           libraryHaskellDepends = [
             base directory filepath machines machines-io transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aloiscochard/machines-directory";
           description = "Directory (system) utilities for the machines library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "machines-io" = callPackage
        ({ mkDerivation, base, bytestring, chunked-data, machines, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "machines-io";
           version = "0.2.0.13";
           sha256 = "4d579d5e9e94fafcfca91322734263498999d2e2af45c40ff0d1db78f4a8f5d4";
           libraryHaskellDepends = [
             base bytestring chunked-data machines transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aloiscochard/machines-io";
           description = "IO utilities for the machines library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "machines-process" = callPackage
        ({ mkDerivation, base, chunked-data, machines, machines-io, process
         , stdenv
         }:
         mkDerivation {
           pname = "machines-process";
           version = "0.2.0.8";
           sha256 = "7a159328a70756acc36940a3f3f5430187ecf7a4d4f01b2b92b119d3e14ffa2d";
           libraryHaskellDepends = [
             base chunked-data machines machines-io process
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aloiscochard/machines-process";
           description = "Process (system) utilities for the machines library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "magic" = callPackage
        ({ mkDerivation, base, file, stdenv }:
         mkDerivation {
           pname = "magic";
           version = "1.1";
           sha256 = "b21c3b69f57b64199c1d7be0ac8ea1d02d698be59943058f6a2d642ea57ce082";
           libraryHaskellDepends = [ base ];
           librarySystemDepends = [ file ];
           doHaddock = false;
           doCheck = false;
           description = "Interface to C file/magic library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) file;};
      "mainland-pretty" = callPackage
        ({ mkDerivation, base, containers, srcloc, stdenv, text }:
         mkDerivation {
           pname = "mainland-pretty";
           version = "0.4.1.4";
           sha256 = "b6526b119dd84e006740c69ab794d0a43b855fea29bb2a3a8ed2568b995faf9c";
           libraryHaskellDepends = [ base containers srcloc text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.drexel.edu/~mainland/";
           description = "Pretty printing designed for printing source code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "managed" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "managed";
           version = "1.0.5";
           sha256 = "b9c99943dadaa730ea3d889a09c3ca0efa1b7728f2bb0854815d49f40d4772e0";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A monad for managed values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mandrill" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, blaze-html
         , bytestring, containers, email-validate, http-client
         , http-client-tls, http-types, lens, mtl, old-locale, QuickCheck
         , stdenv, text, time, unordered-containers
         }:
         mkDerivation {
           pname = "mandrill";
           version = "0.5.2.3";
           sha256 = "fe53d80b0c082119e58ff78a8b89084b182e7a82f685d6dfc57d6154b1420a27";
           libraryHaskellDepends = [
             aeson base base64-bytestring blaze-html bytestring containers
             email-validate http-client http-client-tls http-types lens mtl
             old-locale QuickCheck text time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Library for interfacing with the Mandrill JSON API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "map-syntax" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "map-syntax";
           version = "0.2.0.1";
           sha256 = "f45f0e09da98dc749eae15f403e30674e874c57f81c4bdd8db818028a25b5c55";
           revision = "2";
           editedCabalFile = "0cdmy48lr2l1kxdzwdl1y4n40dwdb5akvp6zajy62fcd4kg2md2z";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           description = "Syntax sugar for defining maps";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "markdown" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
         , conduit, conduit-extra, containers, data-default, stdenv, text
         , transformers, xml-conduit, xml-types, xss-sanitize
         }:
         mkDerivation {
           pname = "markdown";
           version = "0.1.16";
           sha256 = "08b0b352e208316ddc99c6f161704c8ecaf248c2e51f506900e344c93757ed85";
           libraryHaskellDepends = [
             attoparsec base blaze-html blaze-markup conduit conduit-extra
             containers data-default text transformers xml-conduit xml-types
             xss-sanitize
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/markdown";
           description = "Convert Markdown to HTML, with XSS protection";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "markdown-unlit" = callPackage
        ({ mkDerivation, base, base-compat, stdenv }:
         mkDerivation {
           pname = "markdown-unlit";
           version = "0.4.0";
           sha256 = "7c650cae7326a687265274d9e73c74ab2f7e570d7928ce9f47add9439d5b42ce";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base base-compat ];
           executableHaskellDepends = [ base base-compat ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/markdown-unlit#readme";
           description = "Literate Haskell support for Markdown";
           license = stdenv.lib.licenses.mit;
         }) {};
      "markup" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, clay, comonad
         , lucid, mmorph, monad-control, monad-logger, mtl, path-extra
         , resourcet, stdenv, text, transformers-base, urlpath
         }:
         mkDerivation {
           pname = "markup";
           version = "3.1.0";
           sha256 = "c7510643483861dafc9c9a8c41ceaa2f02f85870930cf4563899c49307780d3d";
           revision = "1";
           editedCabalFile = "1ax30n6qyy7kjcz2qyd6idaif1hxxz4n37p6lpfn5bnvg585ddmg";
           libraryHaskellDepends = [
             base blaze-html blaze-markup clay comonad lucid mmorph
             monad-control monad-logger mtl path-extra resourcet text
             transformers-base urlpath
           ];
           doHaddock = false;
           doCheck = false;
           description = "Abstraction for HTML-embedded content";
           license = stdenv.lib.licenses.mit;
         }) {};
      "math-functions" = callPackage
        ({ mkDerivation, base, deepseq, erf, primitive, stdenv, vector
         , vector-th-unbox
         }:
         mkDerivation {
           pname = "math-functions";
           version = "0.1.7.0";
           sha256 = "f3faa070947829fb56a5563f474bfe41237b4b5e8c88c37cac42d208f4a6bea6";
           revision = "1";
           editedCabalFile = "1xajk2wnhknjrgmf5x0iikfhkvpinaicj7ql420brm0649z2iry7";
           libraryHaskellDepends = [
             base deepseq erf primitive vector vector-th-unbox
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/math-functions";
           description = "Special functions and Chebyshev polynomials";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "matrices" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv, vector }:
         mkDerivation {
           pname = "matrices";
           version = "0.4.4";
           sha256 = "50f110321d71db257adfbe0f126542e936148ee473679edc1c2bf37c60d539ee";
           libraryHaskellDepends = [ base deepseq primitive vector ];
           doHaddock = false;
           doCheck = false;
           description = "native matrix based on vector";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "matrix" = callPackage
        ({ mkDerivation, base, deepseq, loop, primitive, stdenv, vector }:
         mkDerivation {
           pname = "matrix";
           version = "0.3.5.0";
           sha256 = "7a3d41c0f66212360057b29ae9f81779c8da9f71b040ad7676699af7e7ca35b5";
           revision = "1";
           editedCabalFile = "05mq1n4jfcr7ppd8ynafg1ag7x7ypy39labl5l203lbgmzpgh3pq";
           libraryHaskellDepends = [ base deepseq loop primitive vector ];
           doHaddock = false;
           doCheck = false;
           description = "A native implementation of matrix operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "maximal-cliques" = callPackage
        ({ mkDerivation, base, containers, stdenv, vector }:
         mkDerivation {
           pname = "maximal-cliques";
           version = "0.1.1";
           sha256 = "709d05c753c7d2d7466ade515da0255fc79241432d0118b3182dd3b2def475e9";
           libraryHaskellDepends = [ base containers vector ];
           doHaddock = false;
           doCheck = false;
           description = "Enumerate all maximal cliques of a graph";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mbox" = callPackage
        ({ mkDerivation, base, safe, stdenv, text, time, time-locale-compat
         }:
         mkDerivation {
           pname = "mbox";
           version = "0.3.3";
           sha256 = "080a3eafa24af47d5bf042871d7ec0322ddb129e50d6f131555925a3842f19e5";
           revision = "1";
           editedCabalFile = "00ywh3nqbbwhiyzb5cclzldzdss6dl998pydc02k6r3q3x1vq92y";
           libraryHaskellDepends = [ base safe text time time-locale-compat ];
           doHaddock = false;
           doCheck = false;
           description = "Read and write standard mailbox files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mcmc-types" = callPackage
        ({ mkDerivation, base, containers, mwc-probability, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "mcmc-types";
           version = "1.0.2";
           sha256 = "5d2fd31114e45516b2437827e89b0572e9e9db87a7201d77b437de6e2bba54f3";
           libraryHaskellDepends = [
             base containers mwc-probability transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/mcmc-types";
           description = "Common types for sampling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "megaparsec" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , deepseq, fail, mtl, parser-combinators, scientific, semigroups
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "megaparsec";
           version = "6.4.1";
           sha256 = "de40015dac65c2707a0bd65b7974da4d0cc00593d8bdebc0d58319761ee21370";
           revision = "2";
           editedCabalFile = "0vh4l2kl9nfxlr8l82qicldybwiv6vbksi3jdk0xjzxmkvgm0jnf";
           libraryHaskellDepends = [
             base bytestring case-insensitive containers deepseq fail mtl
             parser-combinators scientific semigroups text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/megaparsec";
           description = "Monadic parser combinators";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "memcached-binary" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, network
         , resource-pool, stdenv, storable-endian, time
         , unordered-containers
         }:
         mkDerivation {
           pname = "memcached-binary";
           version = "0.2.0";
           sha256 = "4d895459998bfd2fb80337cfc2363a905dfd7dc62adfad0696841c570c58fb8c";
           revision = "3";
           editedCabalFile = "1cx6xs9v7dcr4jv4757zsggic78qph4mirbp4n35ky8hxxjvf51k";
           libraryHaskellDepends = [
             base bytestring data-default-class network resource-pool
             storable-endian time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/memcached-binary";
           description = "memcached client using binary protocol";
           license = stdenv.lib.licenses.mit;
         }) {};
      "memoization-utils" = callPackage
        ({ mkDerivation, base, containers, lrucache, stdenv, time
         , time-units
         }:
         mkDerivation {
           pname = "memoization-utils";
           version = "0.1.0.1";
           sha256 = "32a495df7ca1a24ed303393f821d33ce873683a4b398ee07e4c79dc88dc72ab6";
           libraryHaskellDepends = [
             base containers lrucache time time-units
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yamadapc/haskell-memoization-utils";
           description = "Utilities for memoizing functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "memoize" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "memoize";
           version = "0.7";
           sha256 = "04dbd6e367132c477342a3a7271438a9d2ec55cd433e1d01807a6091934d11eb";
           revision = "1";
           editedCabalFile = "1wprq7wqyp8wxy5slrgw6b3vjbarlv1iwm3qg8hgckzzpsgszk2d";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "A memoization library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "memory" = callPackage
        ({ mkDerivation, base, basement, bytestring, deepseq, foundation
         , ghc-prim, stdenv
         }:
         mkDerivation {
           pname = "memory";
           version = "0.14.14";
           sha256 = "1d1b985620155dbacfc9d924b49505889a558f5a7787bf308fad418ded59960e";
           libraryHaskellDepends = [
             base basement bytestring deepseq foundation ghc-prim
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-memory";
           description = "memory and related abstraction stuff";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mersenne-random-pure64" = callPackage
        ({ mkDerivation, base, old-time, random, stdenv }:
         mkDerivation {
           pname = "mersenne-random-pure64";
           version = "0.2.0.5";
           sha256 = "3ca131d6c26fe8a086c40c6e79459149286c31083e0e110f7032aeba8038346e";
           libraryHaskellDepends = [ base old-time random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~dons/code/mersenne-random-pure64/";
           description = "Generate high quality pseudorandom numbers purely using a Mersenne Twister";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "messagepack" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, deepseq
         , stdenv
         }:
         mkDerivation {
           pname = "messagepack";
           version = "0.5.4";
           sha256 = "939590c05d5b0831b3b4796f2e1a070e290982c92b2009f2aa1ef5f4b05b5d7c";
           revision = "1";
           editedCabalFile = "0p13in70gvxl8d8hjl1dcxczfpcfyffy2lxbdy1d21h742ks1zjb";
           libraryHaskellDepends = [
             base bytestring cereal containers deepseq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rodrigosetti/messagepack";
           description = "Serialize instance for Message Pack Object";
           license = stdenv.lib.licenses.mit;
         }) {};
      "messagepack-rpc" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, messagepack
         , network-simple, stdenv
         }:
         mkDerivation {
           pname = "messagepack-rpc";
           version = "0.5.1";
           sha256 = "aa7960644668284e6add36e5c305af2c6d3ebf0a9a2c3fcd62529554a049a0bc";
           revision = "1";
           editedCabalFile = "05p6naaxswmsc3w7k67ydzzwyn60ymp0jbrc0f66p2sajvlnviax";
           libraryHaskellDepends = [
             base bytestring cereal containers messagepack network-simple
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/rodrigosetti/messagepack-rpc";
           description = "Message Pack RPC over TCP";
           license = stdenv.lib.licenses.mit;
         }) {};
      "metrics" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, containers, lens
         , mtl, mwc-random, primitive, stdenv, text, time, unix
         , unordered-containers, vector, vector-algorithms
         }:
         mkDerivation {
           pname = "metrics";
           version = "0.3.0.2";
           sha256 = "0df2801b630fcfe5c4a1968ccc1571016fb4c9408dfc881c599ba6f872543c02";
           libraryHaskellDepends = [
             ansi-terminal base bytestring containers lens mtl mwc-random
             primitive text time unix unordered-containers vector
             vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           description = "High-performance application metric tracking";
           license = stdenv.lib.licenses.mit;
         }) {};
      "microformats2-parser" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, aeson-qq, attoparsec, base
         , base-compat, blaze-html, blaze-markup, bytestring, containers
         , data-default, either, errors, html-conduit, lens-aeson, network
         , network-uri, options, pcre-heavy, safe, scotty, stdenv
         , streaming-commons, tagsoup, text, time, transformers
         , unordered-containers, vector, wai-extra, warp, xml-lens
         , xss-sanitize
         }:
         mkDerivation {
           pname = "microformats2-parser";
           version = "1.0.1.6";
           sha256 = "9937ae3658bf1bfbb34f03cc8f0fcd1c236f72cd52f5845cfbd19f02a3ed33f8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-qq attoparsec base base-compat blaze-markup bytestring
             containers data-default either errors html-conduit lens-aeson
             network-uri pcre-heavy safe tagsoup text time transformers
             unordered-containers vector xml-lens xss-sanitize
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base base-compat blaze-html blaze-markup
             data-default network network-uri options scotty streaming-commons
             text wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/microformats2-parser";
           description = "A Microformats 2 parser";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "microlens" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "microlens";
           version = "0.4.7.0";
           sha256 = "c149874a5cf038c1dde51b79b22733116817619e5ed11c7787aadb9d8ea31e26";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "A tiny lens library with no dependencies. If you're writing an app, you probably want microlens-platform, not this.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-aeson" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, microlens
         , scientific, stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "microlens-aeson";
           version = "2.1.1";
           sha256 = "5b43bcdc52d4b86b8c74040f754209efa95f5983d5d114d2af6709949614acda";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring microlens scientific text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fosskers/microlens-aeson/";
           description = "Law-abiding lenses for Aeson, using microlens";
           license = stdenv.lib.licenses.mit;
         }) {};
      "microlens-contra" = callPackage
        ({ mkDerivation, base, contravariant, microlens, stdenv }:
         mkDerivation {
           pname = "microlens-contra";
           version = "0.1.0.1";
           sha256 = "4983f19d37168a7cb862f76a22e8a43156df89c3c58b8206e2c84b2262c7f595";
           libraryHaskellDepends = [ base contravariant microlens ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "True folds and getters for microlens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-ghc" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, microlens
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "microlens-ghc";
           version = "0.4.7.0";
           sha256 = "ef1f68645d0f62e9f108852dd0637109625703175eb571c7f183aa3244bf0cdf";
           libraryHaskellDepends = [
             array base bytestring containers microlens transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "microlens + array, bytestring, containers, transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-mtl" = callPackage
        ({ mkDerivation, base, microlens, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "microlens-mtl";
           version = "0.1.10.0";
           sha256 = "b1dec4f000f324ae3e1915f683577bd53af218a68d07b0acf437def74e14b39d";
           libraryHaskellDepends = [
             base microlens mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "microlens support for Reader/Writer/State from mtl";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-platform" = callPackage
        ({ mkDerivation, base, hashable, microlens, microlens-ghc
         , microlens-mtl, microlens-th, stdenv, text, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "microlens-platform";
           version = "0.3.7.0";
           sha256 = "8050a15818c3ee2e58b42f948aef7d658cb7d06f5007a3e58560faef39a6bf09";
           libraryHaskellDepends = [
             base hashable microlens microlens-ghc microlens-mtl microlens-th
             text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "Feature-complete microlens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-th" = callPackage
        ({ mkDerivation, base, containers, microlens, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "microlens-th";
           version = "0.4.1.0";
           sha256 = "c62afe3fbac955771f4b000181e0c237ab61105a26a76e45c4958b37b7155baa";
           libraryHaskellDepends = [
             base containers microlens template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "Automatic generation of record lenses for microlens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "midair" = callPackage
        ({ mkDerivation, base, containers, safe, stdenv, stm }:
         mkDerivation {
           pname = "midair";
           version = "0.2.0.0";
           sha256 = "32262281f8785a3fa4ab6c60302566a8dcf59287f0da95e4d42bb8212f88b1b9";
           libraryHaskellDepends = [ base containers safe stm ];
           doHaddock = false;
           doCheck = false;
           description = "Hot-swappable FRP";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "mighty-metropolis" = callPackage
        ({ mkDerivation, base, mcmc-types, mwc-probability, pipes
         , primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "mighty-metropolis";
           version = "1.0.3";
           sha256 = "29b68aecb78fbe97cfcba96ba09dbd69b6e2b7df1cdb073a7be90ecf23db7e80";
           libraryHaskellDepends = [
             base mcmc-types mwc-probability pipes primitive transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/mighty-metropolis";
           description = "The Metropolis algorithm";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mime-mail" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
         , filepath, process, random, stdenv, text
         }:
         mkDerivation {
           pname = "mime-mail";
           version = "0.4.12";
           sha256 = "93e1caa9932bec12dc1b931db2f3ea9e2e2db9b8382b7babaf0a5e559936217c";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder bytestring filepath process
             random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/mime-mail";
           description = "Compose MIME email messages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mime-mail-ses" = callPackage
        ({ mkDerivation, base, base64-bytestring, byteable, bytestring
         , conduit, cryptohash, http-client, http-conduit, http-types
         , mime-mail, old-locale, stdenv, text, time, transformers
         , xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "mime-mail-ses";
           version = "0.3.2.3";
           sha256 = "03f977386c2cdf122097a0327509e4151eb10e320d8cec1791d259aa067f4d4c";
           libraryHaskellDepends = [
             base base64-bytestring byteable bytestring conduit cryptohash
             http-client http-conduit http-types mime-mail old-locale text time
             transformers xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/mime-mail";
           description = "Send mime-mail messages via Amazon SES";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mime-types" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text }:
         mkDerivation {
           pname = "mime-types";
           version = "0.1.0.7";
           sha256 = "83164a24963a7ef37543349df095155b30116c208e602a159a5cd3722f66e9b9";
           libraryHaskellDepends = [ base bytestring containers text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "Basic mime-type handling types and functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mintty" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "mintty";
           version = "0.1.1";
           sha256 = "c87f349f1999e8dee25f636428fc1742f50bcd2b51c9288578c60c58102e9f83";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/mintty";
           description = "A reliable way to detect the presence of a MinTTY console on Windows";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "misfortune" = callPackage
        ({ mkDerivation, base, bytestring, cereal, directory, filepath
         , knob, monad-loops, random-fu, regex-base, regex-pcre, semigroups
         , stdenv, text, utf8-string, vector
         }:
         mkDerivation {
           pname = "misfortune";
           version = "0.1.1.2";
           sha256 = "ae4b44215f811e7af6af756c813b9bd6e4161be555f30dd817324f8d1ffe2349";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal directory filepath knob random-fu semigroups
             text utf8-string vector
           ];
           executableHaskellDepends = [ monad-loops regex-base regex-pcre ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/misfortune";
           description = "fortune-mod clone";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "missing-foreign" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "missing-foreign";
           version = "0.1.1";
           sha256 = "9e1b36cdb8626d848386c1c4d54f3b9f80b3458398aa6a4d499266b5ecbcc885";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Convenience functions for FFI work";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmap" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "mmap";
           version = "0.5.9";
           sha256 = "58fcbb04e1cb8e7c36c05823b02dce2faaa989c53d745a7f36192de2fc98b5f8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Memory mapped files for POSIX and Windows";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmorph" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "mmorph";
           version = "1.0.9";
           sha256 = "e1f27d3881b254e2a87ffb21f33e332404abb180361f9d29092a85e321554563";
           revision = "1";
           editedCabalFile = "1xxf78qi08qsis2q785s0ra29wjxnxw8pyns0dsqp4a6cybd3mjd";
           libraryHaskellDepends = [
             base mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Monad morphisms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mockery" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, directory, filepath
         , logging-facade, stdenv, temporary
         }:
         mkDerivation {
           pname = "mockery";
           version = "0.3.4";
           sha256 = "30fe35f4f9cfd1b85a4ccc514a25ef066148364886e53538d50e5e760a582938";
           libraryHaskellDepends = [
             base base-compat bytestring directory filepath logging-facade
             temporary
           ];
           doHaddock = false;
           doCheck = false;
           description = "Support functions for automated testing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "modify-fasta" = callPackage
        ({ mkDerivation, base, containers, fasta, mtl, optparse-applicative
         , pipes, pipes-text, regex-tdfa, regex-tdfa-text, split, stdenv
         , text, text-show
         }:
         mkDerivation {
           pname = "modify-fasta";
           version = "0.8.2.1";
           sha256 = "5af7cddb753353ac1e16e15e5962e6a6c46eeb6a1d1ae38a8f014e20b04e61a0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers fasta regex-tdfa regex-tdfa-text split text
             text-show
           ];
           executableHaskellDepends = [
             base containers fasta mtl optparse-applicative pipes pipes-text
             split text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GregorySchwartz/modify-fasta";
           description = "Modify fasta (and CLIP) files in several optional ways";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "moesocks" = callPackage
        ({ mkDerivation, aeson, async, attoparsec, base, binary, bytestring
         , containers, cryptohash, hslogger, HsOpenSSL, iproute, lens
         , lens-aeson, mtl, network, optparse-applicative, random, stdenv
         , stm, strict, text, time, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "moesocks";
           version = "1.0.0.41";
           sha256 = "85905960363cb617541b0f9ec3a93e73a9b9cd761acdf37174864da865c5cb95";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson async attoparsec base binary bytestring containers cryptohash
             hslogger HsOpenSSL iproute lens lens-aeson mtl network
             optparse-applicative random stm strict text time transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nfjinjing/moesocks";
           description = "A functional firewall killer";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "mole" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
         , containers, cryptohash, css-syntax, directory, filemanip
         , filepath, fsnotify, kraken, mtl, network-uri
         , optparse-applicative, process, snap, snap-server, stdenv, stm
         , tagsoup, text, time, transformers, unix
         }:
         mkDerivation {
           pname = "mole";
           version = "0.0.3";
           sha256 = "dd9dd149f4c5ce0e9e9bec0c75277b9a4fad51ff6a1545f0231ba94e0b51469e";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             attoparsec base base64-bytestring bytestring containers cryptohash
             css-syntax directory filemanip filepath fsnotify kraken mtl
             network-uri optparse-applicative process snap snap-server stm
             tagsoup text time transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           description = "A glorified string replacement tool";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-control" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers, transformers-base
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-control";
           version = "1.0.1.0";
           sha256 = "d4b0209c6cb7006fac618e4d8e3743d908f8b21579d6ff72e9f6e758e24301f4";
           libraryHaskellDepends = [
             base stm transformers transformers-base transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/monad-control";
           description = "Lift control operations, like exception catching, through monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-coroutine" = callPackage
        ({ mkDerivation, base, monad-parallel, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-coroutine";
           version = "0.9.0.3";
           sha256 = "08aafe8499ef2311a238197b67ec74e5faa8c887a0e24592e38fde37ab64c9e4";
           libraryHaskellDepends = [
             base monad-parallel transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://trac.haskell.org/SCC/wiki/monad-coroutine";
           description = "Coroutine monad transformer for suspending and resuming monadic computations";
           license = "GPL";
         }) {};
      "monad-extras" = callPackage
        ({ mkDerivation, base, mmorph, monad-control, stdenv, stm
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-extras";
           version = "0.5.11";
           sha256 = "76972ce47148f8a60498a878394135cd4079bef79f79f12c9cd86d1766230467";
           libraryHaskellDepends = [
             base mmorph monad-control stm transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jwiegley/monad-extras";
           description = "Extra utility functions for working with monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-http" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, exceptions
         , http-client, http-client-tls, http-types, monad-logger
         , monadcryptorandom, MonadRandom, mtl, stdenv, text, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-http";
           version = "0.1.0.0";
           sha256 = "a333b087835aa4902d0814e76fe4f32a523092fd7b13526aad415160a8317192";
           revision = "7";
           editedCabalFile = "19qsjwcdg39is6ipwl6hgr42c7gyc7p1cs5f8isxy90hb4xjghrh";
           libraryHaskellDepends = [
             base base-compat bytestring exceptions http-client http-client-tls
             http-types monad-logger monadcryptorandom MonadRandom mtl text
             transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/futurice/haskell-monad-http#readme";
           description = "A class of monads which can do http requests";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-journal" = callPackage
        ({ mkDerivation, base, either, monad-control, mtl, stdenv
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-journal";
           version = "0.7.2";
           sha256 = "72b1a676bd994198544c4861a05b1d1b4f7ae55ea35a837cace539b8d6c69d08";
           libraryHaskellDepends = [
             base either monad-control mtl transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/phaazon/monad-journal";
           description = "Pure logger typeclass and monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-logger" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, conduit
         , conduit-extra, exceptions, fast-logger, lifted-base
         , monad-control, monad-loops, mtl, resourcet, stdenv, stm
         , stm-chans, template-haskell, text, transformers
         , transformers-base, transformers-compat
         }:
         mkDerivation {
           pname = "monad-logger";
           version = "0.3.20.1";
           sha256 = "8e7cd3af6a28c6be29ec184d221c60d745d14142794efbd175077ee3e8c0baad";
           libraryHaskellDepends = [
             base blaze-builder bytestring conduit conduit-extra exceptions
             fast-logger lifted-base monad-control monad-loops mtl resourcet stm
             stm-chans template-haskell text transformers transformers-base
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kazu-yamamoto/logger";
           description = "A class of monads which can log messages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-logger-json" = callPackage
        ({ mkDerivation, aeson, base, monad-logger, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "monad-logger-json";
           version = "0.1.0.0";
           sha256 = "10871c4aef838c01c8fdd7586161367b4d66907a53cbd9737efb717a1041e9aa";
           libraryHaskellDepends = [
             aeson base monad-logger template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fpco/monad-logger-json";
           description = "JSON-friendly Logging APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-logger-syslog" = callPackage
        ({ mkDerivation, base, bytestring, fast-logger, hsyslog
         , monad-logger, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "monad-logger-syslog";
           version = "0.1.3.0";
           sha256 = "b35098f5d3a7ea9bcdda886a60b19c404618f36410011d7beaef07ee353383e3";
           libraryHaskellDepends = [
             base bytestring fast-logger hsyslog monad-logger text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/monad-logger-syslog";
           description = "syslog output for monad-logger";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-loops" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "monad-loops";
           version = "0.4.3";
           sha256 = "7eaaaf6bc43661e9e86e310ff8c56fbea16eb6bf13c31a2e28103138ac164c18";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/monad-loops";
           description = "Monadic loops";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "monad-par" = callPackage
        ({ mkDerivation, abstract-deque, abstract-par, array, base
         , containers, deepseq, monad-par-extras, mtl, mwc-random, parallel
         , stdenv
         }:
         mkDerivation {
           pname = "monad-par";
           version = "0.3.4.8";
           sha256 = "f84cdf51908a1c41c3f672be9520a8fdc028ea39d90a25ecfe5a3b223cfeb951";
           libraryHaskellDepends = [
             abstract-deque abstract-par array base containers deepseq
             monad-par-extras mtl mwc-random parallel
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/monad-par";
           description = "A library for parallel programming based on a monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-par-extras" = callPackage
        ({ mkDerivation, abstract-par, base, cereal, deepseq, mtl, random
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "monad-par-extras";
           version = "0.3.3";
           sha256 = "e21e33190bc248afa4ae467287ac37d24037ef3de6050c44fd85b52f4d5b842e";
           libraryHaskellDepends = [
             abstract-par base cereal deepseq mtl random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/monad-par";
           description = "Combinators and extra features for Par monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-parallel" = callPackage
        ({ mkDerivation, base, parallel, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-parallel";
           version = "0.7.2.2";
           sha256 = "60bd1aed8ece1cc1e309d87e1722c6d489173dfe24eae95091ef5d9ce610efb3";
           libraryHaskellDepends = [
             base parallel transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://trac.haskell.org/SCC/wiki/monad-parallel";
           description = "Parallel execution of monadic computations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-peel" = callPackage
        ({ mkDerivation, base, extensible-exceptions, stdenv, transformers
         }:
         mkDerivation {
           pname = "monad-peel";
           version = "0.2.1.1";
           sha256 = "f591f54910a117bba2fc963d5502de668ece69181b605cf9db353fbcfa9fe394";
           libraryHaskellDepends = [
             base extensible-exceptions transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://andersk.mit.edu/haskell/monad-peel/";
           description = "Lift control operations like exception catching through monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-primitive" = callPackage
        ({ mkDerivation, base, primitive, stdenv, transformers }:
         mkDerivation {
           pname = "monad-primitive";
           version = "0.1";
           sha256 = "3dc032536e87ca77d9e802d581f036ebbf2e29064fb98a0ede05fb068b7926ee";
           libraryHaskellDepends = [ base primitive transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://bitbucket.org/Shimuuar/monad-primitive";
           description = "Type class for monad transformers stack with pirimitive base monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-products" = callPackage
        ({ mkDerivation, base, semigroupoids, stdenv }:
         mkDerivation {
           pname = "monad-products";
           version = "4.0.1";
           sha256 = "02bfe1db2ae1a5cff19f73736a219605b1f0649f6af44ca848d09160a7946cea";
           libraryHaskellDepends = [ base semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/monad-products";
           description = "Monad products";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-skeleton" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv }:
         mkDerivation {
           pname = "monad-skeleton";
           version = "0.1.2.2";
           sha256 = "b1cc4f0b9e308374c76902942b8381e0af869b0915735d380f792bb11e362de3";
           libraryHaskellDepends = [ base containers ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/monad-skeleton";
           description = "An undead monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-st" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "monad-st";
           version = "0.2.4";
           sha256 = "718d5ae878306e0527e3b6ce32d5ad59fd83432b90012a594059d3720fd0c7c8";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/monad-st";
           description = "Provides a MonadST class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-time" = callPackage
        ({ mkDerivation, base, mtl, stdenv, time }:
         mkDerivation {
           pname = "monad-time";
           version = "0.2";
           sha256 = "a9b901ca94b4c71d5f374a472506db92d26b13af523ceafe1e3302e8bae8b05d";
           revision = "1";
           editedCabalFile = "1v59w75w589mh6n3ga2fcihgmjmg0vd0q7fg9l2q52yhgx5pz9m3";
           libraryHaskellDepends = [ base mtl time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scrive/monad-time";
           description = "Type class for monads which carry the notion of the current time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-unlift" = callPackage
        ({ mkDerivation, base, constraints, monad-control, stdenv
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-unlift";
           version = "0.2.0";
           sha256 = "4b5e638619e4821918b4ec67aeffb581ab9df23d168fbb72164137009a15ee0f";
           libraryHaskellDepends = [
             base constraints monad-control transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/monad-unlift";
           description = "Typeclasses for representing monad transformer unlifting";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-unlift-ref" = callPackage
        ({ mkDerivation, base, constraints, exceptions, monad-control
         , monad-unlift, mtl, mutable-containers, resourcet, stdenv, stm
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-unlift-ref";
           version = "0.2.0";
           sha256 = "a97acc3384dcde65109400d77fa0cd58617c77708204d7d825b6591a65444ce1";
           libraryHaskellDepends = [
             base constraints exceptions monad-control monad-unlift mtl
             mutable-containers resourcet stm transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/monad-unlift";
           description = "Typeclasses for representing monad transformer unlifting";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monadLib" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "monadLib";
           version = "3.7.3";
           sha256 = "1834a77560d9df7ab0bc43ce24c77ffc660fc84573730ea94cb6e4ab8dcca99e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.github.com/yav/monadlib";
           description = "A collection of monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monadcryptorandom" = callPackage
        ({ mkDerivation, base, bytestring, crypto-api, mtl, stdenv, tagged
         , transformers
         }:
         mkDerivation {
           pname = "monadcryptorandom";
           version = "0.7.0";
           sha256 = "67011973932bc58d5f1d0eedbbe8dca3c3160ea1dac04e82cf96bd6687515623";
           libraryHaskellDepends = [
             base bytestring crypto-api mtl tagged transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TomMD/monadcryptorandom";
           description = "A monad for using CryptoRandomGen";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monadic-arrays" = callPackage
        ({ mkDerivation, array, base, stdenv, stm, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "monadic-arrays";
           version = "0.2.2";
           sha256 = "667714c6100272b48c4377cf2e2984b67a4445521a2a2e9c37539128c7e276a0";
           libraryHaskellDepends = [
             array base stm transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/monadic-arrays/";
           description = "Boxed and unboxed arrays for monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monadloc" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, transformers }:
         mkDerivation {
           pname = "monadloc";
           version = "0.7.1";
           sha256 = "b25a0f6b3ebb051e58e2a58f2f5d588ff67622584cb575d40c46eaacbd1de7a8";
           libraryHaskellDepends = [ base template-haskell transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pepeiborra/monadloc";
           description = "A class for monads which can keep a monadic call trace";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "monadplus" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "monadplus";
           version = "1.4.2";
           sha256 = "366ed520db1eaf2ec56d8508fee2804cc24c7a6016de4b75b9addec681186595";
           revision = "1";
           editedCabalFile = "11v5zdsb9mp1rxvgcrxcr2xnc610xi16krwa9r4i5d6njmphfbdp";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell98 partial maps and filters over MonadPlus";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monads-tf" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "monads-tf";
           version = "0.1.0.3";
           sha256 = "249dd2aa55c4dd6530f1e49f6b052ec91bc590ecfef2bd24c58837a3f8d4b0f1";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Monad classes, using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mongoDB" = callPackage
        ({ mkDerivation, array, base, base16-bytestring, base64-bytestring
         , binary, bson, bytestring, containers, cryptohash, hashtables
         , lifted-base, monad-control, mtl, network, nonce, parsec, random
         , random-shuffle, stdenv, text, transformers-base
         }:
         mkDerivation {
           pname = "mongoDB";
           version = "2.0.10";
           sha256 = "8986956648874ce70c0bc4682d7856ea20c1477895405c532e6de34573f5b0df";
           libraryHaskellDepends = [
             array base base16-bytestring base64-bytestring binary bson
             bytestring containers cryptohash hashtables lifted-base
             monad-control mtl network nonce parsec random random-shuffle text
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mongodb-haskell/mongodb";
           description = "Driver (client) for MongoDB, a free, scalable, fast, document DBMS";
           license = "unknown";
         }) {};
      "mono-traversable" = callPackage
        ({ mkDerivation, base, bytestring, comonad, containers, dlist
         , dlist-instances, hashable, semigroupoids, semigroups, split
         , stdenv, text, transformers, unordered-containers, vector
         , vector-algorithms, vector-instances
         }:
         mkDerivation {
           pname = "mono-traversable";
           version = "0.10.2";
           sha256 = "379ee5a7f9fc2a5c4fb11522fe28654d130c044265643122c8b3163e8e0452b8";
           revision = "1";
           editedCabalFile = "0lww9z9hqmwds3l9dprshp2xqb3bri5s7mv6saf7gv9m3c6wxv8g";
           libraryHaskellDepends = [
             base bytestring comonad containers dlist dlist-instances hashable
             semigroupoids semigroups split text transformers
             unordered-containers vector vector-algorithms vector-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable";
           description = "Type classes for mapping, folding, and traversing monomorphic containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monoid-extras" = callPackage
        ({ mkDerivation, base, groups, semigroupoids, semigroups, stdenv }:
         mkDerivation {
           pname = "monoid-extras";
           version = "0.4.2";
           sha256 = "13ff4e055c9656a3e599567cbc4a46ef8617c05534de46909a4239696e34281f";
           revision = "2";
           editedCabalFile = "04h78r48rg2ppi53869vb8y226g135fxgy9ryi1v08nqsiqi1vvw";
           libraryHaskellDepends = [ base groups semigroupoids semigroups ];
           doHaddock = false;
           doCheck = false;
           description = "Various extra monoid-related definitions and utilities";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monoid-subclasses" = callPackage
        ({ mkDerivation, base, bytestring, containers, primes, stdenv, text
         , vector
         }:
         mkDerivation {
           pname = "monoid-subclasses";
           version = "0.4.2";
           sha256 = "38257132ebd3dca4d1d95252a928ca183171ae0ba3aefd133f3c564fa3bfee2b";
           libraryHaskellDepends = [
             base bytestring containers primes text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/blamario/monoid-subclasses/";
           description = "Subclasses of Monoid";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monoidal-containers" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, lens, newtype
         , stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "monoidal-containers";
           version = "0.1.2.5";
           sha256 = "c82124b1e867a271bafeffb6fb8fb1febb1887154bf28225b174180babc9d438";
           libraryHaskellDepends = [
             base containers deepseq hashable lens newtype unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bgamari/monoidal-containers";
           description = "Containers with monoidal accumulation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "morte" = callPackage
        ({ mkDerivation, alex, array, base, binary, containers, deepseq
         , Earley, http-client, http-client-tls, microlens, microlens-mtl
         , optparse-applicative, pipes, stdenv, system-fileio
         , system-filepath, text, text-format, transformers
         }:
         mkDerivation {
           pname = "morte";
           version = "1.6.2";
           sha256 = "277ba41cc40236a8a02dd154d29108ddc9d8ca7706daa5fe3177189487363b5a";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base binary containers deepseq Earley http-client
             http-client-tls microlens microlens-mtl pipes system-fileio
             system-filepath text text-format transformers
           ];
           libraryToolDepends = [ alex ];
           executableHaskellDepends = [ base optparse-applicative text ];
           doHaddock = false;
           doCheck = false;
           description = "A bare-bones calculus of constructions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mountpoints" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "mountpoints";
           version = "1.0.2";
           sha256 = "67fcdf64fdb8111f58939c64b168a9dfa519d7068e0f439887d739866f18d5c2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "list mount points";
           license = "LGPL";
         }) {};
      "msi-kb-backlit" = callPackage
        ({ mkDerivation, base, bytestring, hid, split, stdenv }:
         mkDerivation {
           pname = "msi-kb-backlit";
           version = "0.1.0.1";
           sha256 = "8437ed623ae07c5350d24b5b8f96ac82fdade7afe9cd6a6085b39103475001d3";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base bytestring hid split ];
           doHaddock = false;
           doCheck = false;
           description = "A command line tool to change backlit colors of your MSI keyboards";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mstate" = callPackage
        ({ mkDerivation, base, monad-peel, mtl, stdenv, stm }:
         mkDerivation {
           pname = "mstate";
           version = "0.2.7";
           sha256 = "4508e3e7cc2dec5a0e75ba7dd085c73fdd4f886ac6d1a74cf071816795bb2c17";
           libraryHaskellDepends = [ base monad-peel mtl stm ];
           doHaddock = false;
           doCheck = false;
           description = "MState: A consistent State monad for concurrent applications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mtl" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "mtl";
           version = "2.2.1";
           sha256 = "cae59d79f3a16f8e9f3c9adc1010c7c6cdddc73e8a97ff4305f6439d855c8dc5";
           revision = "1";
           editedCabalFile = "0fsa965g9h23mlfjzghmmhcb9dmaq8zpm374gby6iwgdx47q0njb";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/mtl";
           description = "Monad classes, using functional dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mtl-compat" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "mtl-compat";
           version = "0.2.1.3";
           sha256 = "6458ca53593a31ebce1d94ef8dd4f6a06d050dd7ed32335f6cc6b6e5d3456894";
           revision = "4";
           editedCabalFile = "1mfrx8cpx0502sjv0bmlfkl0h46c4krldg8m89k4fj6iawwg2ab5";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-compat/mtl-compat";
           description = "Backported Control.Monad.Except module from mtl";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mtl-prelude" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "mtl-prelude";
           version = "2.0.3.1";
           sha256 = "c4a6dda093d63bd2161f55030c5825903dfa9b7d5e766c487fd848cb2aa01233";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/mtl-prelude";
           description = "Reexports of most definitions from \"mtl\" and \"transformers\"";
           license = stdenv.lib.licenses.mit;
         }) {};
      "multiarg" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "multiarg";
           version = "0.30.0.10";
           sha256 = "c9fa623a8e06d62addc2b7ad5102ceac3a6f0db6a67afbc8e693d0d0aec417a1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/massysett/multiarg";
           description = "Command lines for options that take multiple arguments";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "multimap" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "multimap";
           version = "1.2.1";
           sha256 = "6332c529475177b9e08d762d5701804dc2edc0ff26dd98a2a1dcd7ed092e7434";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/scravy/multimap";
           description = "A multimap";
           license = stdenv.lib.licenses.mit;
         }) {};
      "multipart" = callPackage
        ({ mkDerivation, base, bytestring, parsec, stdenv }:
         mkDerivation {
           pname = "multipart";
           version = "0.1.2";
           sha256 = "e543fb307beb14fc366171d7767a6a18244bacf78db295d8d161c5c03d94043c";
           libraryHaskellDepends = [ base bytestring parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/silkapp/multipart";
           description = "HTTP multipart split out of the cgi package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "multiplate" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "multiplate";
           version = "0.0.3";
           sha256 = "2c0016847dcedc8ba0054211256a3ef6c7f142e605668c7b64beebdf0eaf4ebf";
           revision = "1";
           editedCabalFile = "0cka6nwvbiddlv2j4f7jqq4cxz5mfw7vga5p020h0m9ws98gqbsx";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Multiplate";
           description = "Lightweight generic library for mutually recursive data types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "multiset" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "multiset";
           version = "0.3.3";
           sha256 = "c74e77d3dbbe81fe3b48629fc257fa084df89bfb575c82c42f5549af376de135";
           revision = "2";
           editedCabalFile = "1pwb1prra12yrm3qdjp8h7343cilbkck85blhaflzsmn1sbcyq2w";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "The Data.MultiSet container type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "multiset-comb" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "multiset-comb";
           version = "0.2.4.1";
           sha256 = "8ae3432daf56c1752a0d63e25acbc8b6b4dce52600091139a9e29b16400030da";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Combinatorial algorithms over multisets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "murmur-hash" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "murmur-hash";
           version = "0.1.0.9";
           sha256 = "89b9db94ead4cc0784dbcfb47c51b5664c1718860db00cd8ada3ef6fdd4465ad";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nominolo/murmur-hash";
           description = "MurmurHash2 implementation for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mustache" = callPackage
        ({ mkDerivation, aeson, base, base-unicode-symbols, bytestring
         , cmdargs, containers, directory, either, filepath, mtl, parsec
         , scientific, stdenv, text, unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "mustache";
           version = "1.0.2";
           sha256 = "77d43c251883fc5dd5afdd05ea3b6757f37b7c4aa76950418386b8e9098d0927";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base base-unicode-symbols bytestring containers directory
             either filepath mtl parsec scientific text unordered-containers
             vector
           ];
           executableHaskellDepends = [
             aeson base base-unicode-symbols bytestring cmdargs filepath text
             yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/JustusAdam/mustache";
           description = "A mustache template parser library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mutable-containers" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, mono-traversable
         , primitive, stdenv, vector
         }:
         mkDerivation {
           pname = "mutable-containers";
           version = "0.3.3";
           sha256 = "7a7a39cbb16978dd1607a3977d7a1e5d8ecda7a528845d6983b5b97c49517ceb";
           libraryHaskellDepends = [
             base containers ghc-prim mono-traversable primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable";
           description = "Abstactions and concrete implementations of mutable containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mwc-probability" = callPackage
        ({ mkDerivation, base, mwc-random, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "mwc-probability";
           version = "1.2.2";
           sha256 = "a54e9e9e51c7b67e0eb8244d584fcfc999ab7af00e5146ffdf3efed837d5915a";
           revision = "1";
           editedCabalFile = "1qdpsk09kb932a621nsvjir73idmy6b9raxhm7nsblkpn9l5j75m";
           libraryHaskellDepends = [ base mwc-random primitive transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/mwc-probability";
           description = "Sampling function-based probability distributions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mwc-random" = callPackage
        ({ mkDerivation, base, primitive, stdenv, time, vector }:
         mkDerivation {
           pname = "mwc-random";
           version = "0.13.5.0";
           sha256 = "28dd2d95d088438ab15e9dee45ddc500b6c4700a87539c70a48b1b7b4c8d1ca9";
           libraryHaskellDepends = [ base primitive time vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/mwc-random";
           description = "Fast, high quality pseudo random number generation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mysql" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, mysql, stdenv
         }:
         mkDerivation {
           pname = "mysql";
           version = "0.1.4";
           sha256 = "9b8675db208851524a77b6e5c4278e6bc29eab16d970a9dda312ae366bdb668e";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base bytestring containers ];
           librarySystemDepends = [ mysql ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/paul-rouse/mysql";
           description = "A low-level MySQL client library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) mysql;};
      "mysql-simple" = callPackage
        ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
         , blaze-textual, bytestring, mysql, old-locale, pcre-light, stdenv
         , text, time
         }:
         mkDerivation {
           pname = "mysql-simple";
           version = "0.2.2.5";
           sha256 = "86a30893c6e0eb0316b52780d6ca0464c7a1e048a50d03d203ecce975f7d518c";
           revision = "2";
           editedCabalFile = "1x0bfmf9czb3av9m16b1n024ic9j496g67hmbja7y8piah6fq3q0";
           libraryHaskellDepends = [
             attoparsec base base16-bytestring blaze-builder blaze-textual
             bytestring mysql old-locale pcre-light text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/paul-rouse/mysql-simple";
           description = "A mid-level MySQL client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nagios-check" = callPackage
        ({ mkDerivation, base, bifunctors, exceptions, mtl, stdenv, text }:
         mkDerivation {
           pname = "nagios-check";
           version = "0.3.2";
           sha256 = "1bc9b85cb10c396943d53c44e2701c5bc2a02ecdf3e8f46da238981f8b7860b7";
           libraryHaskellDepends = [ base bifunctors exceptions mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/olorin/haskell-nagios-check";
           description = "Package for writing monitoring plugins";
           license = stdenv.lib.licenses.mit;
         }) {};
      "names-th" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell }:
         mkDerivation {
           pname = "names-th";
           version = "0.2.0.2";
           sha256 = "88807d7d25d1f4e56b6576c4c3bda7dcbe0be6dd1210b7d6337616e21c59bf26";
           libraryHaskellDepends = [ base containers template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Manipulate name strings for TH";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nano-erl" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "nano-erl";
           version = "0.1.0.1";
           sha256 = "370a60682b38ca77b793ee7326c54d5e74dd688f316f31fdd5cf999ad498ee12";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           description = "Small library for Erlang-style actor semantics";
           license = stdenv.lib.licenses.mit;
         }) {};
      "nanospec" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "nanospec";
           version = "0.2.1";
           sha256 = "dbcbd9baa57fc9aa573cc2e291bb93c787dc0d7aac9793b2a10c125f69a0024b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A lightweight implementation of a subset of Hspec's API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "nationstates" = callPackage
        ({ mkDerivation, base, bytestring, clock, containers, http-client
         , http-client-tls, http-types, multiset, stdenv, tls, transformers
         , xml
         }:
         mkDerivation {
           pname = "nationstates";
           version = "0.5.0.0";
           sha256 = "020efcdc1b16ae77ce2488180c02e398db45745adc96da2e9b406f27d7f75692";
           libraryHaskellDepends = [
             base bytestring clock containers http-client http-client-tls
             http-types multiset tls transformers xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lfairy/nationstates";
           description = "NationStates API client";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "nats" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "nats";
           version = "1.1.1";
           sha256 = "131d1b4857cd1c0699ef60aeb41af923ee3e0ecd26ed1324c067d993bc17d4cd";
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/nats/";
           description = "Natural numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "natural-sort" = callPackage
        ({ mkDerivation, base, bytestring, parsec, stdenv, text }:
         mkDerivation {
           pname = "natural-sort";
           version = "0.1.2";
           sha256 = "7b72b734680827ab07df38a004d4f523540055389d62fcd587edd2fcf19a6b50";
           libraryHaskellDepends = [ base bytestring parsec text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/natural-sort/";
           description = "User-friendly text collation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "natural-transformation" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "natural-transformation";
           version = "0.3.1";
           sha256 = "9b5a39f18790f33807298d47dc7098e2863ca874e8b3d2b419bf696f2ad09702";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ku-fpg/natural-transformation";
           description = "A natural transformation package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ndjson-conduit" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit
         , stdenv
         }:
         mkDerivation {
           pname = "ndjson-conduit";
           version = "0.1.0.5";
           sha256 = "c037b8f7c47b146f1384585541ae8a4f9218bc4456f428935f973ae07da49db1";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/srijs/haskell-ndjson-conduit";
           description = "Conduit-based parsing and serialization for newline delimited JSON";
           license = stdenv.lib.licenses.mit;
         }) {};
      "neat-interpolation" = callPackage
        ({ mkDerivation, base, base-prelude, parsec, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "neat-interpolation";
           version = "0.3.2.1";
           sha256 = "5530e43ca4de09b972d173e522f9dc96265f3afe0df695a25f0141be816fa014";
           libraryHaskellDepends = [
             base base-prelude parsec template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/neat-interpolation";
           description = "A quasiquoter for neat and simple multiline text interpolation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "nested-routes" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, composition-extra
         , errors, exceptions, hashable, mtl, poly-arity, pred-trie
         , regex-compat, semigroups, stdenv, text, transformers, tries
         , unordered-containers, wai-middleware-content-type
         , wai-middleware-verbs, wai-transformers
         }:
         mkDerivation {
           pname = "nested-routes";
           version = "7.0.0";
           sha256 = "eac01cd730d3cbcafab4a0ac2b6b8c3ca8cdcd31f996379092f2f60bc31c21a2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base bytestring composition-extra errors exceptions
             hashable mtl poly-arity pred-trie regex-compat semigroups text
             transformers tries unordered-containers wai-middleware-content-type
             wai-middleware-verbs wai-transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Declarative, compositional Wai responses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nettle" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , nettle, securemem, stdenv, tagged
         }:
         mkDerivation {
           pname = "nettle";
           version = "0.2.0";
           sha256 = "220184713b802c53ee26783b891a3bbee6c6b2571f798bd6def2496a504e9bde";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem tagged
           ];
           libraryPkgconfigDepends = [ nettle ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stbuehler/haskell-nettle";
           description = "safe nettle binding";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) nettle;};
      "network" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "network";
           version = "2.6.3.1";
           sha256 = "57045f5e2bedc095670182130a6d1134fcc65d097824ac5b03933876067d82e6";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/network";
           description = "Low-level networking interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-anonymous-i2p" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, exceptions, mtl
         , network, network-attoparsec, network-simple, stdenv, text
         , transformers, uuid
         }:
         mkDerivation {
           pname = "network-anonymous-i2p";
           version = "0.10.0";
           sha256 = "cff5796c36c1ebbb969e5433538eb3f3979acef9825a7bfb683ed002023fff2c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bytestring exceptions mtl network
             network-attoparsec network-simple text transformers uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/solatis/haskell-network-anonymous-i2p";
           description = "Haskell API for I2P anonymous networking";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network-anonymous-tor" = callPackage
        ({ mkDerivation, attoparsec, base, base32string, bytestring
         , exceptions, hexstring, network, network-attoparsec
         , network-simple, socks, splice, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "network-anonymous-tor";
           version = "0.11.0";
           sha256 = "41aee5b34aaaec6fa47a56cca61fafec22097bda25d13d5baef6b7924e127549";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base base32string bytestring exceptions hexstring
             network network-attoparsec network-simple socks text transformers
           ];
           executableHaskellDepends = [
             base exceptions network network-simple splice
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Haskell API for Tor anonymous networking";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, enclosed-exceptions
         , exceptions, lifted-base, monad-control, mtl, network, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "network-attoparsec";
           version = "0.12.2";
           sha256 = "9790a9bad286ab1474dadbece3e4b2e1dd068d4ede3847cb73bcd66386bf08f0";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bytestring enclosed-exceptions exceptions
             lifted-base monad-control mtl network transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/solatis/haskell-network-attoparsec";
           description = "Utility functions for running a parser against a socket";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network-carbon" = callPackage
        ({ mkDerivation, base, bytestring, network, stdenv, text, time
         , vector
         }:
         mkDerivation {
           pname = "network-carbon";
           version = "1.0.6";
           sha256 = "28e0a72d86be8a21637a62a83273311aab446b1d6e4a13f2638101aa6cd19ef6";
           libraryHaskellDepends = [
             base bytestring network text time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/network-carbon";
           description = "A Haskell implementation of the Carbon protocol (part of the Graphite monitoring tools)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-conduit-tls" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , connection, cprng-aes, data-default, monad-control, network
         , stdenv, streaming-commons, tls, transformers, transformers-base
         }:
         mkDerivation {
           pname = "network-conduit-tls";
           version = "1.2.2";
           sha256 = "12a2cddfacd19d0585e57ff143d625e255e1a4628a463a41332eabc3c02bb087";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra connection cprng-aes
             data-default monad-control network streaming-commons tls
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/conduit";
           description = "Create TLS-aware network code with conduits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network-house" = callPackage
        ({ mkDerivation, array, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "network-house";
           version = "0.1.0.2";
           sha256 = "071fbc22fc516175e78235d9e29ccefd8eec7c3caa2e6de74dddf62cdbffab43";
           libraryHaskellDepends = [ array base containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/network-house";
           description = "data and parsers for Ethernet, TCP, UDP, IPv4, IPv6, ICMP, DHCP, TFTP";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "network-info" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "network-info";
           version = "0.2.0.8";
           sha256 = "ecdff121f3e154c480f363bc8660959a051790bfae5b5fe573810873cedbcd76";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jystic/network-info";
           description = "Access the local computer's basic network configuration";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-multicast" = callPackage
        ({ mkDerivation, base, network, stdenv }:
         mkDerivation {
           pname = "network-multicast";
           version = "0.1.2";
           sha256 = "82dcd07dd7f62d0ba23f4b37469768f07bcf6bd888dd54ebe61603f6fd2ccefb";
           libraryHaskellDepends = [ base network ];
           doHaddock = false;
           doCheck = false;
           description = "Simple multicast library";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "network-protocol-xmpp" = callPackage
        ({ mkDerivation, base, bytestring, gnuidn, gnutls, gsasl
         , libxml-sax, monads-tf, network, stdenv, text, transformers
         , xml-types
         }:
         mkDerivation {
           pname = "network-protocol-xmpp";
           version = "0.4.8";
           sha256 = "ea7729e00452da11ed489a71f482e0aa082b0fb872eedca2e3722a05fd421e1e";
           libraryHaskellDepends = [
             base bytestring gnuidn gnutls gsasl libxml-sax monads-tf network
             text transformers xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-xmpp/";
           description = "Client library for the XMPP protocol";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "network-simple" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, network, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "network-simple";
           version = "0.4.0.5";
           sha256 = "0947b409ebf68d0fa0d94c0a99c6b01165a1c5ab40507b489d195a84b4cd6aaa";
           libraryHaskellDepends = [
             base bytestring exceptions network transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/network-simple";
           description = "Simple network sockets usage patterns";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, hashable
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "network-transport";
           version = "0.4.4.0";
           sha256 = "8e11bc9bbc3b1dd6929dfaf1140dc605f6e72c28b97bd60a2c036ab6aae67ed8";
           revision = "1";
           editedCabalFile = "1gq1qnx3n59kci6imk2rf1dahvsq9ifsnb50fh98h9b7yhczj4ag";
           libraryHaskellDepends = [
             base binary bytestring deepseq hashable transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Network abstraction layer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport-composed" = callPackage
        ({ mkDerivation, base, bytestring, network-transport, stdenv }:
         mkDerivation {
           pname = "network-transport-composed";
           version = "0.2.0.1";
           sha256 = "965f9e2ce1c2ea8e97b80caa8a226ec4a5ea745a0ca4fd640e72d7d37d41724f";
           revision = "1";
           editedCabalFile = "1fwn9wix1k2kccs1dqp4z2ym98bskdkhjff9in7d6myaz93f23gw";
           libraryHaskellDepends = [ base bytestring network-transport ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Compose network transports";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport-inmemory" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-accessor
         , network-transport, stdenv, stm
         }:
         mkDerivation {
           pname = "network-transport-inmemory";
           version = "0.5.1";
           sha256 = "e34ae4169e91739851b31eda9750d3df711389279961290fd006a79b51a70bdd";
           libraryHaskellDepends = [
             base bytestring containers data-accessor network-transport stm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "In-memory instantiation of Network.Transport";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport-tcp" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-accessor
         , network, network-transport, stdenv
         }:
         mkDerivation {
           pname = "network-transport-tcp";
           version = "0.5.1";
           sha256 = "c4c3d67d08f8213ebc99d369cfeb8813f9dd03def464d6097bed533bfbec7beb";
           libraryHaskellDepends = [
             base bytestring containers data-accessor network network-transport
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "TCP instantiation of Network.Transport";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport-tests" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, containers, mtl
         , network-transport, random, stdenv
         }:
         mkDerivation {
           pname = "network-transport-tests";
           version = "0.2.3.0";
           sha256 = "8277bd97eb7d719891aa6494673506d0d3c7e135c4098f49e17f06b281f53b6c";
           libraryHaskellDepends = [
             ansi-terminal base bytestring containers mtl network-transport
             random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Unit tests for Network.Transport implementations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport-zeromq" = callPackage
        ({ mkDerivation, async, base, binary, bytestring, containers
         , data-accessor, exceptions, network-transport, random, semigroups
         , stdenv, stm, stm-chans, transformers, zeromq4-haskell
         }:
         mkDerivation {
           pname = "network-transport-zeromq";
           version = "0.2.1.1";
           sha256 = "93b56e1a2b337c24cc899874d23eed335ff640c5c1e143b69584c4d71f0cca35";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base binary bytestring containers data-accessor exceptions
             network-transport random semigroups stm stm-chans transformers
             zeromq4-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tweag/network-transport-zeromq";
           description = "ZeroMQ backend for network-transport";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-uri" = callPackage
        ({ mkDerivation, base, deepseq, parsec, stdenv }:
         mkDerivation {
           pname = "network-uri";
           version = "2.6.1.0";
           sha256 = "423e0a2351236f3fcfd24e39cdbc38050ec2910f82245e69ca72a661f7fc47f0";
           revision = "1";
           editedCabalFile = "141nj7q0p9wkn5gr41ayc63cgaanr9m59yym47wpxqr3c334bk32";
           libraryHaskellDepends = [ base deepseq parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/network-uri";
           description = "URI manipulation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "newtype" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "newtype";
           version = "0.2";
           sha256 = "b714033abd9a8b0903bcef0d36d0913de2a5003c852f43f97fa688717289e459";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A typeclass and set of functions for working with newtypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "newtype-generics" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "newtype-generics";
           version = "0.4";
           sha256 = "6949a33bb6e7b2fb2f1eaaf47016458e3e5455ec92434e331fcd1fe79d654f7b";
           revision = "1";
           editedCabalFile = "0n6ywqkjb9l89n9hjfl7a82jiwyrdnx4irgbmp8v5smxsi09kpaa";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A typeclass and set of functions for working with newtypes, with generics support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nicify-lib" = callPackage
        ({ mkDerivation, base, parsec, stdenv, transformers }:
         mkDerivation {
           pname = "nicify-lib";
           version = "1.0.1";
           sha256 = "7d26f86d792dda166805e9dda17cfbc7a2101f3654fe798f4231385d8136e732";
           libraryHaskellDepends = [ base parsec transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty print the standard output of default `Show` instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "nix-paths" = callPackage
        ({ mkDerivation, base, nix, process, stdenv }:
         mkDerivation {
           pname = "nix-paths";
           version = "1.0.0.1";
           sha256 = "742da2042caa20d63690e9c6de632eebd71b863001eb2c71645f8c72d3e9f315";
           revision = "1";
           editedCabalFile = "17l6x5azdiklwmiwkk05zxg50gqgdq9n5a1nyfywy05b6h7m33il";
           libraryHaskellDepends = [ base process ];
           libraryToolDepends = [ nix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/nix-paths";
           description = "Knowledge of Nix's installation directories";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nonce" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, cprng-aes
         , crypto-random, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "nonce";
           version = "1.0.2";
           sha256 = "1004184996ea797b43189a0e73eab0b939f129cafc776341ca82289edb329cd0";
           revision = "1";
           editedCabalFile = "012hkf9hlvwmlbf1n1v05vgidssxv99z4bq2lbpbf1dlb366madj";
           libraryHaskellDepends = [
             base base64-bytestring bytestring cprng-aes crypto-random text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/nonce";
           description = "Generate cryptographic nonces";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nsis" = callPackage
        ({ mkDerivation, base, stdenv, transformers, uniplate }:
         mkDerivation {
           pname = "nsis";
           version = "0.3";
           sha256 = "03af564c2edb8f0e0d291403d3b452c496ef3e2ab33d247b73eddfdec08df570";
           libraryHaskellDepends = [ base transformers uniplate ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/nsis#readme";
           description = "DSL for producing Windows Installer using NSIS";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numbers" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "numbers";
           version = "3000.2.0.1";
           sha256 = "736d0551e4a13510dfe43a777a220bd4b17a19a73e6cd17bf901b1854b5ce183";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jwiegley/numbers#readme";
           description = "Various number types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numeric-extras" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "numeric-extras";
           version = "0.1";
           sha256 = "c700711021d96334be43a21fbd80a5f7146fdd6706ef8656f1d287ff000b61d6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/numeric-extras";
           description = "Useful tools from the C standard library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numtype-dk" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "numtype-dk";
           version = "0.5.0.1";
           sha256 = "29dbb9bf7693989f94605804de31b1a4dacf53ab566ce0346445288eae95d017";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bjornbm/numtype-dk";
           description = "Type-level integers, using TypeNats, Data Kinds, and Closed Type Families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "objective" = callPackage
        ({ mkDerivation, base, containers, either, exceptions, free
         , hashable, monad-skeleton, mtl, profunctors, stdenv
         , template-haskell, transformers, transformers-compat
         , unordered-containers, void, witherable
         }:
         mkDerivation {
           pname = "objective";
           version = "1.1.1";
           sha256 = "7ad18e779f0b5910cc5425a16bcd07dba9f6a785c83526e047e62587b8d86634";
           revision = "2";
           editedCabalFile = "12zyr9szwr8g8lqs20sgmi8dqvjfwnb5c4r14lamv6nn5mvs0xl2";
           libraryHaskellDepends = [
             base containers either exceptions free hashable monad-skeleton mtl
             profunctors template-haskell transformers transformers-compat
             unordered-containers void witherable
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/objective";
           description = "Composable objects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "octane" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, autoexporter, base, binary
         , binary-bits, bytestring, containers, data-binary-ieee754, deepseq
         , newtype-generics, stdenv, text
         }:
         mkDerivation {
           pname = "octane";
           version = "0.4.24";
           sha256 = "2c74c33a03f90c141da3ffc94c5434e24b6c7cf8c426927480ce0f278eb6802a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty autoexporter base binary binary-bits bytestring
             containers data-binary-ieee754 deepseq newtype-generics text
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/octane#readme";
           description = "Parse Rocket League replays";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ofx" = callPackage
        ({ mkDerivation, base, parsec, pretty, stdenv, time }:
         mkDerivation {
           pname = "ofx";
           version = "0.4.2.0";
           sha256 = "0e22e2269f099603832f666814235051fadf92cbdec3dfacf7d1e8231ccd95f1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base parsec pretty time ];
           executableHaskellDepends = [ base parsec pretty time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/ofx";
           description = "Parser for OFX data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "old-locale" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "old-locale";
           version = "1.0.0.7";
           sha256 = "dbaf8bf6b888fb98845705079296a23c3f40ee2f449df7312f7f7f1de18d7b50";
           revision = "2";
           editedCabalFile = "04b9vn007hlvsrx4ksd3r8r3kbyaj2kvwxchdrmd4370qzi8p6gs";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "locale library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "old-time" = callPackage
        ({ mkDerivation, base, old-locale, stdenv }:
         mkDerivation {
           pname = "old-time";
           version = "1.1.0.3";
           sha256 = "1ccb158b0f7851715d36b757c523b026ca1541e2030d02239802ba39b4112bc1";
           revision = "2";
           editedCabalFile = "1j6ln1dkvhdvnwl33bp0xf9lhc4sybqk0aw42p8cq81xwwzbn7y9";
           libraryHaskellDepends = [ base old-locale ];
           doHaddock = false;
           doCheck = false;
           description = "Time library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "omnifmt" = callPackage
        ({ mkDerivation, aeson, base, exceptions, extra, fast-logger
         , filepath, monad-logger, monad-parallel, mtl, optparse-applicative
         , pipes, pipes-concurrency, stdenv, temporary, text, time
         , unordered-containers, yaml
         }:
         mkDerivation {
           pname = "omnifmt";
           version = "0.2.1.1";
           sha256 = "1964789180234ea2ae72fa397beab99985392dac86f527ec7866463288341731";
           revision = "1";
           editedCabalFile = "1yj2pbdyhj2qavx5aarcj6ncj1pkf7rs3cqm7k163rqyna811xji";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base exceptions extra filepath monad-logger mtl pipes text
             unordered-containers yaml
           ];
           executableHaskellDepends = [
             base exceptions extra fast-logger filepath monad-logger
             monad-parallel mtl optparse-applicative pipes pipes-concurrency
             temporary text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hjwylde/omnifmt";
           description = "A pretty-printer wrapper to faciliate ease of formatting during development";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "once" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv
         , template-haskell, unordered-containers
         }:
         mkDerivation {
           pname = "once";
           version = "0.1.0.0";
           sha256 = "9a59a79946079ea2d00469f9c4a6a319ad96425f38f4b90093789109c268a7ab";
           libraryHaskellDepends = [
             base containers hashable template-haskell unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://anonscm.debian.org/cgit/users/kaction-guest/haskell-once.git";
           description = "memoization for IO actions and functions";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "oo-prototypes" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "oo-prototypes";
           version = "0.1.0.0";
           sha256 = "9eaee40e3221f817b957e472917977bdb06ac0e163a0c6ef87941de29a12f576";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/oo-prototypes";
           description = "Support for OO-like prototypes";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "opaleye" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
         , bytestring, case-insensitive, contravariant, postgresql-simple
         , pretty, product-profunctors, profunctors, semigroups, stdenv
         , text, time, time-locale-compat, transformers, uuid, void
         }:
         mkDerivation {
           pname = "opaleye";
           version = "0.4.2.0";
           sha256 = "b924c4d0fa7151c0dbaee5ddcd89adfa569614204a805392625752ea6dc13c20";
           revision = "7";
           editedCabalFile = "14zsj9nmbcr1ix5f8i3kbw2m87d3rwafd33vhhajc15cj6r1xldk";
           libraryHaskellDepends = [
             aeson attoparsec base base16-bytestring bytestring case-insensitive
             contravariant postgresql-simple pretty product-profunctors
             profunctors semigroups text time time-locale-compat transformers
             uuid void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tomjaguarpaw/haskell-opaleye";
           description = "An SQL-generating DSL targeting PostgreSQL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "opaleye-trans" = callPackage
        ({ mkDerivation, base, mtl, opaleye, postgresql-simple
         , product-profunctors, stdenv, transformers, transformers-base
         }:
         mkDerivation {
           pname = "opaleye-trans";
           version = "0.3.3";
           sha256 = "7bfa05fc152921a8ab7ec6cba18be66f2cffb5840648e9c7a88e98c77cbfd841";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base mtl opaleye postgresql-simple product-profunctors transformers
             transformers-base
           ];
           executableHaskellDepends = [
             base opaleye postgresql-simple product-profunctors
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/WraithM/opaleye-trans";
           description = "A monad transformer for Opaleye";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "open-browser" = callPackage
        ({ mkDerivation, base, process, stdenv }:
         mkDerivation {
           pname = "open-browser";
           version = "0.2.1.0";
           sha256 = "0bed2e63800f738e78a4803ed22902accb50ac02068b96c17ce83a267244ca66";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base process ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rightfold/open-browser";
           description = "Open a web browser from Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "openpgp-asciiarmor" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
         , cereal, stdenv
         }:
         mkDerivation {
           pname = "openpgp-asciiarmor";
           version = "0.1";
           sha256 = "5cd45aad8fb9e0d07ed27da1801937b4d8598dac1c55bcfbfe11d9608f053bf7";
           libraryHaskellDepends = [
             attoparsec base base64-bytestring bytestring cereal
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/openpgp-asciiarmor";
           description = "OpenPGP (RFC4880) ASCII Armor codec";
           license = "unknown";
         }) {};
      "opensource" = callPackage
        ({ mkDerivation, aeson, base, http-client, http-client-tls, stdenv
         , text, transformers
         }:
         mkDerivation {
           pname = "opensource";
           version = "0.1.0.0";
           sha256 = "3459b6ce70fb8fc8bdf9d9f6ed0476724cb8a11b673fc60422edac2376620127";
           revision = "1";
           editedCabalFile = "02zb9m7d6fsjbqgwbjnkrpgqc93zm34bvzgasw903hhdkskshrp6";
           libraryHaskellDepends = [
             aeson base http-client http-client-tls text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://api.opensource.org/";
           description = "Haskell API Wrapper for the Open Source License API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "openssl-streams" = callPackage
        ({ mkDerivation, base, bytestring, HsOpenSSL, io-streams, network
         , stdenv
         }:
         mkDerivation {
           pname = "openssl-streams";
           version = "1.2.1.0";
           sha256 = "a9965909dc67261f9328ac4bb364181a37ba53fceac2c5de3629f0dd796219cb";
           libraryHaskellDepends = [
             base bytestring HsOpenSSL io-streams network
           ];
           doHaddock = false;
           doCheck = false;
           description = "OpenSSL network support for io-streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "operational" = callPackage
        ({ mkDerivation, base, mtl, random, stdenv }:
         mkDerivation {
           pname = "operational";
           version = "0.2.3.5";
           sha256 = "91d479063ae7ed3d0a6ae911bdee550fbf31cf341910f9778046b484c55b4af4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base mtl ];
           executableHaskellDepends = [ base mtl random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.haskell.org/Operational";
           description = "Implementation of difficult monads made easy with operational semantics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "operational-class" = callPackage
        ({ mkDerivation, base, operational, stdenv, transformers }:
         mkDerivation {
           pname = "operational-class";
           version = "0.3.0.0";
           sha256 = "8b28b9cb86a2dd520196f6a563538dc2c9e8730f0a0f5e5f3bca19559631e70b";
           libraryHaskellDepends = [ base operational transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/srijs/haskell-operational-class";
           description = "MonadProgram typeclass for the operational package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "opml-conduit" = callPackage
        ({ mkDerivation, base, case-insensitive, conduit, conduit-parse
         , containers, exceptions, foldl, lens-simple, mono-traversable
         , monoid-subclasses, parsers, semigroups, stdenv, text, time
         , timerep, uri-bytestring, xml-conduit, xml-conduit-parse
         , xml-types
         }:
         mkDerivation {
           pname = "opml-conduit";
           version = "0.5.0.1";
           sha256 = "69c22270aa0f3a9c45dcf993e9de06982a780b5e035e343f257bf9d8fd8a2533";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base case-insensitive conduit conduit-parse containers exceptions
             foldl lens-simple mono-traversable monoid-subclasses parsers
             semigroups text time timerep uri-bytestring xml-conduit
             xml-conduit-parse xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0ral/opml-conduit";
           description = "Streaming parser/renderer for the OPML 2.0 format.";
           license = "unknown";
         }) {};
      "optional-args" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "optional-args";
           version = "1.0.1";
           sha256 = "940604d6ebc1fb1b5372cb21e0b3870cd9d920655e41841844131994d1f1fd99";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Optional function arguments";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "options" = callPackage
        ({ mkDerivation, base, containers, monads-tf, stdenv, transformers
         }:
         mkDerivation {
           pname = "options";
           version = "1.2.1.1";
           sha256 = "283eea9ae2c539830c6c65f5c03fb00626cfd1274da0526c285c146fc3065a62";
           libraryHaskellDepends = [ base containers monads-tf transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-options/";
           description = "A powerful and easy-to-use command-line option parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "optparse-applicative" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, fail, process, semigroups
         , stdenv, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "optparse-applicative";
           version = "0.14.0.0";
           sha256 = "b55b32fdd5d101b2d6edb2746a66648fc2cd1b850d7adea185f201ac71b83c1a";
           libraryHaskellDepends = [
             ansi-wl-pprint base fail process semigroups transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pcapriotti/optparse-applicative";
           description = "Utilities and combinators for parsing command line options";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "optparse-generic" = callPackage
        ({ mkDerivation, base, bytestring, Only, optparse-applicative
         , semigroups, stdenv, system-filepath, text, time, transformers
         , void
         }:
         mkDerivation {
           pname = "optparse-generic";
           version = "1.3.0";
           sha256 = "80929958606e4a73672b570ba1a23493fbf46268666d14ab5af53623301c398f";
           libraryHaskellDepends = [
             base bytestring Only optparse-applicative semigroups
             system-filepath text time transformers void
           ];
           doHaddock = false;
           doCheck = false;
           description = "Auto-generate a command-line parser for your datatype";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "optparse-helper" = callPackage
        ({ mkDerivation, base, optparse-applicative, stdenv }:
         mkDerivation {
           pname = "optparse-helper";
           version = "0.2.1.1";
           sha256 = "0a0bbd3dd34f6b014bbb49bc14ed0bce597ab65711a856e173eb5f5a446d7510";
           libraryHaskellDepends = [ base optparse-applicative ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pharpend/optparse-helper";
           description = "Helper functions for optparse-applicative";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "optparse-simple" = callPackage
        ({ mkDerivation, base, either, gitrev, optparse-applicative, stdenv
         , template-haskell, transformers
         }:
         mkDerivation {
           pname = "optparse-simple";
           version = "0.0.3";
           sha256 = "4547f0a6c1bd959b1d9c3c2a5fabee39ac9a19dffabbb2d75461a2d461df8c7e";
           libraryHaskellDepends = [
             base either gitrev optparse-applicative template-haskell
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple interface to optparse-applicative";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "osdkeys" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , containers, libnotify, process, resourcet, stdenv, time
         , transformers
         }:
         mkDerivation {
           pname = "osdkeys";
           version = "0.0";
           sha256 = "dec832706085c29e571c92fee286378a8a8eac232b467b72336b2ca64a16eca2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra containers libnotify
             resourcet time transformers
           ];
           executableHaskellDepends = [ base process ];
           doHaddock = false;
           doCheck = false;
           description = "Show keys pressed with an on-screen display (Linux only)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "package-description-remote" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, lens, lens-aeson, stdenv
         , wreq
         }:
         mkDerivation {
           pname = "package-description-remote";
           version = "0.2.0.0";
           sha256 = "4a936d2346265d4d960875b12272e9f15aedf6aa6aa5f177f7ce30c7e4f68744";
           libraryHaskellDepends = [
             base bytestring Cabal lens lens-aeson wreq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yamadapc/stack-run-auto/package-description-remote";
           description = "Fetches a 'GenericPackageDescription' from Hackage";
           license = stdenv.lib.licenses.mit;
         }) {};
      "packdeps" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, directory
         , filepath, split, stdenv, tar, text, time
         }:
         mkDerivation {
           pname = "packdeps";
           version = "0.4.3";
           sha256 = "a8d4bd6ab9158d7fcd2ef4070b6a4c9196755f36bd9b5c8345bb7d76c6f1116b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring Cabal containers directory filepath split tar text
             time
           ];
           executableHaskellDepends = [ base Cabal ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://packdeps.haskellers.com/";
           description = "Check your cabal packages for lagging dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pager" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , directory, process, resourcet, safe, stdenv, terminfo, text
         , transformers, unix
         }:
         mkDerivation {
           pname = "pager";
           version = "0.1.1.0";
           sha256 = "3e1e4f2ca17be6dd68d2d480f29e7a770c0f7ca3109aa1980da677d96cd4eef3";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra directory process resourcet
             safe terminfo text transformers unix
           ];
           executableHaskellDepends = [ base bytestring conduit-extra text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pharpend/pager";
           description = "Open up a pager, like 'less' or 'more'";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "pagerduty" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, bytestring
         , bytestring-conversion, conduit, data-default-class, exceptions
         , generics-sop, http-client, http-types, lens, lens-aeson, mmorph
         , monad-control, mtl, stdenv, template-haskell, text, time
         , time-locale-compat, transformers, transformers-base
         , transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "pagerduty";
           version = "0.0.7";
           sha256 = "5e46075a080cf6c6561977e3f0cdd53a32a627b3a193d58c61a05e628757fe9c";
           libraryHaskellDepends = [
             aeson base bifunctors bytestring bytestring-conversion conduit
             data-default-class exceptions generics-sop http-client http-types
             lens lens-aeson mmorph monad-control mtl template-haskell text time
             time-locale-compat transformers transformers-base
             transformers-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/brendanhay/pagerduty";
           description = "Client library for PagerDuty Integration and REST APIs";
           license = "unknown";
         }) {};
      "palette" = callPackage
        ({ mkDerivation, array, base, colour, containers, stdenv }:
         mkDerivation {
           pname = "palette";
           version = "0.1.0.4";
           sha256 = "e6b3b4a0077d651ac7cb90c113ce7d6bd228aab57c9fe26e475abe6fcaada7cc";
           libraryHaskellDepends = [ array base colour containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Utilities for choosing and creating color schemes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pandoc" = callPackage
        ({ mkDerivation, aeson, array, base, base64-bytestring, binary
         , blaze-html, blaze-markup, bytestring, cmark, containers
         , data-default, deepseq, directory, extensible-exceptions
         , filemanip, filepath, ghc-prim, haddock-library, highlighting-kate
         , hslua, HTTP, http-client, http-client-tls, http-types
         , JuicyPixels, mtl, network, network-uri, old-time, pandoc-types
         , parsec, process, random, scientific, SHA, stdenv, syb, tagsoup
         , temporary, texmath, text, time, unordered-containers, vector, xml
         , yaml, zip-archive, zlib
         }:
         mkDerivation {
           pname = "pandoc";
           version = "1.17.1";
           sha256 = "5978baaf664ce254b508108a6be9d5a11a2c2ac61462ae85286be2ecdb010c86";
           revision = "1";
           editedCabalFile = "109n25sc32zf8a73q69q3wrzy6785nlzgawbmars1fmwb0gs3shc";
           configureFlags = [ "-fhttps" "-f-trypandoc" ];
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson array base base64-bytestring binary blaze-html blaze-markup
             bytestring cmark containers data-default deepseq directory
             extensible-exceptions filemanip filepath ghc-prim haddock-library
             highlighting-kate hslua HTTP http-client http-client-tls http-types
             JuicyPixels mtl network network-uri old-time pandoc-types parsec
             process random scientific SHA syb tagsoup temporary texmath text
             time unordered-containers vector xml yaml zip-archive zlib
           ];
           executableHaskellDepends = [
             aeson base bytestring containers directory extensible-exceptions
             filepath highlighting-kate HTTP network network-uri pandoc-types
             text yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://pandoc.org";
           description = "Conversion between markup formats";
           license = "GPL";
         }) {};
      "pandoc-citeproc" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, attoparsec, base, bytestring
         , Cabal, containers, data-default, directory, filepath, hs-bibutils
         , mtl, old-locale, pandoc, pandoc-types, parsec, rfc5051, setenv
         , split, stdenv, syb, tagsoup, text, time, unordered-containers
         , vector, xml-conduit, yaml
         }:
         mkDerivation {
           pname = "pandoc-citeproc";
           version = "0.9.1.1";
           sha256 = "15c89a9aa6bce4efd6b728ea16151eb6390cad0495eb82c50cbac490591c8f86";
           revision = "4";
           editedCabalFile = "0ycc37rz308xlhsk6zm2kvj72hr63j1jx7p3ykqz1i0nnvc7890c";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal directory ];
           libraryHaskellDepends = [
             aeson base bytestring containers data-default directory filepath
             hs-bibutils mtl old-locale pandoc pandoc-types parsec rfc5051
             setenv split syb tagsoup text time unordered-containers vector
             xml-conduit yaml
           ];
           executableHaskellDepends = [
             aeson aeson-pretty attoparsec base bytestring filepath pandoc
             pandoc-types syb text yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jgm/pandoc-citeproc";
           description = "Supports using pandoc with citeproc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pandoc-types" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, deepseq
         , ghc-prim, stdenv, syb
         }:
         mkDerivation {
           pname = "pandoc-types";
           version = "1.16.1.1";
           sha256 = "f8feb3aef9adc16e7a81d4fd4548e5a142366c59a826272f9b04a9dddbfb9524";
           libraryHaskellDepends = [
             aeson base bytestring containers deepseq ghc-prim syb
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://johnmacfarlane.net/pandoc";
           description = "Types for representing a structured document";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pango" = callPackage
        ({ mkDerivation, array, base, cairo, containers, directory, glib
         , gtk2hs-buildtools, mtl, pango, pretty, process, stdenv, text
         }:
         mkDerivation {
           pname = "pango";
           version = "0.13.1.1";
           sha256 = "3c22f339fe2e30cb6d6cbc5906e1064c5fdabfbc56d2a2c015ac70b4aa5165ad";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base cairo containers directory glib mtl pretty process text
           ];
           libraryPkgconfigDepends = [ pango ];
           libraryToolDepends = [ gtk2hs-buildtools ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Binding to the Pango text rendering engine";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) pango;};
      "parallel" = callPackage
        ({ mkDerivation, array, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "parallel";
           version = "3.2.1.0";
           sha256 = "4de3cdbb71dfd13cbb70a1dc1d1d5cf34fbe9828e05eb02b3dc658fdc2148526";
           revision = "1";
           editedCabalFile = "03s4bh0ib18y684l6rm3rg6asd2a69wva0wg9404hqfglndg5m58";
           libraryHaskellDepends = [ array base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "Parallel programming library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parallel-io" = callPackage
        ({ mkDerivation, base, containers, extensible-exceptions, random
         , stdenv
         }:
         mkDerivation {
           pname = "parallel-io";
           version = "0.3.3";
           sha256 = "3a14c02b9b8b7c72577eb90a8dd72de75d99192def87d7aa79545ee4d6e80645";
           revision = "1";
           editedCabalFile = "1vlb2x1ghih4l64031rmh7h643c3knh5r5mwilf7g8izb58ypvkm";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers extensible-exceptions random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://batterseapower.github.com/parallel-io";
           description = "Combinators for executing IO actions in parallel on a thread pool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parseargs" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "parseargs";
           version = "0.2.0.8";
           sha256 = "7b789204c15d0c478db3d133f349a6970b5509fc6af655faedc03c7426dcf7d6";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/BartMassey/parseargs";
           description = "Full-featured command-line argument parsing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parsec" = callPackage
        ({ mkDerivation, base, bytestring, fail, mtl, semigroups, stdenv
         , text
         }:
         mkDerivation {
           pname = "parsec";
           version = "3.1.13.0";
           sha256 = "7861ae437a6177ee7c08899432fd8c062e7c110361da48a9f9e88263fd4d80f1";
           revision = "2";
           editedCabalFile = "032sizm03m2vdqshkv4sdviyka05gqf8gs6r4hqf9did177i0qnm";
           libraryHaskellDepends = [
             base bytestring fail mtl semigroups text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/parsec";
           description = "Monadic parser combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parser-combinators" = callPackage
        ({ mkDerivation, base, semigroups, stdenv }:
         mkDerivation {
           pname = "parser-combinators";
           version = "0.4.0";
           sha256 = "b124e9411de085972e4d9ae8254299e8e773e964b2798eb400d5cf6814f8f3ab";
           libraryHaskellDepends = [ base semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/parser-combinators";
           description = "Lightweight package providing commonly useful parser combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parsers" = callPackage
        ({ mkDerivation, attoparsec, base, base-orphans, charset
         , containers, parsec, scientific, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "parsers";
           version = "0.12.4";
           sha256 = "2781a27d40f0019fc671b483ca47276c826621e1daa42f08846af8e40e94ca1e";
           revision = "1";
           editedCabalFile = "1y63jydbb5jsxj66ac0wljk0dyg4prrn2ik1rm636v9g0s8lf2di";
           libraryHaskellDepends = [
             attoparsec base base-orphans charset containers parsec scientific
             text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/parsers/";
           description = "Parsing combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "partial-handler" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "partial-handler";
           version = "1.0.2";
           sha256 = "fae9f291f4146631eb3be173299bbc7755343a0e9b74e62ee1921e209a6aa4f1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/partial-handler";
           description = "A composable exception handler";
           license = stdenv.lib.licenses.mit;
         }) {};
      "partial-isomorphisms" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "partial-isomorphisms";
           version = "0.2";
           sha256 = "fd92b4a0e8346802e02423344fff6ce1817f14de0f0950f4b839c5735be8b472";
           revision = "1";
           editedCabalFile = "1jawkq0bvzwln33fgwm56az923phmqa022kr5drcspgqnkj0m63a";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.informatik.uni-marburg.de/~rendel/unparse";
           description = "Partial isomorphisms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "patches-vector" = callPackage
        ({ mkDerivation, base, edit-distance-vector, microlens, stdenv
         , vector
         }:
         mkDerivation {
           pname = "patches-vector";
           version = "0.1.5.4";
           sha256 = "f4c938988ad98883b98db10a32d4d544c39f98fc77b4e2c8da393718ef30da54";
           libraryHaskellDepends = [
             base edit-distance-vector microlens vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liamoc/patches-vector";
           description = "Patches (diffs) on vectors: composable, mergeable, and invertible";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path" = callPackage
        ({ mkDerivation, aeson, base, deepseq, exceptions, filepath, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "path";
           version = "0.5.11";
           sha256 = "bf0d9ea00271017893f59d5e136cb22116278220899609104d7906635286ac14";
           revision = "1";
           editedCabalFile = "15y1sahs0apbwnxgxk1a31rw9dqkfp116dx1j1whdka9h2dxijm7";
           libraryHaskellDepends = [
             aeson base deepseq exceptions filepath template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Support for well-typed paths";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path-extra" = callPackage
        ({ mkDerivation, base, exceptions, path, stdenv }:
         mkDerivation {
           pname = "path-extra";
           version = "0.0.3";
           sha256 = "55043bb37a3aaecd162d336c19483b3fb36397fa6cd48a182caf876502638b59";
           libraryHaskellDepends = [ base exceptions path ];
           doHaddock = false;
           doCheck = false;
           description = "Chris Done's path library, enriched with URL-related goodies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path-io" = callPackage
        ({ mkDerivation, base, directory, exceptions, filepath, path
         , stdenv, temporary, time, transformers
         }:
         mkDerivation {
           pname = "path-io";
           version = "1.1.0";
           sha256 = "b94af45683e0c39d259fac8cad906957b97991a3cdac45e067fd1dc9baebe59f";
           libraryHaskellDepends = [
             base directory exceptions filepath path temporary time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/path-io";
           description = "Interface to ‘directory’ package for users of ‘path’";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path-pieces" = callPackage
        ({ mkDerivation, base, stdenv, text, time }:
         mkDerivation {
           pname = "path-pieces";
           version = "0.2.1";
           sha256 = "080bd49f53e20597ca3e5962e0c279a3422345f5b088840a30a751cd76d4a36f";
           revision = "1";
           editedCabalFile = "0p7wsphh513s8l5d62lzgbhk2l1h6kj5y7bc27qqjsry9g8ah4y7";
           libraryHaskellDepends = [ base text time ];
           doHaddock = false;
           doCheck = false;
           description = "Components of paths";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pathwalk" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv, transformers }:
         mkDerivation {
           pname = "pathwalk";
           version = "0.3.1.2";
           sha256 = "76e0d0646a3133a062dbae4e9d37d59e71d6328706bb178552a93800e4550e91";
           libraryHaskellDepends = [ base directory filepath transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Xe/pathwalk";
           description = "Path walking utilities for Haskell programs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "patience" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "patience";
           version = "0.1.1";
           sha256 = "35c7c334d344b3cbdc61cc88c559bedb300ace860a80e3990aeb268f1f10db63";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Patience diff and longest increasing subsequence";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pattern-arrows" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "pattern-arrows";
           version = "0.0.2";
           sha256 = "6fc2d972e72785d727d2b68e1f82ef94a2c93cedbc00e6a4cdc03498825c078f";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://blog.functorial.com/posts/2013-10-27-Pretty-Printing-Arrows.html";
           description = "Arrows for Pretty Printing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pcap" = callPackage
        ({ mkDerivation, base, bytestring, network, stdenv, time }:
         mkDerivation {
           pname = "pcap";
           version = "0.4.5.2";
           sha256 = "e7e92e6ff4bffa22102335a38dabb97fd0771fdf3b75d45cd7c1708c85e1cd5f";
           libraryHaskellDepends = [ base bytestring network time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/pcap";
           description = "A system-independent interface for user-level packet capture";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pcre-heavy" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, pcre-light
         , semigroups, stdenv, string-conversions, template-haskell
         }:
         mkDerivation {
           pname = "pcre-heavy";
           version = "1.0.0.2";
           sha256 = "8a5cf697b7683127812450cef57d0d74ac5c1117ec80618d10509642f793cbd1";
           libraryHaskellDepends = [
             base base-compat bytestring pcre-light semigroups
             string-conversions template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/pcre-heavy";
           description = "A regexp library on top of pcre-light you can actually use";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "pcre-light" = callPackage
        ({ mkDerivation, base, bytestring, pcre, stdenv }:
         mkDerivation {
           pname = "pcre-light";
           version = "0.4.0.4";
           sha256 = "02c97e39263d18fd26aa63d52c88c4bfbb5c3f66ab40564552e7f11d5d889e75";
           libraryHaskellDepends = [ base bytestring ];
           libraryPkgconfigDepends = [ pcre ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/pcre-light";
           description = "Portable regex library for Perl 5 compatible regular expressions";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) pcre;};
      "pcre-utils" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, mtl
         , regex-pcre-builtin, stdenv, vector
         }:
         mkDerivation {
           pname = "pcre-utils";
           version = "0.1.8.1";
           sha256 = "6c2fc14e13b3e0b2b09f188ee32affa9fe60755cc87409255f5ec8cbd8971ed7";
           libraryHaskellDepends = [
             array attoparsec base bytestring mtl regex-pcre-builtin vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bartavelle/pcre-utils";
           description = "Perl-like substitute and split for PCRE regexps";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pdf-toolbox-content" = callPackage
        ({ mkDerivation, attoparsec, base, base16-bytestring, bytestring
         , containers, io-streams, pdf-toolbox-core, stdenv, text
         }:
         mkDerivation {
           pname = "pdf-toolbox-content";
           version = "0.0.5.1";
           sha256 = "1c104e232e178603ff9dd8c6eaaf0ccbda918c70b40ed63f08fa1922a3c88488";
           libraryHaskellDepends = [
             attoparsec base base16-bytestring bytestring containers io-streams
             pdf-toolbox-core text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/pdf-toolbox";
           description = "A collection of tools for processing PDF files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pdf-toolbox-core" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers, errors
         , io-streams, scientific, stdenv, transformers, zlib-bindings
         }:
         mkDerivation {
           pname = "pdf-toolbox-core";
           version = "0.0.4.1";
           sha256 = "cce3949ef5596b5d61032ce1547160dc5f52e3d5c556dcdb9aabf1582173a981";
           libraryHaskellDepends = [
             attoparsec base bytestring containers errors io-streams scientific
             transformers zlib-bindings
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/pdf-toolbox";
           description = "A collection of tools for processing PDF files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pdf-toolbox-document" = callPackage
        ({ mkDerivation, base, bytestring, cipher-aes, cipher-rc4
         , containers, crypto-api, cryptohash, io-streams
         , pdf-toolbox-content, pdf-toolbox-core, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "pdf-toolbox-document";
           version = "0.0.7.1";
           sha256 = "3f7d379baa85c1cf9998e3f84177ad24b5cc8632fb211af7a09603e59596f0e1";
           libraryHaskellDepends = [
             base bytestring cipher-aes cipher-rc4 containers crypto-api
             cryptohash io-streams pdf-toolbox-content pdf-toolbox-core text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/pdf-toolbox";
           description = "A collection of tools for processing PDF files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pdfinfo" = callPackage
        ({ mkDerivation, base, mtl, old-locale, process-extras, stdenv
         , text, time, time-locale-compat
         }:
         mkDerivation {
           pname = "pdfinfo";
           version = "1.5.4";
           sha256 = "9a6a1f7d8ab0a5e8f7f8276da070ccddec140d6b2549b084042159b639230911";
           libraryHaskellDepends = [
             base mtl old-locale process-extras text time time-locale-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/pdfinfo";
           description = "Wrapper around the pdfinfo command";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pem" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, mtl, stdenv
         }:
         mkDerivation {
           pname = "pem";
           version = "0.2.2";
           sha256 = "372808c76c6d860aedb4e30171cb4ee9f6154d9f68e3f2310f820bf174995a98";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base base64-bytestring bytestring mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-pem";
           description = "Privacy Enhanced Mail (PEM) format reader and writer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "permutation" = callPackage
        ({ mkDerivation, base, Cabal, ghc-prim, process, QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "permutation";
           version = "0.5.0.5";
           sha256 = "51b5caa115625e6b9a3b2f2240f1142c0cc6c31c351027abbcaea569f419a700";
           revision = "1";
           editedCabalFile = "0lrargadwkwzzvajfiay8vkq1byh56kbr2h9ba9cfbpqwb4s90j9";
           setupHaskellDepends = [ base Cabal process ];
           libraryHaskellDepends = [ base ghc-prim QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/spacekitteh/permutation";
           description = "A library for permutations and combinations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistable-record" = callPackage
        ({ mkDerivation, array, base, containers, dlist, names-th, stdenv
         , template-haskell, th-data-compat, transformers
         }:
         mkDerivation {
           pname = "persistable-record";
           version = "0.4.1.0";
           sha256 = "5bf42a49a7efa127b5f5308ed812c367d3fe1afe499f32e24d0ac0f846df7619";
           revision = "1";
           editedCabalFile = "1n0k70v093rzjcma4d7hvhz0mcj4l23yvr6m6fi4l6hd0gbsib11";
           libraryHaskellDepends = [
             array base containers dlist names-th template-haskell
             th-data-compat transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Binding between SQL database values and haskell records";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistable-types-HDBC-pg" = callPackage
        ({ mkDerivation, base, bytestring, convertible, HDBC
         , persistable-record, relational-query-HDBC, stdenv
         , text-postgresql
         }:
         mkDerivation {
           pname = "persistable-types-HDBC-pg";
           version = "0.0.1.4";
           sha256 = "ceb2435916ddbab3062ce2bd3794d1ba901dd3004f3db58cf9520b6d2459565b";
           libraryHaskellDepends = [
             base bytestring convertible HDBC persistable-record
             relational-query-HDBC text-postgresql
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "HDBC and Relational-Record instances of PostgreSQL extended types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistent" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-html, blaze-markup, bytestring, conduit, containers
         , exceptions, fast-logger, http-api-data, lifted-base
         , monad-control, monad-logger, mtl, old-locale, path-pieces
         , resource-pool, resourcet, scientific, silently, stdenv, tagged
         , template-haskell, text, time, transformers, transformers-base
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "persistent";
           version = "2.2.4.1";
           sha256 = "1473bdd952854d7f5fdb5896d2df07ef1ecf301c7fdb136054f49625329d50db";
           revision = "1";
           editedCabalFile = "0z2vkfaapxfjk0n98vsls55jr70gky01pc7ydm4k4xgp7q6jv12r";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring blaze-html blaze-markup
             bytestring conduit containers exceptions fast-logger http-api-data
             lifted-base monad-control monad-logger mtl old-locale path-pieces
             resource-pool resourcet scientific silently tagged template-haskell
             text time transformers transformers-base unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Type-safe, multi-backend data serialization";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-mongoDB" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bson, bytestring, cereal
         , conduit, containers, http-api-data, monad-control, mongoDB
         , network, path-pieces, persistent, resource-pool, resourcet
         , stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "persistent-mongoDB";
           version = "2.1.4";
           sha256 = "06b9d86c6f6b68025a86bd9cc62595bda303007f4da721764241d160f23766a2";
           libraryHaskellDepends = [
             aeson attoparsec base bson bytestring cereal conduit containers
             http-api-data monad-control mongoDB network path-pieces persistent
             resource-pool resourcet text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Backend for the persistent library using mongoDB";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-mysql" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
         , containers, monad-control, monad-logger, mysql, mysql-simple
         , persistent, resourcet, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "persistent-mysql";
           version = "2.3.0.2";
           sha256 = "7e1c21ee07df97172528c83709a4435040e477e46e1d558f3dd5bcda84c4f033";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring conduit containers
             monad-control monad-logger mysql mysql-simple persistent resourcet
             text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Backend for the persistent library using MySQL database server";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-postgresql" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
         , containers, monad-control, monad-logger, persistent
         , postgresql-libpq, postgresql-simple, resourcet, stdenv, text
         , time, transformers
         }:
         mkDerivation {
           pname = "persistent-postgresql";
           version = "2.2.2";
           sha256 = "7ec31242349f8ea7da149991fbe3366a6a83f3e3915392c997b3c34fc27671cd";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring conduit containers
             monad-control monad-logger persistent postgresql-libpq
             postgresql-simple resourcet text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Backend for the persistent library using postgresql";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-refs" = callPackage
        ({ mkDerivation, base, containers, mtl, ref-fd, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "persistent-refs";
           version = "0.4";
           sha256 = "46b310e034e23993e7da740d388e06e410483ada05cbcc8c0a4953ee19f8d0d3";
           libraryHaskellDepends = [
             base containers mtl ref-fd transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acfoltzer/persistent-refs";
           description = "Haskell references backed by an IntMap for persistence and reversibility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistent-sqlite" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, containers
         , monad-control, monad-logger, old-locale, persistent, resourcet
         , sqlite, stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "persistent-sqlite";
           version = "2.2.1";
           sha256 = "bac71080bb25ad20b9116e42df463bbe230bacb2d963a5b101a501cff7fffc5e";
           configureFlags = [ "-fsystemlib" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring conduit containers monad-control monad-logger
             old-locale persistent resourcet text time transformers
           ];
           librarySystemDepends = [ sqlite ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Backend for the persistent library using sqlite3";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) sqlite;};
      "persistent-template" = callPackage
        ({ mkDerivation, aeson, aeson-compat, base, bytestring, containers
         , ghc-prim, http-api-data, monad-control, monad-logger, path-pieces
         , persistent, stdenv, tagged, template-haskell, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "persistent-template";
           version = "2.1.8.1";
           sha256 = "34911f40028357567717f6724abae4e6fc905567ffc8ba8ee5042e9680b2f168";
           libraryHaskellDepends = [
             aeson aeson-compat base bytestring containers ghc-prim
             http-api-data monad-control monad-logger path-pieces persistent
             tagged template-haskell text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Type-safe, non-relational, multi-backend persistence";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pgp-wordlist" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text, vector
         }:
         mkDerivation {
           pname = "pgp-wordlist";
           version = "0.1.0.1";
           sha256 = "a3dde976bc94fc83e8dce20cdafe673f5afdc741ac0360098ee8b415a0436d88";
           libraryHaskellDepends = [ base bytestring containers text vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/quchen/pgp-wordlist";
           description = "Translate between binary data and a human-readable collection of words";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "phantom-state" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "phantom-state";
           version = "0.2.1.2";
           sha256 = "f978ef98e810e9a9e53f1479340ba7a28f80a64aba431322959cbf8c620c3811";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Phantom State Transformer. Like State Monad, but without values.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "picoparsec" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , monoid-subclasses, scientific, stdenv, text
         }:
         mkDerivation {
           pname = "picoparsec";
           version = "0.1.2.3";
           sha256 = "8ec7ed678efaf62de15b7c2f1d21f1ddf8b92f5fa233eed9534c12e8812e9150";
           libraryHaskellDepends = [
             array base bytestring containers deepseq monoid-subclasses
             scientific text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/blamario/picoparsec";
           description = "Fast combinator parsing for bytestrings and text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pinch" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , ghc-prim, hashable, stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "pinch";
           version = "0.2.0.2";
           sha256 = "be722c513c696845e2a04758639b661b065cd821d4e5f608fc1ec74fe18a0e0f";
           libraryHaskellDepends = [
             array base bytestring containers deepseq ghc-prim hashable text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/abhinav/pinch#readme";
           description = "An alternative implementation of Thrift for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pinchot" = callPackage
        ({ mkDerivation, base, containers, Earley, lens, ListLike
         , semigroups, stdenv, template-haskell, transformers
         }:
         mkDerivation {
           pname = "pinchot";
           version = "0.18.2.0";
           sha256 = "a32dfa0aff4761bca3c9d99755814a3acc2962197dff5b07b565c77e90bb4ed6";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers Earley lens ListLike semigroups template-haskell
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/pinchot";
           description = "Write grammars, not parsers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes" = callPackage
        ({ mkDerivation, base, mmorph, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "pipes";
           version = "4.1.9";
           sha256 = "c2d5d08761bbb62dca03f81b3d99bb2f50a386c52c30b2abc8c3ca8aabdea3ea";
           revision = "1";
           editedCabalFile = "187axgb56n870cwnknsk2fz0ky2dl6yr8c89awnv91zi1z4g31np";
           libraryHaskellDepends = [ base mmorph mtl transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Compositional pipelines";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-aeson" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, pipes
         , pipes-attoparsec, pipes-bytestring, pipes-parse, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "pipes-aeson";
           version = "0.4.1.7";
           sha256 = "c7cfb199fe3160e3b87f70017050dec94451a4cbc56d3956c91ca007ce5cb8cd";
           revision = "1";
           editedCabalFile = "0v981ln4hb4rsb6jxz07gijg3xdlc9hb5d86rn44k5yyfkh7drvw";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring pipes pipes-attoparsec
             pipes-bytestring pipes-parse transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-aeson";
           description = "Encode and decode JSON streams using Aeson and Pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, pipes, pipes-parse
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "pipes-attoparsec";
           version = "0.5.1.4";
           sha256 = "fab0a84f9f81e6ae06eae85fd895f0cb8c698723cab7f33addaf5d14cd553507";
           revision = "1";
           editedCabalFile = "1pafyfjfvdpflrq292a3c46d4brqw2k9cgvz4qbyv60fwpc1h0n9";
           libraryHaskellDepends = [
             attoparsec base bytestring pipes pipes-parse text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-attoparsec";
           description = "Attoparsec and Pipes integration";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-bgzf" = callPackage
        ({ mkDerivation, base, bytestring, mtl, parallel, pipes, stdenv
         , streaming-commons
         }:
         mkDerivation {
           pname = "pipes-bgzf";
           version = "0.2.0.1";
           sha256 = "43ec9888b51def483a701e56443b62c00ec37aa2d9e0ee3b314fa084fce7c013";
           libraryHaskellDepends = [
             base bytestring mtl parallel pipes streaming-commons
           ];
           doHaddock = false;
           doCheck = false;
           description = "Blocked GZip";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-binary" = callPackage
        ({ mkDerivation, base, binary, bytestring, ghc-prim, pipes
         , pipes-bytestring, pipes-parse, stdenv, transformers
         }:
         mkDerivation {
           pname = "pipes-binary";
           version = "0.4.1";
           sha256 = "1b6e79748f2579285ba416c02c1461fee394309f79b94f9d5c874bbf6f79d637";
           libraryHaskellDepends = [
             base binary bytestring ghc-prim pipes pipes-bytestring pipes-parse
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-binary";
           description = "Encode and decode binary streams using the pipes and binary libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, pipes, pipes-group, pipes-parse
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "pipes-bytestring";
           version = "2.1.4";
           sha256 = "6c3f72de28aa538887f6c442884e88a4a0219057998e3710b81439dcb4466deb";
           libraryHaskellDepends = [
             base bytestring pipes pipes-group pipes-parse transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "ByteString support for pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-cacophony" = callPackage
        ({ mkDerivation, base, bytestring, cacophony, pipes, stdenv }:
         mkDerivation {
           pname = "pipes-cacophony";
           version = "0.2.1";
           sha256 = "c112376b75e744e15006b81ecd9b60bee10be6a54cca6c2fd6b7f5f7e8d99041";
           libraryHaskellDepends = [ base bytestring cacophony pipes ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/centromere/pipes-cacophony";
           description = "Pipes for Noise-secured network connections";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "pipes-cliff" = callPackage
        ({ mkDerivation, async, base, bytestring, pipes, pipes-safe
         , process, stdenv, stm
         }:
         mkDerivation {
           pname = "pipes-cliff";
           version = "0.10.0.4";
           sha256 = "3d92b54e773e98996cbc1c753892e7400540d925f913d187b940e7425dfdef33";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base bytestring pipes pipes-safe process stm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/pipes-cliff";
           description = "Streaming to and from subprocesses using Pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-concurrency" = callPackage
        ({ mkDerivation, base, contravariant, pipes, stdenv, stm, void }:
         mkDerivation {
           pname = "pipes-concurrency";
           version = "2.0.7";
           sha256 = "14a47f0096361b495330b4489c3534ee37f507550ffa2f57cb0e70362df47559";
           libraryHaskellDepends = [ base contravariant pipes stm void ];
           doHaddock = false;
           doCheck = false;
           description = "Concurrency for the pipes ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-csv" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, cassava, pipes
         , stdenv, unordered-containers, vector
         }:
         mkDerivation {
           pname = "pipes-csv";
           version = "1.4.3";
           sha256 = "9485f5ddd56ec9bb10d26cdf2b5b67754726e36b167652b11cb0a42acbda68b3";
           libraryHaskellDepends = [
             base blaze-builder bytestring cassava pipes unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Fast, streaming csv parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pipes-extras" = callPackage
        ({ mkDerivation, base, foldl, pipes, stdenv, transformers }:
         mkDerivation {
           pname = "pipes-extras";
           version = "1.0.8";
           sha256 = "4d0f7932212988b5e4c661238d66db316cd11bae15506a87d925ae058194d37b";
           libraryHaskellDepends = [ base foldl pipes transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Extra utilities for pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-fastx" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, pipes
         , pipes-attoparsec, pipes-bytestring, stdenv
         }:
         mkDerivation {
           pname = "pipes-fastx";
           version = "0.3.0.0";
           sha256 = "31264ba760bae1df3170a7d8da32f3e3fcb289545a33f369a94732e55e08ba75";
           libraryHaskellDepends = [
             attoparsec base bytestring pipes pipes-attoparsec pipes-bytestring
           ];
           doHaddock = false;
           doCheck = false;
           description = "Streaming parsers for Fasta and Fastq";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-group" = callPackage
        ({ mkDerivation, base, free, pipes, pipes-parse, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "pipes-group";
           version = "1.0.6";
           sha256 = "07ad6f6ba7675b59aeb3be77171170da99a6f54e18b8d477d52f94b05e8ab766";
           libraryHaskellDepends = [
             base free pipes pipes-parse transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Group streams into substreams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-http" = callPackage
        ({ mkDerivation, base, bytestring, http-client, http-client-tls
         , pipes, stdenv
         }:
         mkDerivation {
           pname = "pipes-http";
           version = "1.0.4";
           sha256 = "f5cff84b9f415f1a65dbe04837884793fa10b1b52e96b29d52987b820c5a0216";
           libraryHaskellDepends = [
             base bytestring http-client http-client-tls pipes
           ];
           doHaddock = false;
           doCheck = false;
           description = "HTTP client with pipes interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-illumina" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, pipes
         , pipes-bgzf, stdenv
         }:
         mkDerivation {
           pname = "pipes-illumina";
           version = "0.1.0.0";
           sha256 = "76cba39a2276c7d6c0fb0b1036e87f5619edd6746760ea4848d1d6edf2cc46a7";
           libraryHaskellDepends = [
             base bytestring directory filepath pipes pipes-bgzf
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/rcallahan/pipes-illumina";
           description = "Illumina NGS data processing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-mongodb" = callPackage
        ({ mkDerivation, base, monad-control, mongoDB, pipes, stdenv }:
         mkDerivation {
           pname = "pipes-mongodb";
           version = "0.1.0.0";
           sha256 = "0821194bdf7f377beeb20fc8f697ed5388a221b6e8e42c513eea67a91c198340";
           libraryHaskellDepends = [ base monad-control mongoDB pipes ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jb55/pipes-mongodb";
           description = "Stream results from MongoDB";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pipes-network" = callPackage
        ({ mkDerivation, base, bytestring, network, network-simple, pipes
         , pipes-safe, stdenv, transformers
         }:
         mkDerivation {
           pname = "pipes-network";
           version = "0.6.4.1";
           sha256 = "a8624aec78e2d2a814956d6759a8d3e18811a82d245480f0404fe408f951a0af";
           revision = "1";
           editedCabalFile = "0i7iyzsj6hax7k66rcrkqgkd7z5z65ak77jmg9mdlm13q12r6kih";
           libraryHaskellDepends = [
             base bytestring network network-simple pipes pipes-safe
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-network";
           description = "Use network sockets together with the pipes library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-parse" = callPackage
        ({ mkDerivation, base, pipes, stdenv, transformers }:
         mkDerivation {
           pname = "pipes-parse";
           version = "3.0.8";
           sha256 = "d28f831b2c8229cca567ee95570787d2dd3f5cfcff3b3c44ee308360a8c107a9";
           libraryHaskellDepends = [ base pipes transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Parsing infrastructure for the pipes ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-safe" = callPackage
        ({ mkDerivation, base, containers, exceptions, monad-control, mtl
         , pipes, stdenv, transformers, transformers-base
         }:
         mkDerivation {
           pname = "pipes-safe";
           version = "2.2.4";
           sha256 = "502dca5ab38596c70917906ed979f917db52ed91b938d52d96dcb7c56735486e";
           revision = "1";
           editedCabalFile = "0wz8b1nhxji107lvrxdcgdal7v861847z1svg61as0zdv4sqh769";
           libraryHaskellDepends = [
             base containers exceptions monad-control mtl pipes transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "Safety for the pipes ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-text" = callPackage
        ({ mkDerivation, base, bytestring, pipes, pipes-bytestring
         , pipes-group, pipes-parse, pipes-safe, stdenv, streaming-commons
         , text, transformers
         }:
         mkDerivation {
           pname = "pipes-text";
           version = "0.0.2.5";
           sha256 = "4489ee02a8ebfd87049fc4dd1380b21e6f33984eb0101c836ab8e054759c0f2a";
           libraryHaskellDepends = [
             base bytestring pipes pipes-bytestring pipes-group pipes-parse
             pipes-safe streaming-commons text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michaelt/text-pipes";
           description = "properly streaming text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-transduce" = callPackage
        ({ mkDerivation, base, bifunctors, bytestring, conceit, foldl, free
         , microlens, pipes, pipes-bytestring, pipes-concurrency
         , pipes-group, pipes-parse, pipes-safe, pipes-text, stdenv, text
         , transformers, void
         }:
         mkDerivation {
           pname = "pipes-transduce";
           version = "0.4";
           sha256 = "984d8cf42d3614e87e2bd2178bbe04237d83b9385b3b39df32e2f8bc0e972c4f";
           libraryHaskellDepends = [
             base bifunctors bytestring conceit foldl free microlens pipes
             pipes-bytestring pipes-concurrency pipes-group pipes-parse
             pipes-safe pipes-text text transformers void
           ];
           doHaddock = false;
           doCheck = false;
           description = "Interfacing pipes with foldl folds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-wai" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, http-types, pipes
         , stdenv, transformers, wai
         }:
         mkDerivation {
           pname = "pipes-wai";
           version = "3.2.0";
           sha256 = "04a670df140c12b64f6f0d04b3c5571527f144ee429e7030bb62ec8785056d2a";
           libraryHaskellDepends = [
             base blaze-builder bytestring http-types pipes transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/iand675/pipes-wai";
           description = "A port of wai-conduit for the pipes ecosystem";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pkcs10" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
         , bytestring, cryptonite, pem, stdenv, x509
         }:
         mkDerivation {
           pname = "pkcs10";
           version = "0.1.1.0";
           sha256 = "1d4665fa5a429e859535e132c507b1e1ec713de50d3e085de9731bbd1c9cbeec";
           libraryHaskellDepends = [
             asn1-encoding asn1-parse asn1-types base bytestring cryptonite pem
             x509
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fcomb/pkcs10-hs#readme";
           description = "PKCS#10 library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "placeholders" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "placeholders";
           version = "0.1";
           sha256 = "652a78553dcaf6e11b4cd8f0e60010b32da299fbe57721df4bf9157e852d0346";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ahammar/placeholders";
           description = "Placeholders for use while developing Haskell code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "plan-b" = callPackage
        ({ mkDerivation, base, exceptions, path, path-io, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "plan-b";
           version = "0.2.0";
           sha256 = "f1654b249a0ee36a5a6ed1a85d2ab4641405d9b28ebe57ded594b7c65180c769";
           libraryHaskellDepends = [
             base exceptions path path-io transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/plan-b";
           description = "Failure-tolerant file and directory editing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "plot" = callPackage
        ({ mkDerivation, array, base, cairo, colour, hmatrix, mtl, pango
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "plot";
           version = "0.2.3.5";
           sha256 = "db5d69d5249e562eaedaa0887075dc43142ddb20260ddc746b501b8b2ed58483";
           libraryHaskellDepends = [
             array base cairo colour hmatrix mtl pango transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/amcphail/plot";
           description = "A plotting library, exportable as eps/pdf/svg/png or renderable with gtk";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "plot-gtk" = callPackage
        ({ mkDerivation, base, glib, gtk, hmatrix, mtl, plot, process
         , stdenv
         }:
         mkDerivation {
           pname = "plot-gtk";
           version = "0.2.0.4";
           sha256 = "9c0a445162ae66c2badd8b6b0a760f5ee4ac4861852764eb4a550787de2c07bb";
           libraryHaskellDepends = [ base glib gtk hmatrix mtl plot process ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/plot";
           description = "GTK plots and interaction with GHCi";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "plot-gtk-ui" = callPackage
        ({ mkDerivation, base, cairo, colour, fixed-vector, gtk, hmatrix
         , plot, stdenv, text, vector
         }:
         mkDerivation {
           pname = "plot-gtk-ui";
           version = "0.3.0.2";
           sha256 = "e7e89440798058ef082dc268795a482b9462d21ff08336bb8517b6830c0518da";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base cairo colour fixed-vector gtk hmatrix plot text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sumitsahrawat/plot-gtk-ui";
           description = "A quick way to use Mathematica like Manipulation abilities";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "plot-gtk3" = callPackage
        ({ mkDerivation, base, glib, gtk3, hmatrix, mtl, plot, process
         , stdenv
         }:
         mkDerivation {
           pname = "plot-gtk3";
           version = "0.1.0.2";
           sha256 = "79098174d2a1bf5f715bc6b68bf0086036603d77a6c55cc95babc201355dd1d9";
           libraryHaskellDepends = [
             base glib gtk3 hmatrix mtl plot process
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/plot";
           description = "GTK3 plots and interaction with GHCi";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pointed" = callPackage
        ({ mkDerivation, base, comonad, containers, data-default-class
         , hashable, kan-extensions, semigroupoids, semigroups, stdenv, stm
         , tagged, transformers, transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "pointed";
           version = "4.2.0.2";
           sha256 = "4b8a8a5ad5a54715f6a58090d820657a2f2de4176d899ad736ebd0e54de7da7a";
           revision = "1";
           editedCabalFile = "0km48l21052l9gm39w113sd1vxhbz6mcxjkkybhjrfamgm9z48sc";
           libraryHaskellDepends = [
             base comonad containers data-default-class hashable kan-extensions
             semigroupoids semigroups stm tagged transformers
             transformers-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/pointed/";
           description = "Pointed and copointed data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pointedlist" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "pointedlist";
           version = "0.6.1";
           sha256 = "743cb0f89cbb128f8aa24c4519b262b561bf2cd607f83e94f9241e8af1cfba9b";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           description = "A zipper-like comonad which works as a list, tracking a position";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pointful" = callPackage
        ({ mkDerivation, base, containers, haskell-src-exts, mtl, stdenv
         , syb, transformers
         }:
         mkDerivation {
           pname = "pointful";
           version = "1.0.8";
           sha256 = "813152e920e7aad9d2ba2ab5d922deff9cd82ec156f981d16de4bc91320967ac";
           revision = "1";
           editedCabalFile = "0xylc7fyz1x3zijjnbp73g6c106fw1dryw687i7sjlcjv1cq80xj";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers haskell-src-exts mtl syb transformers
           ];
           executableHaskellDepends = [
             base containers haskell-src-exts mtl syb transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/23Skidoo/pointful";
           description = "Pointful refactoring tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pointless-fun" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "pointless-fun";
           version = "1.1.0.6";
           sha256 = "d05c59dac408a81766d676da2fb98025e75e0c3d0a07bdb458759d5c41e3b054";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Some common point-free combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "poly-arity" = callPackage
        ({ mkDerivation, base, constraints, HList, stdenv }:
         mkDerivation {
           pname = "poly-arity";
           version = "0.0.7";
           sha256 = "8a11a127ef8aa3d9cbf773623930c710a7c0e92ac602957c891ed6a385540b66";
           libraryHaskellDepends = [ base constraints HList ];
           doHaddock = false;
           doCheck = false;
           description = "Tools for working with functions of undetermined arity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "polynomials-bernstein" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "polynomials-bernstein";
           version = "1.1.2";
           sha256 = "6950f2e791533a40e7e41ff98679f680f27c7b66258b57871027bf0e5adc7062";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           description = "A solver for systems of polynomial equations in bernstein form";
           license = "GPL";
         }) {};
      "polyparse" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "polyparse";
           version = "1.12";
           sha256 = "f54c63584ace968381de4a06bd7328b6adc3e1a74fd336e18449e0dd7650be15";
           revision = "1";
           editedCabalFile = "18daiyj3009wx0bhr87fbgy7xfh68ss9qzn6k3lgmh1z9dfsryrd";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~malcolm/polyparse/";
           description = "A variety of alternative parser combinator libraries";
           license = "LGPL";
         }) {};
      "posix-realtime" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "posix-realtime";
           version = "0.0.0.4";
           sha256 = "692cbab92e272e00b9402389c199be27add8c6f82b675c512085a36acc4ddf07";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           description = "POSIX Realtime functionality";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "post-mess-age" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "post-mess-age";
           version = "0.2.1.0";
           sha256 = "d0f69ab1cb130a9f8bb54cd1f3b0167184af885fedba89ff32fec8e54e95d64c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Send messages to a handle concurrently without getting them mixed";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-binary" = callPackage
        ({ mkDerivation, aeson, base, base-prelude, binary-parser
         , bytestring, foldl, loch-th, placeholders, scientific, stdenv
         , text, time, transformers, uuid, vector
         }:
         mkDerivation {
           pname = "postgresql-binary";
           version = "0.9.1.1";
           sha256 = "e9aeb3abc2e191ecde5f6112221fe0957364c72779dbcbe8eba6bc5c830ddac2";
           libraryHaskellDepends = [
             aeson base base-prelude binary-parser bytestring foldl loch-th
             placeholders scientific text time transformers uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/postgresql-binary";
           description = "Encoders and decoders for the PostgreSQL's binary format";
           license = stdenv.lib.licenses.mit;
         }) {};
      "postgresql-libpq" = callPackage
        ({ mkDerivation, base, bytestring, postgresql, stdenv }:
         mkDerivation {
           pname = "postgresql-libpq";
           version = "0.9.2.0";
           sha256 = "0338a93518bf73cd64b47977961f8183f6009b4e4ecc0c99b8bc68320808f310";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ postgresql ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lpsmith/postgresql-libpq";
           description = "low-level binding to libpq";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) postgresql;};
      "postgresql-orm" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring
         , bytestring-builder, directory, filepath, ghc-prim, mtl
         , old-locale, postgresql-simple, process, stdenv, text, time
         , transformers, unix, unordered-containers, vector
         }:
         mkDerivation {
           pname = "postgresql-orm";
           version = "0.4.1";
           sha256 = "649d995c7eb7890b2826cda2d930651a0906e9ce0173342180d83e5527dc7b5a";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring bytestring-builder directory
             filepath ghc-prim mtl old-locale postgresql-simple process text
             time transformers unix unordered-containers vector
           ];
           executableHaskellDepends = [
             base blaze-builder bytestring bytestring-builder directory filepath
             ghc-prim mtl old-locale postgresql-simple process time
           ];
           doHaddock = false;
           doCheck = false;
           description = "An ORM (Object Relational Mapping) and migrations DSL for PostgreSQL";
           license = "GPL";
         }) {};
      "postgresql-schema" = callPackage
        ({ mkDerivation, base, basic-prelude, optparse-applicative
         , postgresql-simple, shelly, stdenv, text, time, time-locale-compat
         }:
         mkDerivation {
           pname = "postgresql-schema";
           version = "0.1.10";
           sha256 = "29307e09916a7fd9aec965ed2f62663e26b5e66b5ab441d3ed52713d551ae27a";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base basic-prelude postgresql-simple shelly text
           ];
           executableHaskellDepends = [
             base basic-prelude optparse-applicative shelly text time
             time-locale-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mfine/postgresql-schema";
           description = "PostgreSQL Schema Management";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-simple" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring
         , bytestring-builder, case-insensitive, containers, hashable
         , postgresql-libpq, scientific, stdenv, template-haskell, text
         , time, transformers, uuid-types, vector
         }:
         mkDerivation {
           pname = "postgresql-simple";
           version = "0.5.2.1";
           sha256 = "707a1683dfbd944ddee389e0b1c895038460925137ee21478eb03dd12d48277c";
           revision = "1";
           editedCabalFile = "1cw38hryd9sdqvb6c3dgwdswmlfh88lsnp8h6cddz14k2xmghbk0";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring bytestring-builder
             case-insensitive containers hashable postgresql-libpq scientific
             template-haskell text time transformers uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Mid-Level PostgreSQL client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-simple-url" = callPackage
        ({ mkDerivation, base, network-uri, postgresql-simple, split
         , stdenv
         }:
         mkDerivation {
           pname = "postgresql-simple-url";
           version = "0.1.0.1";
           sha256 = "cf165ec652e1192f392349e09e413a776921ddef71d95bac0d23e9f81cfbe8a0";
           revision = "7";
           editedCabalFile = "1k68jfifdss9wj7brlz2k5pf9ys3l3740rm3bxkrdi1c6rg57y7l";
           libraryHaskellDepends = [
             base network-uri postgresql-simple split
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/futurice/postgresql-simple-url";
           description = "Parse postgres:// url into ConnectInfo";
           license = stdenv.lib.licenses.mit;
         }) {};
      "postgresql-transactional" = callPackage
        ({ mkDerivation, base, monad-control, mtl, postgresql-simple
         , stdenv
         }:
         mkDerivation {
           pname = "postgresql-transactional";
           version = "1.1.1";
           sha256 = "f9302a1e134b31f2e9bd243c4fe36a25b3a9a9d6984288be1bc9c29882545ed3";
           libraryHaskellDepends = [
             base monad-control mtl postgresql-simple
           ];
           doHaddock = false;
           doCheck = false;
           description = "a transactional monad on top of postgresql-simple";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pred-set" = callPackage
        ({ mkDerivation, base, hashable, hashtables, HSet, stdenv }:
         mkDerivation {
           pname = "pred-set";
           version = "0.0.1";
           sha256 = "cb22ec50f94cf76b6bc55fd66b91badfef657cbe1a6b6a59b691e48004c37726";
           libraryHaskellDepends = [ base hashable hashtables HSet ];
           doHaddock = false;
           doCheck = false;
           description = "Simple cached predicates";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pred-trie" = callPackage
        ({ mkDerivation, base, composition-extra, containers, hashable
         , hashtables, mtl, poly-arity, pred-set, QuickCheck, semigroups
         , stdenv, tries, unordered-containers
         }:
         mkDerivation {
           pname = "pred-trie";
           version = "0.5.1";
           sha256 = "821e1cefa47a3090808af5c39d9997f6471e05aa4f98b46e05eccb9c4a99cdd1";
           libraryHaskellDepends = [
             base composition-extra containers hashable hashtables mtl
             poly-arity pred-set QuickCheck semigroups tries
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Predicative tries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prednote" = callPackage
        ({ mkDerivation, base, bytestring, containers, contravariant
         , rainbow, split, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "prednote";
           version = "0.36.0.4";
           sha256 = "acb4f240e01afdbab0020ee09d3abd2f80cfdcfdbf8cd5abe49b3477a2ca2b8d";
           libraryHaskellDepends = [
             base bytestring containers contravariant rainbow split text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/prednote";
           description = "Evaluate and display trees of predicates";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prefix-units" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "prefix-units";
           version = "0.2.0";
           sha256 = "050abdf827a5bd014a2628b195fbd59bb226020612c99e86a082ac1c8274e384";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iustin/prefix-units";
           description = "A basic library for SI/binary prefix units";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prelude-extras" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "prelude-extras";
           version = "0.4.0.3";
           sha256 = "09bb087f0870a353ec1e7e1a08017b9a766d430d956afb88ca000a6a876bf877";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/prelude-extras";
           description = "Higher order versions of Prelude classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prelude-safeenum" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "prelude-safeenum";
           version = "0.1.1.2";
           sha256 = "d4f9f195d31198fa1a5e1edfb50684971cc5dc2695bf38c1e7e2dabdce329727";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "A redefinition of the Prelude's Enum class in order to render it safe";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "preprocessor-tools" = callPackage
        ({ mkDerivation, base, mtl, parsec, stdenv, syb }:
         mkDerivation {
           pname = "preprocessor-tools";
           version = "1.0.1";
           sha256 = "c946c99fe8c9effba27946cd2c26173d2346340528d800a228796d68f8aeee59";
           libraryHaskellDepends = [ base mtl parsec syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.eecs.harvard.edu/~tov/pubs/haskell-session-types/";
           description = "A framework for extending Haskell's syntax via quick-and-dirty preprocessors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "presburger" = callPackage
        ({ mkDerivation, base, containers, pretty, stdenv }:
         mkDerivation {
           pname = "presburger";
           version = "1.3.1";
           sha256 = "86021abbd457b3bac9cb0f09ce741c4c03de433ca8834532d68d84f90cc3d097";
           revision = "1";
           editedCabalFile = "0pabxck7iyhyj7wf1bflg86xb2jip4vaspf080rfdc5s2cg0d23w";
           libraryHaskellDepends = [ base containers pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yav/presburger";
           description = "A decision procedure for quantifier-free linear arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-class" = callPackage
        ({ mkDerivation, base, pretty, stdenv }:
         mkDerivation {
           pname = "pretty-class";
           version = "1.0.1.1";
           sha256 = "558d1b506ff58afb0a5fb9d85ea93a94687cc1aabcc5a112a6ee4375a7b8aee1";
           libraryHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ddssff/pretty-class";
           description = "Pretty printing class similar to Show";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-hex" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "pretty-hex";
           version = "1.0";
           sha256 = "ff9a5f2023d6a4454f06cc395726b4cac3f9d0ea03759b14ccf7d62df79e9c7a";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "A library for hex dumps of ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-show" = callPackage
        ({ mkDerivation, array, base, filepath, ghc-prim, happy
         , haskell-lexer, pretty, stdenv
         }:
         mkDerivation {
           pname = "pretty-show";
           version = "1.6.12";
           sha256 = "9629c98ac0f2eb215cd81cf61321c5181acd18df35d89817093e934f786774b9";
           revision = "1";
           editedCabalFile = "1lphwigrkrsl213qyhfsd0znm65fibhnq3frgm5j4s5zylcgyjd4";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base filepath ghc-prim haskell-lexer pretty
           ];
           libraryToolDepends = [ happy ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.github.com/yav/pretty-show";
           description = "Tools for working with derived `Show` instances and generic inspection of values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "prettyclass" = callPackage
        ({ mkDerivation, base, pretty, stdenv }:
         mkDerivation {
           pname = "prettyclass";
           version = "1.0.0.0";
           sha256 = "e537446e7a346e5e0872ed8281db2bb0220c737f10757848c901da1399548986";
           libraryHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty printing class similar to Show";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prettyprinter" = callPackage
        ({ mkDerivation, base, semigroups, stdenv, text }:
         mkDerivation {
           pname = "prettyprinter";
           version = "1.2.0.1";
           sha256 = "11397b182138efc8f7b09a70873093fb565d070e4c8f92cdde9e601bcd5a0566";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base semigroups text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "A modern, easy to use, well-documented, extensible prettyprinter";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prettyprinter-ansi-terminal" = callPackage
        ({ mkDerivation, ansi-terminal, base, prettyprinter, semigroups
         , stdenv, text
         }:
         mkDerivation {
           pname = "prettyprinter-ansi-terminal";
           version = "1.1.1.2";
           sha256 = "d3e0b420df2904ae1ef23daf9bbb6de2c1fbbee056b779fc2cebe303cedf4641";
           libraryHaskellDepends = [
             ansi-terminal base prettyprinter semigroups text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "ANSI terminal backend for the »prettyprinter« package";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "primes" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "primes";
           version = "0.2.1.0";
           sha256 = "74d66558fb638ea4d31eae2fe1a294cb5a9d64491314305d74a11d93f277c65b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/sebfisch/primes";
           description = "Efficient, purely functional generation of prime numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "primitive" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, transformers }:
         mkDerivation {
           pname = "primitive";
           version = "0.6.1.0";
           sha256 = "93731fa72eaf74e8e83453f080828e18cec9fbc82bee91b49ba8b61c043d38c8";
           revision = "1";
           editedCabalFile = "0gb8lcn6bd6ilfln7ah9jmqq6324vgkrgdsnz1qvlyj3bi2w5ivf";
           libraryHaskellDepends = [ base ghc-prim transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/primitive";
           description = "Primitive memory-related operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "process" = callPackage
        ({ mkDerivation, base, deepseq, directory, filepath, stdenv, unix
         }:
         mkDerivation {
           pname = "process";
           version = "1.2.3.0";
           sha256 = "619e04157183631bd16fa921589bd4125b7db12c45287e962a7b8402a70d60c5";
           libraryHaskellDepends = [ base deepseq directory filepath unix ];
           doHaddock = false;
           doCheck = false;
           description = "Process libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "process-extras" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, generic-deriving
         , ListLike, process, stdenv, text
         }:
         mkDerivation {
           pname = "process-extras";
           version = "0.3.3.8";
           sha256 = "d9e26f829d5eab2e2df113383b814bf71c835ff874fdecdc5a125115da485ec3";
           libraryHaskellDepends = [
             base bytestring deepseq generic-deriving ListLike process text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/seereason/process-extras";
           description = "Process extras";
           license = stdenv.lib.licenses.mit;
         }) {};
      "process-streaming" = callPackage
        ({ mkDerivation, base, bifunctors, bytestring, conceit, free
         , kan-extensions, pipes, pipes-bytestring, pipes-concurrency
         , pipes-parse, pipes-safe, pipes-text, pipes-transduce, process
         , profunctors, stdenv, text, transformers, transformers-compat
         , void
         }:
         mkDerivation {
           pname = "process-streaming";
           version = "0.9.1.2";
           sha256 = "5f2e016ecbd5b811dcd17ecec7d680d3fd29ffb66e27f735fc662948fd42584e";
           libraryHaskellDepends = [
             base bifunctors bytestring conceit free kan-extensions pipes
             pipes-bytestring pipes-concurrency pipes-parse pipes-safe
             pipes-text pipes-transduce process profunctors text transformers
             transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           description = "Streaming interface to system processes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "product-profunctors" = callPackage
        ({ mkDerivation, base, contravariant, profunctors, stdenv, tagged
         , template-haskell
         }:
         mkDerivation {
           pname = "product-profunctors";
           version = "0.7.1.0";
           sha256 = "9800a0ebd9334b2503b692ac1a11bcf9bfbe0213d737a9aa9620c2761bb9d334";
           revision = "1";
           editedCabalFile = "1rds0bhac5f45nsa0riv3b730vmxqkmh0s305bic32a4mljd3ajn";
           libraryHaskellDepends = [
             base contravariant profunctors tagged template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tomjaguarpaw/product-profunctors";
           description = "product-profunctors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "profiteur" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, filepath
         , stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "profiteur";
           version = "0.3.0.3";
           sha256 = "4f9929059826c24be4c4cbfae00cfea5985c20c4c2ddb03d56a47cd72c18e144";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             aeson attoparsec base bytestring filepath text unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jaspervdj/profiteur";
           description = "Treemap visualiser for GHC prof files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "profunctor-extras" = callPackage
        ({ mkDerivation, base, profunctors, stdenv }:
         mkDerivation {
           pname = "profunctor-extras";
           version = "4.0";
           sha256 = "8a3c51ef41d686e39f87875dd48e72e5aa83956125bdf9922edf531c292a4482";
           libraryHaskellDepends = [ base profunctors ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/profunctor-extras/";
           description = "This package has been absorbed into profunctors 4.0";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "profunctors" = callPackage
        ({ mkDerivation, base, base-orphans, bifunctors, comonad
         , contravariant, distributive, stdenv, tagged, transformers
         }:
         mkDerivation {
           pname = "profunctors";
           version = "5.2";
           sha256 = "87a7e25c4745ea8ff479dd1212ec2e57710abb3d3dd30f948fa16be1d3ee05a4";
           revision = "2";
           editedCabalFile = "0bkv17jsj0i6lxrwpp1sb1vl4z9pc0qg5mxk5whnvfn3ln6fb457";
           libraryHaskellDepends = [
             base base-orphans bifunctors comonad contravariant distributive
             tagged transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/profunctors/";
           description = "Profunctors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "project-template" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, conduit
         , conduit-extra, containers, directory, filepath, mtl, resourcet
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "project-template";
           version = "0.2.0";
           sha256 = "aeabd7d1785b31abaffc78f02d9dda67d57d01822755f09614bfc65e99506310";
           libraryHaskellDepends = [
             base base64-bytestring bytestring conduit conduit-extra containers
             directory filepath mtl resourcet text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/haskell-ide";
           description = "Specify Haskell project templates and generate files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "projectroot" = callPackage
        ({ mkDerivation, base, directory, stdenv }:
         mkDerivation {
           pname = "projectroot";
           version = "0.2.0.1";
           sha256 = "53753086543ed199cf6f0d76852660f5d74c0874bfdee21c0f4e0d845b7e1ab8";
           libraryHaskellDepends = [ base directory ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-projectroot";
           description = "Bindings to the projectroot C logic";
           license = stdenv.lib.licenses.mit;
         }) {};
      "prometheus-client" = callPackage
        ({ mkDerivation, atomic-primops, base, bytestring, containers, mtl
         , stdenv, stm, time, transformers, utf8-string
         }:
         mkDerivation {
           pname = "prometheus-client";
           version = "0.1.0.1";
           sha256 = "bdc0b7a6df25037dbc10d16960922ce8f3582d7eb79c5d60360e61da3220772f";
           libraryHaskellDepends = [
             atomic-primops base bytestring containers mtl stm time transformers
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/prometheus-haskell";
           description = "Haskell client library for http://prometheus.io.";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "prometheus-metrics-ghc" = callPackage
        ({ mkDerivation, base, prometheus-client, stdenv, utf8-string }:
         mkDerivation {
           pname = "prometheus-metrics-ghc";
           version = "0.1.0.1";
           sha256 = "17842db364e459d59e5f298345828843622b4e095b37b8ad7c556a2722854795";
           revision = "1";
           editedCabalFile = "1h4cd6f2hvkmql5p58hnfgyvdnbl8gx92l9wssjf363mfc8fyn7n";
           libraryHaskellDepends = [ base prometheus-client utf8-string ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/prometheus-haskell";
           description = "Metrics exposing GHC runtime information for use with prometheus-client";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "prompt" = callPackage
        ({ mkDerivation, base, base-compat, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "prompt";
           version = "0.1.1.2";
           sha256 = "67b5711ef4c650747645b6d9de16a8bb04e04d1c2e4d39e3a8d4099873a151f2";
           libraryHaskellDepends = [
             base base-compat mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/prompt";
           description = "Monad (and transformer) for deferred-effect pure prompt-response queries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "protobuf" = callPackage
        ({ mkDerivation, base, base-orphans, bytestring, cereal
         , data-binary-ieee754, deepseq, mtl, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "protobuf";
           version = "0.2.1.1";
           sha256 = "cd659a085b670d204c0b4ddf0cb323e4f024c9d972cf183dc14154a44d5e722c";
           libraryHaskellDepends = [
             base base-orphans bytestring cereal data-binary-ieee754 deepseq mtl
             text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alphaHeavy/protobuf";
           description = "Google Protocol Buffers via GHC.Generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protobuf-simple" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers
         , data-binary-ieee754, directory, filepath, mtl, parsec, split
         , stdenv, text
         }:
         mkDerivation {
           pname = "protobuf-simple";
           version = "0.1.0.2";
           sha256 = "ef2b79ffd3f11796027cbc5bbcfcc68a6d1948f66acd079bb60c6d6ed00622f3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers data-binary-ieee754 mtl text
           ];
           executableHaskellDepends = [
             base containers directory filepath mtl parsec split text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sru-systems/protobuf-simple";
           description = "Simple Protocol Buffers library (proto2)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "protocol-buffers" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , directory, filepath, mtl, parsec, stdenv, syb, utf8-string
         }:
         mkDerivation {
           pname = "protocol-buffers";
           version = "2.2.0";
           sha256 = "069a9ded2e9f7840ec51aef66eaabcdb428ceed8eee2b913590d5ee245506967";
           revision = "1";
           editedCabalFile = "1r4ycm8n6a77jr0rjz8ddh5yzs7gjxzmcp5pb9m58xa0lxzdmsr3";
           libraryHaskellDepends = [
             array base binary bytestring containers directory filepath mtl
             parsec syb utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k-bx/protocol-buffers";
           description = "Parse Google Protocol Buffer specifications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protocol-buffers-descriptor" = callPackage
        ({ mkDerivation, base, bytestring, containers, protocol-buffers
         , stdenv
         }:
         mkDerivation {
           pname = "protocol-buffers-descriptor";
           version = "2.2.0";
           sha256 = "62b6d996c8ee7e11fad73744b3267c92b60ec4ddb59f4c37a53b97ce9836c09a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers protocol-buffers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k-bx/protocol-buffers";
           description = "Text.DescriptorProto.Options and code generated from the Google Protocol Buffer specification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protolude" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, deepseq
         , ghc-prim, mtl, safe, stdenv, stm, text, transformers
         }:
         mkDerivation {
           pname = "protolude";
           version = "0.1.10";
           sha256 = "163296a518f0d7329dcdf040bf0eddb1fb804eee198405801fab8f192ce1c7a5";
           libraryHaskellDepends = [
             async base bytestring containers deepseq ghc-prim mtl safe stm text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdiehl/protolude";
           description = "A sensible set of defaults for writing custom Preludes";
           license = stdenv.lib.licenses.mit;
         }) {};
      "proxied" = callPackage
        ({ mkDerivation, base, generic-deriving, stdenv, tagged }:
         mkDerivation {
           pname = "proxied";
           version = "0.2";
           sha256 = "76f3a157b2f5373d46aa4203369a17052ce472a21dc2b067f7810b117a1cee0b";
           libraryHaskellDepends = [ base generic-deriving tagged ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/proxied";
           description = "Make functions consume Proxy instead of undefined";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "psql-helpers" = callPackage
        ({ mkDerivation, base, postgresql-simple, stdenv }:
         mkDerivation {
           pname = "psql-helpers";
           version = "0.1.0.0";
           sha256 = "f13ca642072477d3ab0246c514e3fc78e0c5cb419345240fbad994ed2a3219f4";
           libraryHaskellDepends = [ base postgresql-simple ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/psql-helpers#readme";
           description = "A small collection of helper functions to generate postgresql queries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "psqueues" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, hashable, stdenv }:
         mkDerivation {
           pname = "psqueues";
           version = "0.2.2.3";
           sha256 = "6d757c30f6fdc8df7ed62601f2b2530e71192109ab94d06dec4176c9c3eea6b5";
           revision = "1";
           editedCabalFile = "0phjf17dcq25yx7xkiwig2wk6wcsxxq04gzqxs8d6m6vl37q19yb";
           libraryHaskellDepends = [ base deepseq ghc-prim hashable ];
           doHaddock = false;
           doCheck = false;
           description = "Pure priority search queues";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "publicsuffix" = callPackage
        ({ mkDerivation, base, filepath, stdenv, template-haskell }:
         mkDerivation {
           pname = "publicsuffix";
           version = "0.20160522";
           sha256 = "1ae1ae02b3c317d421de31490cbd4b83a306f6be53103a5b1438aa170703f529";
           libraryHaskellDepends = [ base filepath template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/wereHamster/publicsuffix-haskell/";
           description = "The publicsuffix list exposed as proper Haskell types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pure-cdb" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, directory
         , mtl, stdenv, vector
         }:
         mkDerivation {
           pname = "pure-cdb";
           version = "0.1.2";
           sha256 = "25228a3052ad7f6cfc003569668c94c5ecaa7665a5e205b54f221bf42ff3f840";
           libraryHaskellDepends = [
             base binary bytestring containers directory mtl vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bosu/pure-cdb";
           description = "Another pure-haskell CDB (Constant Database) implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pure-io" = callPackage
        ({ mkDerivation, base, containers, mtl, safe, stdenv }:
         mkDerivation {
           pname = "pure-io";
           version = "0.2.1";
           sha256 = "a9ef0f324ce29fecdcdb11f2ce0088bcf282951727d983824e05f12e519bfb5f";
           libraryHaskellDepends = [ base containers mtl safe ];
           doHaddock = false;
           doCheck = false;
           description = "Pure IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pureMD5" = callPackage
        ({ mkDerivation, base, binary, bytestring, cereal, crypto-api
         , stdenv, tagged
         }:
         mkDerivation {
           pname = "pureMD5";
           version = "2.1.3";
           sha256 = "bef3358a5e3a45b649860a5792f052e2f927c0492a7056cf64425116c8a7b17d";
           libraryHaskellDepends = [
             base binary bytestring cereal crypto-api tagged
           ];
           doHaddock = false;
           doCheck = false;
           description = "A Haskell-only implementation of the MD5 digest (hash) algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "purescript" = callPackage
        ({ mkDerivation, aeson, aeson-better-errors, ansi-wl-pprint, base
         , base-compat, bower-json, boxes, bytestring, containers, directory
         , dlist, edit-distance, filepath, fsnotify, Glob, haskeline
         , http-types, language-javascript, lifted-base, monad-control
         , monad-logger, mtl, network, optparse-applicative, parallel
         , parsec, pattern-arrows, pipes, pipes-http, process, regex-tdfa
         , safe, semigroups, sourcemap, spdx, split, stdenv, stm, syb, text
         , time, transformers, transformers-base, transformers-compat
         , unordered-containers, utf8-string, vector
         }:
         mkDerivation {
           pname = "purescript";
           version = "0.8.5.0";
           sha256 = "75a253d113b33e79abceff9d280988c1a4cb46eb84547a82eda1ec4bdad60d04";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-better-errors base base-compat bower-json boxes
             bytestring containers directory dlist edit-distance filepath
             fsnotify Glob http-types language-javascript lifted-base
             monad-control monad-logger mtl parallel parsec pattern-arrows pipes
             pipes-http process regex-tdfa safe semigroups sourcemap spdx split
             stm syb text time transformers transformers-base
             transformers-compat unordered-containers utf8-string vector
           ];
           executableHaskellDepends = [
             aeson ansi-wl-pprint base base-compat boxes bytestring containers
             directory filepath Glob haskeline monad-logger mtl network
             optparse-applicative parsec process split stm text time
             transformers transformers-compat utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.purescript.org/";
           description = "PureScript Programming Language Compiler";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pusher-http-haskell" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, bytestring
         , containers, cryptohash, hashable, http-client, http-types, mtl
         , QuickCheck, snap-core, snap-server, stdenv, text, time
         , transformers, unordered-containers, yaml
         }:
         mkDerivation {
           pname = "pusher-http-haskell";
           version = "0.3.0.2";
           sha256 = "72ce2a76a802d6c866ea0630fde7711b0298929113609998e0ec1dd733fb8098";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base base16-bytestring bytestring cryptohash hashable
             http-client http-types mtl QuickCheck text time transformers
             unordered-containers
           ];
           executableHaskellDepends = [
             aeson base bytestring containers mtl snap-core snap-server text
             transformers unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pusher-community/pusher-http-haskell";
           description = "Haskell client library for the Pusher HTTP API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pwstore-fast" = callPackage
        ({ mkDerivation, base, base64-bytestring, binary, byteable
         , bytestring, cryptohash, random, stdenv
         }:
         mkDerivation {
           pname = "pwstore-fast";
           version = "2.4.4";
           sha256 = "7219af66b6f762d9dd5376b3b25393d4d6626e390e9d9c9f87f6e3f13ea7fbb2";
           libraryHaskellDepends = [
             base base64-bytestring binary byteable bytestring cryptohash random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/PeterScott/pwstore";
           description = "Secure password storage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pwstore-purehaskell" = callPackage
        ({ mkDerivation, base, base64-bytestring, byteable, bytestring
         , random, SHA, stdenv
         }:
         mkDerivation {
           pname = "pwstore-purehaskell";
           version = "2.1.4";
           sha256 = "2cdd7039f1b6880d8f4f2eac44f4f4ce10c7c8286a6493f45a4c47c41fadf4bc";
           libraryHaskellDepends = [
             base base64-bytestring byteable bytestring random SHA
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/PeterScott/pwstore";
           description = "Secure password storage, in pure Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quandl-api" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring
         , http-conduit, http-types, stdenv, syb, text, time
         , time-locale-compat, unordered-containers
         }:
         mkDerivation {
           pname = "quandl-api";
           version = "0.2.1.0";
           sha256 = "0e6b4479d01fd6d5e1f69a512345c7672fc5bc40651f8d1283832a5fcfe3b206";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring http-conduit http-types syb
             text time time-locale-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pvdbrand/quandl-api";
           description = "Quandl.com API library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "questioner" = callPackage
        ({ mkDerivation, ansi-terminal, base, readline, stdenv
         , terminal-size
         }:
         mkDerivation {
           pname = "questioner";
           version = "0.1.1.0";
           sha256 = "83ab4047671f59832eaa377e3fb3fce547439550f57479dd09e0ad4975250617";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base readline terminal-size
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-questioner.git";
           description = "A package for prompting values from the command-line";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quickcheck-assertions" = callPackage
        ({ mkDerivation, base, ieee754, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-assertions";
           version = "0.2.0";
           sha256 = "600fbafab414f5fba7df40a10635aa407d3af8de3938a6c2866bf80f0952f740";
           libraryHaskellDepends = [ base ieee754 QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/s9gf4ult/quickcheck-assertions";
           description = "HUnit like assertions for QuickCheck";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "quickcheck-instances" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, hashable
         , old-time, QuickCheck, scientific, stdenv, text, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "quickcheck-instances";
           version = "0.3.12";
           sha256 = "ddd5b988da50eff7f56737bff516fba52309f7461297698f04f1e8aaee9f9bf3";
           revision = "2";
           editedCabalFile = "1v1r7gidkjc2v4dw1id57raqnjqv4rc10pa2l6xhhg0dzrnw28a3";
           libraryHaskellDepends = [
             array base bytestring containers hashable old-time QuickCheck
             scientific text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aslatter/qc-instances";
           description = "Common quickcheck instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-io" = callPackage
        ({ mkDerivation, base, HUnit, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-io";
           version = "0.1.4";
           sha256 = "6b3750590871b03908530764cdaa69ce67d5b514f533c1a4a6f4755f8267389d";
           libraryHaskellDepends = [ base HUnit QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/quickcheck-io#readme";
           description = "Use HUnit assertions as QuickCheck properties";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quickcheck-simple" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-simple";
           version = "0.1.0.1";
           sha256 = "a57b616bb19818b3d572b455243b6839461f1b9e3b6dd829035167f1f756d598";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           description = "Test properties and default-mains for QuickCheck";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-text" = callPackage
        ({ mkDerivation, base, binary, bytestring, QuickCheck, stdenv, text
         }:
         mkDerivation {
           pname = "quickcheck-text";
           version = "0.1.2.1";
           sha256 = "4442fdb8ae6cd469c04957d34fee46039c9dc0ddce23ce6050babe6826d0ab09";
           libraryHaskellDepends = [ base binary bytestring QuickCheck text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/olorin/quickcheck-text";
           description = "Alternative arbitrary instance for Text";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quickcheck-unicode" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-unicode";
           version = "1.0.0.1";
           sha256 = "24c29caddc515d477878ef97581a0cebf760055ca0f260ba1762257abaa116a9";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/quickcheck-unicode";
           description = "Generator and shrink functions for testing Unicode-related software";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rainbow" = callPackage
        ({ mkDerivation, base, bytestring, lens-simple, process, stdenv
         , text
         }:
         mkDerivation {
           pname = "rainbow";
           version = "0.28.0.4";
           sha256 = "829296f88be520a9a6c6de715ffa2bb926cecc0135b23f602cc4377bac4e8831";
           libraryHaskellDepends = [
             base bytestring lens-simple process text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.github.com/massysett/rainbow";
           description = "Print text to terminal with colors and effects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rainbox" = callPackage
        ({ mkDerivation, base, bytestring, containers, lens-simple, rainbow
         , stdenv, text
         }:
         mkDerivation {
           pname = "rainbox";
           version = "0.18.0.10";
           sha256 = "d692e95565b4ce4454536493ae4d6ba256eecf5e88e0495d156008ea76ba1b05";
           libraryHaskellDepends = [
             base bytestring containers lens-simple rainbow text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/rainbox";
           description = "Two-dimensional box pretty printing, with colors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "random" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "random";
           version = "1.1";
           sha256 = "b718a41057e25a3a71df693ab0fe2263d492e759679b3c2fea6ea33b171d3a5a";
           revision = "1";
           editedCabalFile = "1pv5d7bm2rgap7llp5vjsplrg048gvf0226y0v19gpvdsx7n4rvv";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           description = "random number library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "random-fu" = callPackage
        ({ mkDerivation, base, erf, log-domain, math-functions, monad-loops
         , mtl, random-shuffle, random-source, rvar, stdenv, syb
         , template-haskell, transformers, vector
         }:
         mkDerivation {
           pname = "random-fu";
           version = "0.2.7.0";
           sha256 = "b6b3a4b3ede34991d26e0447f90b14fa66af61f376fa0aed2e0899fdc879b0c4";
           libraryHaskellDepends = [
             base erf log-domain math-functions monad-loops mtl random-shuffle
             random-source rvar syb template-haskell transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/random-fu";
           description = "Random number generation";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "random-shuffle" = callPackage
        ({ mkDerivation, base, MonadRandom, random, stdenv }:
         mkDerivation {
           pname = "random-shuffle";
           version = "0.0.4";
           sha256 = "52704411f040fd0bf2361dad162e35dc13caa6535b2e4908d3513c00a95d0615";
           libraryHaskellDepends = [ base MonadRandom random ];
           doHaddock = false;
           doCheck = false;
           description = "Random shuffle implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "random-source" = callPackage
        ({ mkDerivation, base, flexible-defaults, mersenne-random-pure64
         , mtl, mwc-random, random, stateref, stdenv, syb, template-haskell
         , th-extras
         }:
         mkDerivation {
           pname = "random-source";
           version = "0.3.0.6";
           sha256 = "f3dfec3aef0614ff856abbba018f3bc3446295157895ea09a015737d67205b73";
           libraryHaskellDepends = [
             base flexible-defaults mersenne-random-pure64 mtl mwc-random random
             stateref syb template-haskell th-extras
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/random-fu";
           description = "Generic basis for random number generators";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "random-tree" = callPackage
        ({ mkDerivation, base, containers, lens, MonadRandom, mtl, random
         , random-shuffle, stdenv, transformers, tree-fun
         }:
         mkDerivation {
           pname = "random-tree";
           version = "0.6.0.5";
           sha256 = "2b604e7ce184e2c877fac63dbac1df3060cdc023427b8eb5844106a826591cc2";
           libraryHaskellDepends = [
             base containers lens MonadRandom mtl random random-shuffle
             transformers tree-fun
           ];
           doHaddock = false;
           doCheck = false;
           description = "Create random trees";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "range" = callPackage
        ({ mkDerivation, base, free, parsec, stdenv }:
         mkDerivation {
           pname = "range";
           version = "0.1.2.0";
           sha256 = "4b997ffc63dfc93716938b086ceefffd9df14684c511e0fef4656e82d58b0b09";
           revision = "1";
           editedCabalFile = "0mx76dn6mna2w68ppf21zkjzz4k0xzdv8wbk2lzq1nz1d9vdigw0";
           libraryHaskellDepends = [ base free parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/robertmassaioli/range";
           description = "This has a bunch of code for specifying and managing ranges in your code";
           license = stdenv.lib.licenses.mit;
         }) {};
      "range-set-list" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, semigroups
         , stdenv
         }:
         mkDerivation {
           pname = "range-set-list";
           version = "0.1.2.0";
           sha256 = "3b749cf447dcf1f81f263c9c43dd61ee533b4fb25e6e4ca3bdbe2321702bab67";
           revision = "1";
           editedCabalFile = "061xbyarcjr4bcb08a5xyzqiyvagn9729p6hk5kzayzlkscx16j2";
           libraryHaskellDepends = [
             base containers deepseq hashable semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/range-set-list#readme";
           description = "Memory efficient sets with ranges of elements";
           license = stdenv.lib.licenses.mit;
         }) {};
      "rank1dynamic" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "rank1dynamic";
           version = "0.3.3.0";
           sha256 = "ca32dde8475cf3ec809043ee7393fda51efd6afb741ef02af19c996bb8238f0b";
           revision = "1";
           editedCabalFile = "0fw91l7y3fgpgp6dalx18q1dr2g9ji0acs6m7hgk5mpqjz34azgb";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rasterific-svg" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, directory
         , filepath, FontyFruity, JuicyPixels, lens, linear, mtl
         , optparse-applicative, Rasterific, scientific, stdenv, svg-tree
         , text, transformers, vector
         }:
         mkDerivation {
           pname = "rasterific-svg";
           version = "0.3.1.2";
           sha256 = "83c90ea97d73f05003de2a4622ed26754fa52cb94a3341feada477713332a789";
           revision = "1";
           editedCabalFile = "11m5vygdbzpyd35mndjsf8x4yilg2mmx6bbhsvs371a7hmfxnrhs";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers directory filepath FontyFruity
             JuicyPixels lens linear mtl Rasterific scientific svg-tree text
             transformers vector
           ];
           executableHaskellDepends = [
             base directory filepath FontyFruity JuicyPixels
             optparse-applicative Rasterific svg-tree
           ];
           doHaddock = false;
           doCheck = false;
           description = "SVG renderer based on Rasterific";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ratel" = callPackage
        ({ mkDerivation, aeson, base, bytestring, case-insensitive
         , containers, http-client, http-client-tls, http-types, stdenv
         , text, uuid
         }:
         mkDerivation {
           pname = "ratel";
           version = "0.1.3";
           sha256 = "49fee52e108c70551438f75f997b8c0a3053ee15476422c77509918bfb3ca9b3";
           revision = "1";
           editedCabalFile = "1vki0fq1ryi7pic5p7grxl2m921591nxsrzchr8mnx809dlhdibx";
           libraryHaskellDepends = [
             aeson base bytestring case-insensitive containers http-client
             http-client-tls http-types text uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/ratel#readme";
           description = "Notify Honeybadger about exceptions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ratel-wai" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , http-client, ratel, stdenv, wai
         }:
         mkDerivation {
           pname = "ratel-wai";
           version = "0.1.2";
           sha256 = "f8aad4c4f57e58bda51edc56521e095e03810c825ef2333069e9151f51e1468e";
           libraryHaskellDepends = [
             base bytestring case-insensitive containers http-client ratel wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/ratel-wai#readme";
           description = "Notify Honeybadger about exceptions via a WAI middleware";
           license = stdenv.lib.licenses.mit;
         }) {};
      "raw-strings-qq" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "raw-strings-qq";
           version = "1.1";
           sha256 = "2e011ec26aeaa53ab43c30b7d9b5b0f661f24b4ebef8884c12c571353c0fbed3";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/23Skidoo/raw-strings-qq";
           description = "Raw string literals for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "read-editor" = callPackage
        ({ mkDerivation, base, directory, process, stdenv }:
         mkDerivation {
           pname = "read-editor";
           version = "0.1.0.2";
           sha256 = "ed8aeca86823fbaf11a0a543fd106c9c3abe65216ea974ed56050cbebf777085";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-read-editor";
           description = "Opens a temporary file on the system's EDITOR and returns the resulting edits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "read-env-var" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "read-env-var";
           version = "0.1.0.1";
           sha256 = "21962cca51ae11bacf7d92f1436cc76e76ff2d957fb81a0f7a8bcbcf1d0f2fe5";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/read-env-var#readme";
           description = "Functions for safely reading environment variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "readable" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "readable";
           version = "0.3.1";
           sha256 = "703037ad2cca4d6d42ba23e2758d1911cd82e3e922c4078076c273231e4b43c9";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mightybyte/readable";
           description = "Reading from Text and ByteString";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "readline" = callPackage
        ({ mkDerivation, base, ncurses, process, readline, stdenv }:
         mkDerivation {
           pname = "readline";
           version = "1.0.3.0";
           sha256 = "c0b9e174910620db0edea8f9fd6fb6c1d7b066260d523e9a7208294c46a75feb";
           libraryHaskellDepends = [ base process ];
           librarySystemDepends = [ ncurses readline ];
           doHaddock = false;
           doCheck = false;
           description = "An interface to the GNU readline library";
           license = "GPL";
         }) {inherit (pkgs) ncurses; inherit (pkgs) readline;};
      "recursion-schemes" = callPackage
        ({ mkDerivation, base, comonad, free, stdenv, transformers }:
         mkDerivation {
           pname = "recursion-schemes";
           version = "4.1.2";
           sha256 = "36fd1357a577e23640c2948a1b00afd38e4527e4972551042bf6b88781c8c4fc";
           libraryHaskellDepends = [ base comonad free transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/recursion-schemes/";
           description = "Generalized bananas, lenses and barbed wire";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "redis-io" = callPackage
        ({ mkDerivation, attoparsec, auto-update, base, bytestring
         , containers, exceptions, iproute, monad-control, mtl, network
         , operational, redis-resp, resource-pool, semigroups, stdenv, stm
         , time, tinylog, transformers, transformers-base
         }:
         mkDerivation {
           pname = "redis-io";
           version = "0.7.0";
           sha256 = "1f68cb184f29fd4dc27b7034ee6dd2c53a952fbda1084ba25afd83952518e619";
           libraryHaskellDepends = [
             attoparsec auto-update base bytestring containers exceptions
             iproute monad-control mtl network operational redis-resp
             resource-pool semigroups stm time tinylog transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/redis-io/";
           description = "Yet another redis client";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "redis-resp" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring
         , bytestring-conversion, containers, dlist, double-conversion
         , operational, semigroups, split, stdenv, transformers
         }:
         mkDerivation {
           pname = "redis-resp";
           version = "0.4.0";
           sha256 = "8bc0d592843e05c37a3fda22255daca74f1c17c4e4a7951531accd45cd2a9232";
           revision = "1";
           editedCabalFile = "0lxyw2ip3clvhdg3l317jx5vfapyws5k9wkj9b4zj2545n199fp6";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-conversion containers dlist
             double-conversion operational semigroups split transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/redis-resp/";
           description = "REdis Serialization Protocol (RESP) implementation";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "reducers" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, fingertree
         , hashable, semigroupoids, semigroups, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "reducers";
           version = "3.12.1";
           sha256 = "e43bb7678272691a358c049daecbac715c4b0fcece021c6b2ac7b2a1c16b6d5e";
           revision = "2";
           editedCabalFile = "00zxyyaj0grvr214qdrg68114b93iwp27vmww254s2yq9z701gf8";
           libraryHaskellDepends = [
             array base bytestring containers fingertree hashable semigroupoids
             semigroups text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/reducers/";
           description = "Semigroups, specialized containers and a general map/reduce framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reedsolomon" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, gitrev, loop, mtl
         , primitive, profunctors, stdenv, vector
         }:
         mkDerivation {
           pname = "reedsolomon";
           version = "0.0.4.2";
           sha256 = "1f2e6d4d781692ed5cbb6f655486fa7d9a8a2872feb6a4a0626e3e778e067d9f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring exceptions gitrev loop mtl primitive profunctors
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/NicolasT/reedsolomon";
           description = "Reed-Solomon Erasure Coding in Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ref-fd" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers }:
         mkDerivation {
           pname = "ref-fd";
           version = "0.4.0.1";
           sha256 = "e416f1afba149e3af9cbe1011381d0b89609c240d812127bd03b8a922a5f6037";
           libraryHaskellDepends = [ base stm transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A type class for monads with references using functional dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "refact" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "refact";
           version = "0.3.0.2";
           sha256 = "0ad029727797c8ca5d179c7abf1bfc135d86a7d72cf93785ee12ad243aeb1f6c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Specify refactorings to perform with apply-refact";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reflection" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "reflection";
           version = "2.1.2";
           sha256 = "a909882c04b24016bedb85587c09f23cf06bad71a2b1f7e781e89abaa6023c39";
           revision = "1";
           editedCabalFile = "1yw8mjk8zjdcxwnf0300h7h2wgva7a3xp95gpb9lqapmjjcxi3k4";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/reflection";
           description = "Reifies arbitrary terms into types that can be reflected back into terms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reform" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, text }:
         mkDerivation {
           pname = "reform";
           version = "0.2.7.1";
           sha256 = "59be2189906788ee4ecf82559aea2e7159a7a0c716c129cccce97e9d89819230";
           libraryHaskellDepends = [ base containers mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "reform is a type-safe HTML form generation and validation library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reform-blaze" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, reform, stdenv
         , text
         }:
         mkDerivation {
           pname = "reform-blaze";
           version = "0.2.4.1";
           sha256 = "d4acf094d75cef125e9d587646b9bbb66ce927b43ed16c99738f11e80569678b";
           revision = "1";
           editedCabalFile = "1w85dbpfrgi0lan1b485s1bs2pa93myf8gwyi772g5if5rc9irdb";
           libraryHaskellDepends = [
             base blaze-html blaze-markup reform text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Add support for using blaze-html with Reform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reform-hamlet" = callPackage
        ({ mkDerivation, base, blaze-markup, reform, shakespeare, stdenv
         , text
         }:
         mkDerivation {
           pname = "reform-hamlet";
           version = "0.0.5.1";
           sha256 = "a0271fc7580463d3790f26e651836e0030178444987c9132b3c74dab249286f2";
           libraryHaskellDepends = [
             base blaze-markup reform shakespeare text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Add support for using Hamlet with Reform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reform-happstack" = callPackage
        ({ mkDerivation, base, bytestring, happstack-server, mtl, random
         , reform, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "reform-happstack";
           version = "0.2.5.1";
           sha256 = "6fa06f0cc07251bf5ec38a553de468ede9b7495c4534ba9c3f96780c1adadaaa";
           libraryHaskellDepends = [
             base bytestring happstack-server mtl random reform text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Happstack support for reform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reform-hsp" = callPackage
        ({ mkDerivation, base, hsp, hsx2hs, reform, stdenv, text }:
         mkDerivation {
           pname = "reform-hsp";
           version = "0.2.7.1";
           sha256 = "48edd2a1322bacfb2d8574222c194cfa4ffdce135f4dff851d9d5e6fe3008d20";
           libraryHaskellDepends = [ base hsp hsx2hs reform text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Add support for using HSP with Reform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-applicative" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "regex-applicative";
           version = "0.3.3";
           sha256 = "6659a2cc1c8137d77ef57f75027723b075d473354d935233d98b1ae1b03c3be6";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/regex-applicative";
           description = "Regex-based parsing with applicative interface";
           license = stdenv.lib.licenses.mit;
         }) {};
      "regex-applicative-text" = callPackage
        ({ mkDerivation, base, regex-applicative, stdenv, text }:
         mkDerivation {
           pname = "regex-applicative-text";
           version = "0.1.0.1";
           sha256 = "b093051f80865d257da2ded8ad1b566927b01b3d2f86d41da2ffee4a26c4e2d9";
           revision = "2";
           editedCabalFile = "19sdafr0i252xyy017yxmz76ipl5bdg3hiv3ka8sjbwryj16gdwi";
           libraryHaskellDepends = [ base regex-applicative text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/regex-applicative-text#readme";
           description = "regex-applicative on text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-base" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, mtl, stdenv
         }:
         mkDerivation {
           pname = "regex-base";
           version = "0.93.2";
           sha256 = "20dc5713a16f3d5e2e6d056b4beb9cfdc4368cd09fd56f47414c847705243278";
           libraryHaskellDepends = [ array base bytestring containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://sourceforge.net/projects/lazy-regex";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-compat" = callPackage
        ({ mkDerivation, array, base, regex-base, regex-posix, stdenv }:
         mkDerivation {
           pname = "regex-compat";
           version = "0.95.1";
           sha256 = "d57cb1a5a4d66753b18eaa37a1621246f660472243b001894f970037548d953b";
           libraryHaskellDepends = [ array base regex-base regex-posix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://sourceforge.net/projects/lazy-regex";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-compat-tdfa" = callPackage
        ({ mkDerivation, array, base, regex-base, regex-tdfa, stdenv }:
         mkDerivation {
           pname = "regex-compat-tdfa";
           version = "0.95.1.4";
           sha256 = "4fa38ed24ae390eeffe6eef04bbe632d7ecd02b9123729e976e7420f927520dd";
           libraryHaskellDepends = [ array base regex-base regex-tdfa ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/shelarcy/regex-compat-tdfa";
           description = "Unicode Support version of Text.Regex, using regex-tdfa";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-pcre" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, pcre
         , regex-base, stdenv
         }:
         mkDerivation {
           pname = "regex-pcre";
           version = "0.94.4";
           sha256 = "8eaa7d4ac6c0a4ba35aa59fc3f6b8f8e252bb25a47e136791446a74752e226c0";
           libraryHaskellDepends = [
             array base bytestring containers regex-base
           ];
           librarySystemDepends = [ pcre ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/regex-pcre";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) pcre;};
      "regex-pcre-builtin" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, regex-base
         , stdenv
         }:
         mkDerivation {
           pname = "regex-pcre-builtin";
           version = "0.94.4.8.8.35";
           sha256 = "0bd1b695de953ba4b6e6e0de007021c346cb2a6c8e09356fbcd34f8a79d2ea78";
           libraryHaskellDepends = [
             array base bytestring containers regex-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/regex-pcre";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-posix" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, regex-base
         , stdenv
         }:
         mkDerivation {
           pname = "regex-posix";
           version = "0.95.2";
           sha256 = "56019921cd4a4c9682b81ec614236fea816ba8ed8785a1640cd66d8b24fc703e";
           libraryHaskellDepends = [
             array base bytestring containers regex-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://sourceforge.net/projects/lazy-regex";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-tdfa" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, ghc-prim, mtl
         , parsec, regex-base, stdenv
         }:
         mkDerivation {
           pname = "regex-tdfa";
           version = "1.2.2";
           sha256 = "cb12d675be7b31ed8086d8d022023d03eb553e55dbee6e1b7a4154933d471d39";
           revision = "2";
           editedCabalFile = "0l6s7565h6wz5kzdiyzh53fj2nb4mrlzjzczda5i70ki74a82r1j";
           libraryHaskellDepends = [
             array base bytestring containers ghc-prim mtl parsec regex-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ChrisKuklewicz/regex-tdfa";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-tdfa-rc" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, ghc-prim, mtl
         , parsec, regex-base, stdenv
         }:
         mkDerivation {
           pname = "regex-tdfa-rc";
           version = "1.1.8.3";
           sha256 = "e35ee2a782c82c3eb313a478a8e04a464e55ca0369aa91827972ce37440c21ee";
           libraryHaskellDepends = [
             array base bytestring containers ghc-prim mtl parsec regex-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/regex-tdfa";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-tdfa-text" = callPackage
        ({ mkDerivation, array, base, regex-base, regex-tdfa, stdenv, text
         }:
         mkDerivation {
           pname = "regex-tdfa-text";
           version = "1.0.0.3";
           sha256 = "38d77a0d225c306c52c6d4eed12d11d05a4bc4194d547cb9a7a9b6f5a8792001";
           libraryHaskellDepends = [ array base regex-base regex-tdfa text ];
           doHaddock = false;
           doCheck = false;
           description = "Text interface for regex-tdfa";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reinterpret-cast" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "reinterpret-cast";
           version = "0.1.0";
           sha256 = "5654622c904b42c62f2473c64624715dbd458ea00209ed9ab39396eabc1353e4";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/reinterpret-cast";
           description = "Memory reinterpretation casts for Float/Double and Word32/Word64";
           license = stdenv.lib.licenses.mit;
         }) {};
      "relational-query" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, dlist
         , names-th, persistable-record, sql-words, stdenv, template-haskell
         , text, th-reify-compat, time, time-locale-compat, transformers
         }:
         mkDerivation {
           pname = "relational-query";
           version = "0.8.3.2";
           sha256 = "20899f2fcf142e11036e6e6b7360c873e17ded7bb856616e9d40f92d0298d09b";
           revision = "1";
           editedCabalFile = "14211ph0lm6v9x2kxf0y2ij8m9arnyi5s04822iqqdgrkrwl37lr";
           libraryHaskellDepends = [
             array base bytestring containers dlist names-th persistable-record
             sql-words template-haskell text th-reify-compat time
             time-locale-compat transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Typeful, Modular, Relational, algebraic query engine";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "relational-query-HDBC" = callPackage
        ({ mkDerivation, base, containers, convertible, dlist, HDBC
         , HDBC-session, names-th, persistable-record, relational-query
         , relational-schemas, stdenv, template-haskell, th-data-compat
         , transformers
         }:
         mkDerivation {
           pname = "relational-query-HDBC";
           version = "0.6.0.2";
           sha256 = "af8a34fe854114401663b908612e2ad5404cb17e93550b3533b437e92f4f05ed";
           revision = "2";
           editedCabalFile = "0wn5apq63092l1c7yw75j1clw9375mg6axymzc24rhhqm3b2d636";
           libraryHaskellDepends = [
             base containers convertible dlist HDBC HDBC-session names-th
             persistable-record relational-query relational-schemas
             template-haskell th-data-compat transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "HDBC instance of relational-query and typed query interface for HDBC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "relational-record" = callPackage
        ({ mkDerivation, base, persistable-types-HDBC-pg, relational-query
         , relational-query-HDBC, stdenv
         }:
         mkDerivation {
           pname = "relational-record";
           version = "0.1.5.1";
           sha256 = "b62734918834dfecb41be5dd9c9c90d409498e307d26eed37c7df30298e4571b";
           libraryHaskellDepends = [
             base persistable-types-HDBC-pg relational-query
             relational-query-HDBC
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Meta package of Relational Record";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "relational-schemas" = callPackage
        ({ mkDerivation, base, bytestring, containers, persistable-record
         , relational-query, stdenv, template-haskell, time
         }:
         mkDerivation {
           pname = "relational-schemas";
           version = "0.1.3.1";
           sha256 = "d13137773f21b73add30ef9659dc5abc0f5b51ab33c2061c9e9983e4d47151bd";
           revision = "2";
           editedCabalFile = "0m53lnymdd6w6zrlv3nlf7fn0ki7z164mph0r80fyl5abb0bns8g";
           libraryHaskellDepends = [
             base bytestring containers persistable-record relational-query
             template-haskell time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "RDBMSs' schema templates for relational-query";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rematch" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "rematch";
           version = "0.2.0.0";
           sha256 = "f996de29c0e7a47484a16113129166f7df12567d3ca3ea24c5c97e98a8225c51";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A simple api for matchers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "repa" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, QuickCheck, stdenv
         , template-haskell, vector
         }:
         mkDerivation {
           pname = "repa";
           version = "3.4.1.2";
           sha256 = "57f80bbbf6df1c7bca0045a9de8694a25bebe0e5696f59276cc72f165b01dc57";
           revision = "2";
           editedCabalFile = "1br1ggwp4435817liwp04wsaizkdwxqbrlxpnygzdwxabdckknwr";
           libraryHaskellDepends = [
             base bytestring ghc-prim QuickCheck template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repa.ouroborus.net";
           description = "High performance, regular, shape polymorphic parallel arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "repa-algorithms" = callPackage
        ({ mkDerivation, base, repa, stdenv, vector }:
         mkDerivation {
           pname = "repa-algorithms";
           version = "3.4.1.1";
           sha256 = "c4d07910ba2da080e9c5c434047655d7c1330dbfa27dff11a38b2c6e54847e28";
           revision = "1";
           editedCabalFile = "09r6wf5alhga1gv17jg42k6kr0xma2prbbrwiiffzf4xxzi5w0s9";
           libraryHaskellDepends = [ base repa vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repa.ouroborus.net";
           description = "Algorithms using the Repa array library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "repa-devil" = callPackage
        ({ mkDerivation, base, libdevil, repa, stdenv, transformers }:
         mkDerivation {
           pname = "repa-devil";
           version = "0.3.2.6";
           sha256 = "fec3ce06f7370378427c629587dc30ee0f37e8c777c94c8970cb514c1e57fd38";
           libraryHaskellDepends = [ base repa transformers ];
           librarySystemDepends = [ libdevil ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RaphaelJ/repa-devil";
           description = "Support for image reading and writing of Repa arrays using in-place FFI calls";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libdevil;};
      "repa-io" = callPackage
        ({ mkDerivation, base, binary, bmp, bytestring, old-time, repa
         , stdenv, vector
         }:
         mkDerivation {
           pname = "repa-io";
           version = "3.4.1.1";
           sha256 = "b5dbca96a988fb8bd918288ea1cfcf215fe46062e45001b209603b63a39ba9da";
           revision = "2";
           editedCabalFile = "0zslqm87abzrsbrw2dlnsmm8jnpvg7ldi2d83d7p5sih78ksfmmm";
           libraryHaskellDepends = [
             base binary bmp bytestring old-time repa vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repa.ouroborus.net";
           description = "Read and write Repa arrays in various formats";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "repline" = callPackage
        ({ mkDerivation, base, containers, haskeline, mtl, process, stdenv
         }:
         mkDerivation {
           pname = "repline";
           version = "0.1.7.0";
           sha256 = "503a035d8a380ac21c532e48c0f47006ff1c20ed9683f4906fdb304b4b9e55de";
           libraryHaskellDepends = [ base containers haskeline mtl process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdiehl/repline";
           description = "Haskeline wrapper for GHCi-like REPL interfaces";
           license = stdenv.lib.licenses.mit;
         }) {};
      "reroute" = callPackage
        ({ mkDerivation, base, deepseq, graph-core, hashable, hvect, mtl
         , path-pieces, regex-compat, stdenv, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "reroute";
           version = "0.3.1.0";
           sha256 = "5e31044f054305e119f80aa2625ecd4b7453e383d67dc44b8fdd9d64fa476fe9";
           libraryHaskellDepends = [
             base deepseq graph-core hashable hvect mtl path-pieces regex-compat
             text transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/reroute";
           description = "abstract implementation of typed and untyped web routing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "resolve-trivial-conflicts" = callPackage
        ({ mkDerivation, ansi-terminal, base, base-compat, Diff, directory
         , filepath, mtl, optparse-applicative, process, stdenv, unix
         }:
         mkDerivation {
           pname = "resolve-trivial-conflicts";
           version = "0.3.2.3";
           sha256 = "12459698d44496475f48a5f62a8fba5cd746b0aa7552fa577304ee875f85c596";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             ansi-terminal base base-compat Diff directory filepath mtl
             optparse-applicative process unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ElastiLotem/resolve-trivial-conflicts";
           description = "Remove trivial conflict markers in a git repository";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "resource-pool" = callPackage
        ({ mkDerivation, base, hashable, monad-control, stdenv, stm, time
         , transformers, transformers-base, vector
         }:
         mkDerivation {
           pname = "resource-pool";
           version = "0.2.3.2";
           sha256 = "8627eea2bea8824af2723646e74e2af0c73f583dd0c496c9fd242cd9d242bc12";
           libraryHaskellDepends = [
             base hashable monad-control stm time transformers transformers-base
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/pool";
           description = "A high-performance striped resource pooling implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "resourcet" = callPackage
        ({ mkDerivation, base, containers, exceptions, lifted-base, mmorph
         , monad-control, mtl, stdenv, transformers, transformers-base
         , transformers-compat
         }:
         mkDerivation {
           pname = "resourcet";
           version = "1.1.8.1";
           sha256 = "833a3104a554bda7c434c38a8a63992e8b456f057fa8ec6d039e6abe28715527";
           libraryHaskellDepends = [
             base containers exceptions lifted-base mmorph monad-control mtl
             transformers transformers-base transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/conduit";
           description = "Deterministic allocation and freeing of scarce resources";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-client" = callPackage
        ({ mkDerivation, aeson-utils, base, bytestring, case-insensitive
         , data-default, exceptions, http-client, http-conduit, http-types
         , hxt, hxt-pickle-utils, monad-control, mtl, resourcet, rest-types
         , stdenv, tostring, transformers, transformers-base
         , transformers-compat, uri-encode, utf8-string
         }:
         mkDerivation {
           pname = "rest-client";
           version = "0.5.1.1";
           sha256 = "5da423c9f2c87b9b9797ea331c5f248408e5f863d460dfd94b3408249729f663";
           revision = "2";
           editedCabalFile = "0issr73rbnyaqfgx4c0wsy9sq948sqrkima2cr2sb1lkf8n4ihr8";
           libraryHaskellDepends = [
             aeson-utils base bytestring case-insensitive data-default
             exceptions http-client http-conduit http-types hxt hxt-pickle-utils
             monad-control mtl resourcet rest-types tostring transformers
             transformers-base transformers-compat uri-encode utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Utility library for use in generated API client libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-core" = callPackage
        ({ mkDerivation, aeson, aeson-utils, base, base-compat, bytestring
         , case-insensitive, errors, fclabels, hxt, hxt-pickle-utils
         , json-schema, mtl, mtl-compat, multipart, random, rest-stringmap
         , rest-types, safe, split, stdenv, text, transformers
         , transformers-compat, unordered-containers, uri-encode
         , utf8-string, uuid
         }:
         mkDerivation {
           pname = "rest-core";
           version = "0.39";
           sha256 = "d760d0547fc1a99cd949dde08b7945fb93af24f4e55d45ecf410c352d5005404";
           revision = "8";
           editedCabalFile = "12ia5ic2cas82h3dksdy4hzmcw42f13wqwqw0ilbn50q85j2k4pf";
           libraryHaskellDepends = [
             aeson aeson-utils base base-compat bytestring case-insensitive
             errors fclabels hxt hxt-pickle-utils json-schema mtl mtl-compat
             multipart random rest-stringmap rest-types safe split text
             transformers transformers-compat unordered-containers uri-encode
             utf8-string uuid
           ];
           doHaddock = false;
           doCheck = false;
           description = "Rest API library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-gen" = callPackage
        ({ mkDerivation, aeson, base, base-compat, blaze-html, Cabal
         , code-builder, directory, fclabels, filepath, hashable
         , haskell-src-exts, HStringTemplate, hxt, json-schema, pretty
         , process, rest-core, safe, scientific, semigroups, split, stdenv
         , text, uniplate, unordered-containers, vector
         }:
         mkDerivation {
           pname = "rest-gen";
           version = "0.19.0.3";
           sha256 = "9ed4224ed8de81c56000b6814724bfed46f4e7b8890fe5892d308b6edcab2e76";
           revision = "1";
           editedCabalFile = "1g9sjsclfcg57hd4z8bpc949wk6z5v26vi0kxrzhlnhwggcfl4yn";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base-compat blaze-html Cabal code-builder directory
             fclabels filepath hashable haskell-src-exts HStringTemplate hxt
             json-schema pretty process rest-core safe scientific semigroups
             split text uniplate unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Documentation and client generation from rest definition";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-happstack" = callPackage
        ({ mkDerivation, base, containers, happstack-server, mtl, rest-core
         , rest-gen, stdenv, utf8-string
         }:
         mkDerivation {
           pname = "rest-happstack";
           version = "0.3.1.1";
           sha256 = "794f06eb2c96b995397e21f4578bd7094a20334f43883e97af81dbe60b394ff6";
           revision = "2";
           editedCabalFile = "0yr1407fds0h73ijw6iivqq15ybiz3n6s555vxgaay4j4k4pkax9";
           libraryHaskellDepends = [
             base containers happstack-server mtl rest-core rest-gen utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Rest driver for Happstack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-snap" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, case-insensitive
         , rest-core, safe, snap-core, stdenv, unordered-containers
         , uri-encode, utf8-string
         }:
         mkDerivation {
           pname = "rest-snap";
           version = "0.2.0.1";
           sha256 = "24ff57b82808aac05a04d8b1e4ac24e5a2a71655991d95415d8a713533c402d5";
           revision = "1";
           editedCabalFile = "0y39l49ywl1cx0hdr37sgacm31q7sdh4y81qk5115sy68wgxn1gw";
           libraryHaskellDepends = [
             base base-compat bytestring case-insensitive rest-core safe
             snap-core unordered-containers uri-encode utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Rest driver for Snap";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-stringmap" = callPackage
        ({ mkDerivation, aeson, base, containers, hashable, hxt
         , json-schema, stdenv, tostring, unordered-containers
         }:
         mkDerivation {
           pname = "rest-stringmap";
           version = "0.2.0.6";
           sha256 = "66e5a32f04cfcf9826296b3c053c22caa745fd890ccc6ea9199c34529507524a";
           revision = "7";
           editedCabalFile = "14jqqpxxs7vkrf6syycrg2ymh79gl83z13kq261alw5gy8yjnszv";
           libraryHaskellDepends = [
             aeson base containers hashable hxt json-schema tostring
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Maps with stringy keys that can be transcoded to JSON and XML";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-types" = callPackage
        ({ mkDerivation, aeson, base, base-compat, case-insensitive
         , generic-aeson, generic-xmlpickler, hxt, json-schema
         , rest-stringmap, stdenv, text, uuid
         }:
         mkDerivation {
           pname = "rest-types";
           version = "1.14.1.1";
           sha256 = "b7e08e65bbae20bd891f0905c9c785184182172094673ab13e66499e4fe3969a";
           revision = "4";
           editedCabalFile = "04s5xcjycbw9fqhmpx0kmy5wmkpgcs84vam68w428rb7y64099mb";
           libraryHaskellDepends = [
             aeson base base-compat case-insensitive generic-aeson
             generic-xmlpickler hxt json-schema rest-stringmap text uuid
           ];
           doHaddock = false;
           doCheck = false;
           description = "Silk Rest Framework Types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-wai" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, case-insensitive
         , containers, http-types, mime-types, mtl, rest-core, stdenv, text
         , unordered-containers, wai
         }:
         mkDerivation {
           pname = "rest-wai";
           version = "0.2.0.1";
           sha256 = "38205eb7b85a4e052f11db099dd65e9d952b8533d1a35001f0b1958b443c0d02";
           revision = "2";
           editedCabalFile = "1n3sd3vszi0ifw098jf2yan8xcnrxckr22jssl61k0vn74573hw3";
           libraryHaskellDepends = [
             base base-compat bytestring case-insensitive containers http-types
             mime-types mtl rest-core text unordered-containers wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "Rest driver for WAI applications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rethinkdb" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, binary, bytestring
         , containers, data-default, mtl, network, scientific, stdenv, text
         , time, unordered-containers, utf8-string, vector
         }:
         mkDerivation {
           pname = "rethinkdb";
           version = "2.2.0.7";
           sha256 = "ed74dd74333e5cd5fd99dfd84af8c6331fca04d1d04e241b533e2c2936078873";
           revision = "1";
           editedCabalFile = "01dpf895ww8habkfikhppna0jp6bqxfai4vs9cz080jxiyzw7jw7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base base64-bytestring binary bytestring containers
             data-default mtl network scientific text time unordered-containers
             utf8-string vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/atnnn/haskell-rethinkdb";
           description = "A driver for RethinkDB 2.2";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "rethinkdb-client-driver" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, containers
         , hashable, mtl, network, old-locale, scientific, stdenv, stm
         , template-haskell, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "rethinkdb-client-driver";
           version = "0.0.22";
           sha256 = "4a192e989e1f1b60398123ad2c74701203b66a33a220f1b5c47ad495e98575bb";
           revision = "1";
           editedCabalFile = "0iha32qkj5s29l1790ihwasy6j50gqgxds214v446bim0fqljg6d";
           libraryHaskellDepends = [
             aeson base binary bytestring containers hashable mtl network
             old-locale scientific stm template-haskell text time
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/wereHamster/rethinkdb-client-driver";
           description = "Client driver for RethinkDB";
           license = stdenv.lib.licenses.mit;
         }) {};
      "retry" = callPackage
        ({ mkDerivation, base, data-default-class, exceptions, ghc-prim
         , random, stdenv, transformers
         }:
         mkDerivation {
           pname = "retry";
           version = "0.7.4.2";
           sha256 = "521b392570b37b17ac8aaea2586a0a16a578f56b9cd0bbf69813b35f7ed2b47c";
           libraryHaskellDepends = [
             base data-default-class exceptions ghc-prim random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/Soostone/retry";
           description = "Retry combinators for monadic actions that may fail";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rev-state" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "rev-state";
           version = "0.1.2";
           sha256 = "ee070e39d7f7d673593e2f356ab317bc2fdd0d8a283f8316c0e5b5adbdf0f919";
           revision = "2";
           editedCabalFile = "0dfiwf4808vjhayv7xr058rzwl6jmsmhzy03mk48m9kmlqibk3fy";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/rev-state#readme";
           description = "Reverse State monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rfc5051" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv }:
         mkDerivation {
           pname = "rfc5051";
           version = "0.1.0.3";
           sha256 = "e38dab28a5625774be60545c8c99e647b79bbc0ac0bc9c65fe6b2ebef160642b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring containers ];
           doHaddock = false;
           doCheck = false;
           description = "Simple unicode collation as per RFC5051";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "riak" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, binary, blaze-builder
         , bytestring, containers, data-default-class, deepseq
         , enclosed-exceptions, exceptions, hashable, mersenne-random-pure64
         , monad-control, network, protocol-buffers, pureMD5, random
         , random-shuffle, resource-pool, riak-protobuf, semigroups, stdenv
         , text, time, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "riak";
           version = "1.0.1.1";
           sha256 = "d35e67fdcb397eedd3cddeae13dcbfa397b3ce36e7e76bb0c49d5a74f8bfc13f";
           libraryHaskellDepends = [
             aeson attoparsec base binary blaze-builder bytestring containers
             data-default-class deepseq enclosed-exceptions exceptions hashable
             mersenne-random-pure64 monad-control network protocol-buffers
             pureMD5 random random-shuffle resource-pool riak-protobuf
             semigroups text time transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/markhibberd/riak-haskell-client";
           description = "A Haskell client for the Riak decentralized data store";
           license = "unknown";
         }) {};
      "riak-protobuf" = callPackage
        ({ mkDerivation, array, base, parsec, protocol-buffers
         , protocol-buffers-descriptor, stdenv
         }:
         mkDerivation {
           pname = "riak-protobuf";
           version = "0.21.0.0";
           sha256 = "cfa49952f54a80ebb4fdc9cc35190b8226b01b0a21b50c9da309548fa367e39a";
           libraryHaskellDepends = [
             array base parsec protocol-buffers protocol-buffers-descriptor
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/markhibberd/riak-haskell-client";
           description = "Haskell types for the Riak protocol buffer API";
           license = "unknown";
         }) {};
      "rng-utils" = callPackage
        ({ mkDerivation, base, bytestring, mwc-random, stdenv, vector }:
         mkDerivation {
           pname = "rng-utils";
           version = "0.2.1";
           sha256 = "cac94b9ae624b1a4cbbfd47ff901570517f6416a9eee219065c0b5d5c036de87";
           libraryHaskellDepends = [ base bytestring mwc-random vector ];
           doHaddock = false;
           doCheck = false;
           description = "RNG within an MVar for convenient concurrent use";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rose-trees" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, mtl
         , QuickCheck, quickcheck-instances, semigroupoids, semigroups, sets
         , stdenv, unordered-containers, witherable
         }:
         mkDerivation {
           pname = "rose-trees";
           version = "0.0.4.3";
           sha256 = "bdd180b27e959316af0825a0de7151ef7cb640fefaa1aecdcfdfab1b94d5e426";
           libraryHaskellDepends = [
             base containers deepseq hashable mtl QuickCheck
             quickcheck-instances semigroupoids semigroups sets
             unordered-containers witherable
           ];
           doHaddock = false;
           doCheck = false;
           description = "A collection of rose tree structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rosezipper" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "rosezipper";
           version = "0.2";
           sha256 = "6cab4f1c192cc3b8b0a9eb11a32780d235020a539a0e91125eed5ec590bad7bc";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Generic zipper implementation for Data.Tree";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rotating-log" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, old-locale
         , stdenv, time, time-locale-compat
         }:
         mkDerivation {
           pname = "rotating-log";
           version = "0.4.2";
           sha256 = "6ef0ae7ecb9e30387b4088edc173fbb90b8c8b7514f9f7b8b6d92f7d95f754ec";
           libraryHaskellDepends = [
             base bytestring directory filepath old-locale time
             time-locale-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/Soostone/rotating-log";
           description = "Size-limited, concurrent, automatically-rotating log writer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rss-conduit" = callPackage
        ({ mkDerivation, base, conduit, conduit-parse, containers
         , exceptions, foldl, lens-simple, mono-traversable, parsers, safe
         , stdenv, text, time, timerep, uri-bytestring, xml-conduit
         , xml-conduit-parse, xml-types
         }:
         mkDerivation {
           pname = "rss-conduit";
           version = "0.2.0.2";
           sha256 = "304a2918743f7b65191ce8c4a57c94b1c3afb2692e5c79d6b0822a05be3294d1";
           libraryHaskellDepends = [
             base conduit conduit-parse containers exceptions foldl lens-simple
             mono-traversable parsers safe text time timerep uri-bytestring
             xml-conduit xml-conduit-parse xml-types
           ];
           doHaddock = false;
           doCheck = false;
           description = "Streaming parser/renderer for the RSS 2.0 standard.";
           license = "unknown";
         }) {};
      "runmemo" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "runmemo";
           version = "1.0.0.1";
           sha256 = "ba5ef3177f8fe5f443808e44f62d03b23ac19bbef7f708e40532031a3505d689";
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/runmemo";
           description = "A simple memoization helper library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rvar" = callPackage
        ({ mkDerivation, base, MonadPrompt, mtl, random-source, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "rvar";
           version = "0.2.0.3";
           sha256 = "d78aaf2ffdba182dda95d1692fec7abc5d77fa371120618a397b5675438c6bc0";
           libraryHaskellDepends = [
             base MonadPrompt mtl random-source transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/random-fu";
           description = "Random Variables";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "s3-signer" = callPackage
        ({ mkDerivation, base, base64-bytestring, cryptohash, http-types
         , stdenv, time, utf8-string
         }:
         mkDerivation {
           pname = "s3-signer";
           version = "0.3.0.0";
           sha256 = "89e957f81211a417c425214d3d7eafb0f15f695ffe0002f4198f2e34b43bc494";
           libraryHaskellDepends = [
             base base64-bytestring cryptohash http-types time utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmjio/s3-signer";
           description = "Pre-signed Amazon S3 URLs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "safe" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "safe";
           version = "0.3.10";
           sha256 = "da724ad9cf4b424c4881a50439c3b13777f477e3301c068ce7d54e9031e14b9a";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/safe#readme";
           description = "Library of safe (exception free) functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "safe-exceptions" = callPackage
        ({ mkDerivation, base, deepseq, exceptions, stdenv, transformers }:
         mkDerivation {
           pname = "safe-exceptions";
           version = "0.1.4.0";
           sha256 = "c52078c8457f8233a3796f84a3ae3f336f4668a013ba935e74c7218eeb9a41a6";
           libraryHaskellDepends = [ base deepseq exceptions transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/safe-exceptions#readme";
           description = "Safe, consistent, and easy exception handling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "safecopy" = callPackage
        ({ mkDerivation, array, base, bytestring, cereal, containers
         , old-time, stdenv, template-haskell, text, time, vector
         }:
         mkDerivation {
           pname = "safecopy";
           version = "0.9.2";
           sha256 = "ba666b242653d6b23fc9bc19dfa9d4367148aeb9235baf3738b91150ac9b6ed3";
           libraryHaskellDepends = [
             array base bytestring cereal containers old-time template-haskell
             text time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acid-state/safecopy";
           description = "Binary serialization with version control";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "sampling" = callPackage
        ({ mkDerivation, base, foldl, mwc-random, primitive, stdenv, vector
         }:
         mkDerivation {
           pname = "sampling";
           version = "0.2.0";
           sha256 = "0300849bb9b276455397df71fcf061e1db8563045af176f04a2ad31dd333295a";
           revision = "1";
           editedCabalFile = "1c95gv6dc9wpjsy89mbdn5d8xyw9b0qrdncg8x883nr9lv4jjnbh";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base foldl mwc-random primitive vector ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtobin/sampling";
           description = "Sample values from collections";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sandi" = callPackage
        ({ mkDerivation, base, bytestring, conduit, exceptions, stdenv }:
         mkDerivation {
           pname = "sandi";
           version = "0.3.6";
           sha256 = "fafcb3501b8a17238de44239ef62c3051f9a33010424ef91dd76057257bf2284";
           libraryHaskellDepends = [ base bytestring conduit exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/sandi";
           description = "Data encoding library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sandman" = callPackage
        ({ mkDerivation, base, Cabal, containers, directory, filepath
         , optparse-applicative, process, stdenv, text, unix-compat
         }:
         mkDerivation {
           pname = "sandman";
           version = "0.2.0.1";
           sha256 = "407d283e1fc4a2a369615bac569683bf399ac14ddbce1331850bfe1d7837ce64";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base Cabal containers directory filepath optparse-applicative
             process text unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/abhinav/sandman#readme";
           description = "Manages Cabal sandboxes to avoid rebuilding packages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sbv" = callPackage
        ({ mkDerivation, array, async, base, base-compat, containers
         , crackNum, data-binary-ieee754, deepseq, directory, filepath
         , HUnit, mtl, old-time, pretty, process, QuickCheck, random, stdenv
         , syb
         }:
         mkDerivation {
           pname = "sbv";
           version = "5.11";
           sha256 = "9ede93f41cdbdfb73638f25eec9c201190d049163ad503202ebefa2d18cfc90d";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array async base base-compat containers crackNum
             data-binary-ieee754 deepseq directory filepath mtl old-time pretty
             process QuickCheck random syb
           ];
           executableHaskellDepends = [
             base data-binary-ieee754 directory filepath HUnit process syb
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://leventerkok.github.com/sbv/";
           description = "SMT Based Verification: Symbolic Haskell theorem prover using SMT solving";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scalpel" = callPackage
        ({ mkDerivation, base, bytestring, containers, curl, data-default
         , regex-base, regex-tdfa, stdenv, tagsoup, text
         }:
         mkDerivation {
           pname = "scalpel";
           version = "0.3.1";
           sha256 = "5db9046a506f40d713fb678e496b7fd9cfa21c453bd5e6f574720d57826a204f";
           libraryHaskellDepends = [
             base bytestring containers curl data-default regex-base regex-tdfa
             tagsoup text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/scalpel";
           description = "A high level web scraping library for Haskell";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "scanner" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "scanner";
           version = "0.2";
           sha256 = "3a020d68a0372a5211c72e55eeb299738ea608d17184bc68f74d31ebe667a5e9";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/scanner";
           description = "Fast non-backtracking incremental combinator parsing for bytestrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scientific" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq
         , ghc-prim, hashable, integer-gmp, stdenv, text, vector
         }:
         mkDerivation {
           pname = "scientific";
           version = "0.3.4.9";
           sha256 = "108330662b0af9a04d7da55864211ce12008efe36614d897ba635e80670918a8";
           revision = "1";
           editedCabalFile = "0q8xnyyyl4llmfi0ph7cxi7cqyq3v8w7am027in39ir2wrh5jgw3";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq ghc-prim hashable
             integer-gmp text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/scientific";
           description = "Numbers represented using scientific notation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scotty" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring
         , case-insensitive, data-default-class, fail, http-types
         , monad-control, mtl, nats, network, regex-compat, stdenv, text
         , transformers, transformers-base, transformers-compat, wai
         , wai-extra, warp
         }:
         mkDerivation {
           pname = "scotty";
           version = "0.11.0";
           sha256 = "892203c937ccf1279f5005ddb78ebea84629b80687a1e38fc118b38011a386ed";
           revision = "10";
           editedCabalFile = "0y0ll3nn3n6n1ry2mvqm1g28a688hpba8kaw30m17p7fnv0m7368";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring case-insensitive
             data-default-class fail http-types monad-control mtl nats network
             regex-compat text transformers transformers-base
             transformers-compat wai wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scotty-web/scotty";
           description = "Haskell web framework inspired by Ruby's Sinatra, using WAI and Warp";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scrypt" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, entropy
         , stdenv
         }:
         mkDerivation {
           pname = "scrypt";
           version = "0.5.0";
           sha256 = "3ec0a622393e2a4dbbce4c899602c848d924f8516688491b1162331b7093d9b2";
           libraryHaskellDepends = [
             base base64-bytestring bytestring entropy
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/informatikr/scrypt";
           description = "Stronger password hashing via sequential memory-hard functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sdl2" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, linear, SDL2
         , StateVar, stdenv, text, transformers, vector
         }:
         mkDerivation {
           pname = "sdl2";
           version = "2.1.3";
           sha256 = "ce18963594fa21d658deb90d22e48cd17e499b2300db265a679bb2724cb28082";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring exceptions linear StateVar text transformers vector
           ];
           librarySystemDepends = [ SDL2 ];
           libraryPkgconfigDepends = [ SDL2 ];
           doHaddock = false;
           doCheck = false;
           description = "Both high- and low-level bindings to the SDL library (version 2.0.2+).";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) SDL2;};
      "securemem" = callPackage
        ({ mkDerivation, base, byteable, bytestring, ghc-prim, memory
         , stdenv
         }:
         mkDerivation {
           pname = "securemem";
           version = "0.1.9";
           sha256 = "feb60dc542ea3ce9cdb449093b85dc69e43df310aab4fd161e4cdaa3ba847036";
           revision = "1";
           editedCabalFile = "1x5b85981p00s5mrbj4g8marg1q8xfxclmca27fbzw9x6psyq39g";
           libraryHaskellDepends = [
             base byteable bytestring ghc-prim memory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-securemem";
           description = "abstraction to an auto scrubbing and const time eq, memory chunk";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semigroupoid-extras" = callPackage
        ({ mkDerivation, base, profunctors, semigroupoids, stdenv }:
         mkDerivation {
           pname = "semigroupoid-extras";
           version = "5";
           sha256 = "102e33b55cc3b15a1b714825a3703f3fc2bb09d8038404af442d35c0ac0c3832";
           libraryHaskellDepends = [ base profunctors semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/semigroupoid-extras";
           description = "Semigroupoids that depend on PolyKinds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semigroupoids" = callPackage
        ({ mkDerivation, base, base-orphans, bifunctors, comonad
         , containers, contravariant, distributive, semigroups, stdenv
         , tagged, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "semigroupoids";
           version = "5.0.1";
           sha256 = "0ce989b8b0dc02ebe9aa19c47982a6bc802b8dc973c39c7ac40ea7a21cdbd616";
           revision = "2";
           editedCabalFile = "14s5yk006n3k0m2d9gn9clfh0qp65lcv4japrfn6yyp1zygyz05m";
           libraryHaskellDepends = [
             base base-orphans bifunctors comonad containers contravariant
             distributive semigroups tagged transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/semigroupoids";
           description = "Semigroupoids: Category sans id";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semigroups" = callPackage
        ({ mkDerivation, base, binary, bytestring, bytestring-builder
         , containers, deepseq, hashable, stdenv, tagged, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "semigroups";
           version = "0.18.2";
           sha256 = "5dc9ff8622af25412fb071098063da288cd408a844e67c3371b78daa86d5d0e4";
           libraryHaskellDepends = [
             base binary bytestring bytestring-builder containers deepseq
             hashable tagged text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/semigroups/";
           description = "Anything that associates";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semiring-simple" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "semiring-simple";
           version = "1.0.0.1";
           sha256 = "c08d1b533f4559fc55119f563a6cf3d74ad7c6f5916c2efe00b50d2a5169fd28";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A module for dealing with semirings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semver" = callPackage
        ({ mkDerivation, attoparsec, base, deepseq, stdenv, text }:
         mkDerivation {
           pname = "semver";
           version = "0.3.3.1";
           sha256 = "36d3369706836d60f3bc517f30c6860734481866363723904b8768823b6bc8b1";
           libraryHaskellDepends = [ attoparsec base deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/semver";
           description = "Representation, manipulation, and de/serialisation of Semantic Versions";
           license = "unknown";
         }) {};
      "sendfile" = callPackage
        ({ mkDerivation, base, bytestring, network, stdenv }:
         mkDerivation {
           pname = "sendfile";
           version = "0.7.9";
           sha256 = "102fdf6db8c00f5a5981c6eed5acba1368a2d79b2970ce5b22ceb180aa0fdc42";
           libraryHaskellDepends = [ base bytestring network ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/stepcut/sendfile";
           description = "A portable sendfile library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "seqalign" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, vector }:
         mkDerivation {
           pname = "seqalign";
           version = "0.2.0.4";
           sha256 = "4ea194658d865890157d3df882ed21b0c089cdff7f80ea613ae25c5f3d744305";
           libraryHaskellDepends = [ base bytestring vector ];
           doHaddock = false;
           doCheck = false;
           description = "Sequence Alignment";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "seqloc" = callPackage
        ({ mkDerivation, attoparsec, base, biocore, bytestring, hashable
         , stdenv, unordered-containers, vector
         }:
         mkDerivation {
           pname = "seqloc";
           version = "0.6.1.1";
           sha256 = "4435e76ba86417612b6bd6a173dc99444d5fe9184a9822b1edf13c808d4f55c3";
           libraryHaskellDepends = [
             attoparsec base biocore bytestring hashable unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.ingolia-lab.org/seqloc-tutorial.html";
           description = "Handle sequence locations for bioinformatics";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serf" = callPackage
        ({ mkDerivation, attoparsec, base, conduit, conduit-extra, mtl
         , operational, process, resourcet, stdenv, text
         }:
         mkDerivation {
           pname = "serf";
           version = "0.1.1.0";
           sha256 = "d6c9c6ddf99a2119c6686732caf9f04ef8e9c4df5519a8bbd4ac7f5531d4c067";
           libraryHaskellDepends = [
             attoparsec base conduit conduit-extra mtl operational process
             resourcet text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/sanetracker/serf";
           description = "Interact with Serf via Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serialise" = callPackage
        ({ mkDerivation, array, base, bytestring, cborg, containers
         , ghc-prim, half, hashable, primitive, stdenv, text, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "serialise";
           version = "0.2.0.0";
           sha256 = "405bb6eb01e5cc64e929cf917119e1e2119866600c8caa1a85cd90e43b5713c7";
           revision = "2";
           editedCabalFile = "1wvqzrbf80ry5xc2s9va24024gfgwi6xj1yvm7578f7mq0k1zqvf";
           libraryHaskellDepends = [
             array base bytestring cborg containers ghc-prim half hashable
             primitive text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/well-typed/cborg";
           description = "A binary serialisation library for Haskell values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "serialport" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "serialport";
           version = "0.4.7";
           sha256 = "077c210212ff92611b3d8a3578f3ea1f78586c094057ccc5d1dcc3170fcf4dfc";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jputcu/serialport";
           description = "Cross platform serial port library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
         , bytestring-conversion, case-insensitive, http-api-data
         , http-media, http-types, mmorph, mtl, network-uri, stdenv
         , string-conversions, text, vault
         }:
         mkDerivation {
           pname = "servant";
           version = "0.7.1";
           sha256 = "e4e847df340f76172f719d7570cbf2cc59e4045aa994bb764f0ca5fd11c6126c";
           libraryHaskellDepends = [
             aeson attoparsec base base-compat bytestring bytestring-conversion
             case-insensitive http-api-data http-media http-types mmorph mtl
             network-uri string-conversions text vault
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "A family of combinators for defining webservices APIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-JuicyPixels" = callPackage
        ({ mkDerivation, base, bytestring, http-media, JuicyPixels, servant
         , servant-server, stdenv, wai, warp
         }:
         mkDerivation {
           pname = "servant-JuicyPixels";
           version = "0.3.0.2";
           sha256 = "34ed22ef256d7ff3af3fff56484261448928f140b1b4287965619fe6b10b3ebd";
           revision = "1";
           editedCabalFile = "1sj4qyaf75nf1mciddga30b8ddrwv94184cz751n9abxidl18r49";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring http-media JuicyPixels servant
           ];
           executableHaskellDepends = [
             base JuicyPixels servant servant-server wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tvh/servant-JuicyPixels";
           description = "Servant support for JuicyPixels";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-blaze" = callPackage
        ({ mkDerivation, base, blaze-html, http-media, servant, stdenv }:
         mkDerivation {
           pname = "servant-blaze";
           version = "0.7.1";
           sha256 = "90ed1c7a22b83bee344ef3896203f3699b7633bf986ffa064752c3596c072646";
           revision = "6";
           editedCabalFile = "051m44rqmxkl30n96qcbz1xwwsw2n7l7laflnc0xydc40ws0bj96";
           libraryHaskellDepends = [ base blaze-html http-media servant ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Blaze-html support for servant";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-cassava" = callPackage
        ({ mkDerivation, base, cassava, http-media, servant, stdenv, vector
         }:
         mkDerivation {
           pname = "servant-cassava";
           version = "0.7.1";
           sha256 = "385bf6187f86c0fb9ba39578eb132118d2ada5dd17f1d0abd6235e4e9113623d";
           revision = "2";
           editedCabalFile = "0yp3x4ki4amx30a1mshk5xb924swyw7mgdllz80hsaqgyq14mgqv";
           libraryHaskellDepends = [ base cassava http-media servant vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Servant CSV content-type for cassava";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-client" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , bytestring, exceptions, http-api-data, http-client
         , http-client-tls, http-media, http-types, network-uri, safe
         , servant, stdenv, string-conversions, text, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "servant-client";
           version = "0.7.1";
           sha256 = "1aecf3d0d573900bc0b20e3ecadd0561d8cbaaf461efb40b213341d36396661d";
           revision = "1";
           editedCabalFile = "1hq0k0ibz617189vmyjrspy30hw1kadkmgp6nknmbrlqpc0j6p1f";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring bytestring exceptions
             http-api-data http-client http-client-tls http-media http-types
             network-uri safe servant string-conversions text transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "automatical derivation of querying functions for servant webservices";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-docs" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring
         , bytestring-conversion, case-insensitive, control-monad-omega
         , hashable, http-media, http-types, lens, servant, stdenv
         , string-conversions, text, unordered-containers
         }:
         mkDerivation {
           pname = "servant-docs";
           version = "0.7.1";
           sha256 = "cd1a9fbcba479a9086fb562ad5c5d5921d2e4d1d079f7922ef0f3d2c75701964";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring bytestring-conversion
             case-insensitive control-monad-omega hashable http-media http-types
             lens servant string-conversions text unordered-containers
           ];
           executableHaskellDepends = [
             aeson base bytestring-conversion lens servant string-conversions
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "generate API docs for your servant webservice";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-foreign" = callPackage
        ({ mkDerivation, base, http-types, lens, servant, stdenv, text }:
         mkDerivation {
           pname = "servant-foreign";
           version = "0.7.1";
           sha256 = "93ee994eeb20b28a00fea5092ec34223c4826c4db6da71f4150d8a91950fb578";
           libraryHaskellDepends = [ base http-types lens servant text ];
           doHaddock = false;
           doCheck = false;
           description = "Helpers for generating clients for servant APIs in any programming language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-js" = callPackage
        ({ mkDerivation, base, base-compat, charset, lens, servant-foreign
         , stdenv, text
         }:
         mkDerivation {
           pname = "servant-js";
           version = "0.7.1";
           sha256 = "15f4f26ffe2e9613defe30c028c43bc685f1582a6a0d97186dea5867c5cd5e89";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base-compat charset lens servant-foreign text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Automatically derive javascript functions to query servant webservices";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-lucid" = callPackage
        ({ mkDerivation, base, http-media, lucid, servant, stdenv }:
         mkDerivation {
           pname = "servant-lucid";
           version = "0.7.1";
           sha256 = "ec26ba7d159b09be10beacf6242f6ae1bd111e9c738bfbf3cf2f560f48e0fe40";
           revision = "6";
           editedCabalFile = "0bz3j6xjig6qj7qwkvzv9kqvivd6qvz0kn42lpwg1kcf1j6w31mc";
           libraryHaskellDepends = [ base http-media lucid servant ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Servant support for lucid";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-mock" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-types, QuickCheck
         , servant, servant-server, stdenv, transformers, wai, warp
         }:
         mkDerivation {
           pname = "servant-mock";
           version = "0.7.1";
           sha256 = "e9bec220198a9c9ae67782d88870ea4002562ad20eb6302b5f5a4d6f9752a169";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring http-types QuickCheck servant servant-server
             transformers wai
           ];
           executableHaskellDepends = [
             aeson base QuickCheck servant-server warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-servant/servant";
           description = "Derive a mock server for free from your servant API types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-server" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat
         , base64-bytestring, bytestring, containers, filepath
         , http-api-data, http-types, mtl, network, network-uri, safe
         , servant, split, stdenv, string-conversions, system-filepath, text
         , transformers, transformers-compat, wai, wai-app-static, warp
         , word8
         }:
         mkDerivation {
           pname = "servant-server";
           version = "0.7.1";
           sha256 = "ba4f10cc14c216cf27e08cae7e7cbb717930400e46dbecc9b8354751584909eb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base base-compat base64-bytestring bytestring
             containers filepath http-api-data http-types mtl network
             network-uri safe servant split string-conversions system-filepath
             text transformers transformers-compat wai wai-app-static warp word8
           ];
           executableHaskellDepends = [ aeson base servant text wai warp ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "A family of combinators for defining webservices APIs and serving them";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-swagger" = callPackage
        ({ mkDerivation, aeson, base, bytestring, hspec, http-media, lens
         , QuickCheck, servant, stdenv, swagger2, text, unordered-containers
         }:
         mkDerivation {
           pname = "servant-swagger";
           version = "1.0.3";
           sha256 = "ea1b3c7f33ae1c788ef33858c9c74849f450155c1bd81dcd472a36389aa17597";
           revision = "2";
           editedCabalFile = "0nzq618ajbflp9ximgw781ic7n0dlxiqjahk08dyrlzcgpib4xwj";
           libraryHaskellDepends = [
             aeson base bytestring hspec http-media lens QuickCheck servant
             swagger2 text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-servant/servant-swagger";
           description = "Generate Swagger specification for your servant API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-yaml" = callPackage
        ({ mkDerivation, base, bytestring, http-media, servant, stdenv
         , yaml
         }:
         mkDerivation {
           pname = "servant-yaml";
           version = "0.1.0.0";
           sha256 = "c917d9b046b06a9c4386f743a78142c27cf7f0ec1ad8562770ab9828f2ee3204";
           revision = "21";
           editedCabalFile = "1xrlhbgh54ny4xiqcdbka7i86wkyyqndwwv3r3k47xdr5683iyc1";
           libraryHaskellDepends = [
             base bytestring http-media servant yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-servant/servant-yaml#readme";
           description = "Servant support for yaml";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "serversession" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , data-default, hashable, nonce, path-pieces, stdenv, text, time
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "serversession";
           version = "1.0.1";
           sha256 = "3ffbefd87017e8d46fbbe380f59e24672aa9c06b999da5f9ae0b052094d94822";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring data-default hashable nonce
             path-pieces text time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "Secure, modular server-side sessions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serversession-backend-acid-state" = callPackage
        ({ mkDerivation, acid-state, base, containers, mtl, safecopy
         , serversession, stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "serversession-backend-acid-state";
           version = "1.0.3";
           sha256 = "005317d6b31500738979d5affc858c5d2642dc86122b360c28a0737aac2a7ce6";
           libraryHaskellDepends = [
             acid-state base containers mtl safecopy serversession
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "Storage backend for serversession using acid-state";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serversession-backend-persistent" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring, cereal
         , path-pieces, persistent, serversession, stdenv, tagged, text
         , time, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "serversession-backend-persistent";
           version = "1.0.2";
           sha256 = "19dfb2c55d64168e3fa2ceb6476ac55c67e69a750e0a39b400d9b3b0fbd3be4b";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring cereal path-pieces
             persistent serversession tagged text time transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "Storage backend for serversession using persistent and an RDBMS";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serversession-backend-redis" = callPackage
        ({ mkDerivation, base, bytestring, hedis, path-pieces
         , serversession, stdenv, tagged, text, time, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "serversession-backend-redis";
           version = "1.0.1";
           sha256 = "b4b30860fa2e431fd7101b3fb5541e7a687bce71886ca164564c35fbf104af4f";
           libraryHaskellDepends = [
             base bytestring hedis path-pieces serversession tagged text time
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "Storage backend for serversession using Redis";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serversession-frontend-snap" = callPackage
        ({ mkDerivation, base, bytestring, nonce, path-pieces
         , serversession, snap, snap-core, stdenv, text, time, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "serversession-frontend-snap";
           version = "1.0";
           sha256 = "91719ff595a845f26a670c4f41c9a1d405d78ee4f213e666fa2e98ede46049d8";
           libraryHaskellDepends = [
             base bytestring nonce path-pieces serversession snap snap-core text
             time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "Snap bindings for serversession";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serversession-frontend-wai" = callPackage
        ({ mkDerivation, base, bytestring, cookie, data-default
         , path-pieces, serversession, stdenv, text, time, transformers
         , unordered-containers, vault, wai, wai-session
         }:
         mkDerivation {
           pname = "serversession-frontend-wai";
           version = "1.0";
           sha256 = "0b48130e3d3915dc46ec2392984e7862d066f6ddd454127a98b0c21c2574b167";
           libraryHaskellDepends = [
             base bytestring cookie data-default path-pieces serversession text
             time transformers unordered-containers vault wai wai-session
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "wai-session bindings for serversession";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serversession-frontend-yesod" = callPackage
        ({ mkDerivation, base, bytestring, containers, cookie, data-default
         , path-pieces, serversession, stdenv, text, time, transformers
         , unordered-containers, wai, yesod-core
         }:
         mkDerivation {
           pname = "serversession-frontend-yesod";
           version = "1.0";
           sha256 = "063946df7bf693e26973f81dd72b3586115dfac6b358421e4a7ada48e47c6753";
           libraryHaskellDepends = [
             base bytestring containers cookie data-default path-pieces
             serversession text time transformers unordered-containers wai
             yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "Yesod bindings for serversession";
           license = stdenv.lib.licenses.mit;
         }) {};
      "servius" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-html, bytestring
         , http-types, markdown, shakespeare, stdenv, text, wai
         , wai-app-static
         }:
         mkDerivation {
           pname = "servius";
           version = "1.2.0.2";
           sha256 = "c11682eb485f028aaf2dc6abdbda38cc5a68fd57521cc3ffb5b56b765e9b5d2b";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base blaze-builder blaze-html bytestring http-types markdown
             shakespeare text wai wai-app-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/servius#readme";
           description = "Warp web server with template rendering";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ses-html" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-html, byteable
         , bytestring, cryptohash, HsOpenSSL, http-streams, stdenv, tagsoup
         , time
         }:
         mkDerivation {
           pname = "ses-html";
           version = "0.3.0.1";
           sha256 = "07ce0cc9777d9fac050cb2546de72c56625a47769a046e49b9d11f74c9c8bccf";
           libraryHaskellDepends = [
             base base64-bytestring blaze-html byteable bytestring cryptohash
             HsOpenSSL http-streams tagsoup time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Send HTML formatted emails using Amazon's SES REST API with blaze";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "set-extra" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, syb }:
         mkDerivation {
           pname = "set-extra";
           version = "1.4";
           sha256 = "29dbee21b011f259abbe6f3ee7cf65fd58c8b79ff5568bc6b09e613f45bc9733";
           libraryHaskellDepends = [ base containers mtl syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ddssff/set-extra";
           description = "Functions that could be added to Data.Set.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "set-monad" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "set-monad";
           version = "0.2.0.0";
           sha256 = "eb2b4312c4a71024ea1c85683065c1052b0065b7d96df68cd1c4390c1ab2afdb";
           libraryHaskellDepends = [ base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "Set monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "setenv" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "setenv";
           version = "0.1.1.3";
           sha256 = "e358df39afc03d5a39e2ec650652d845c85c80cc98fe331654deafb4767ecb32";
           revision = "1";
           editedCabalFile = "0ny4g3kjys0hqg41mnwrsymy1bwhl8l169kis4y4fa58sb06m4f5";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           description = "A cross-platform library for setting environment variables";
           license = stdenv.lib.licenses.mit;
         }) {};
      "setlocale" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "setlocale";
           version = "1.0.0.4";
           sha256 = "32396aedcb8fdd6c56821dcde25c2cbd76462b13a6dc229bec29cb78df1fa7e9";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/IchUndNichtDu/haskell-setlocale";
           description = "Haskell bindings to setlocale";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sets" = callPackage
        ({ mkDerivation, base, commutative, composition, containers
         , contravariant, hashable, keys, mtl, QuickCheck, semigroupoids
         , semigroups, stdenv, transformers, transformers-base
         , unordered-containers, witherable
         }:
         mkDerivation {
           pname = "sets";
           version = "0.0.5.2";
           sha256 = "be20d5b7b4a5770b7089879f3ef7226c485f4d5bb17e87f979f3bb6475e48713";
           libraryHaskellDepends = [
             base commutative composition containers contravariant hashable keys
             mtl QuickCheck semigroupoids semigroups transformers
             transformers-base unordered-containers witherable
           ];
           doHaddock = false;
           doCheck = false;
           description = "Ducktyped set interface for Haskell containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "shake" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, directory
         , extra, filepath, hashable, js-flot, js-jquery, primitive, process
         , random, stdenv, time, transformers, unix, unordered-containers
         , utf8-string
         }:
         mkDerivation {
           pname = "shake";
           version = "0.15.10";
           sha256 = "36331a3cf3e29578c3134e4ee6481dd932e7d40704f5c38703a0eb231ba433d0";
           revision = "2";
           editedCabalFile = "13bcpb29p3bv9qkm7ywyndgfkny0lm63x2asp7j134hrbhyrn8bd";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bytestring deepseq directory extra filepath hashable
             js-flot js-jquery process random time transformers unix
             unordered-containers utf8-string
           ];
           executableHaskellDepends = [
             base binary bytestring deepseq directory extra filepath hashable
             js-flot js-jquery primitive process random time transformers unix
             unordered-containers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://shakebuild.com";
           description = "Build system library, like Make, but more accurate dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shake-language-c" = callPackage
        ({ mkDerivation, base, data-default-class, fclabels, process, shake
         , split, stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "shake-language-c";
           version = "0.9.1";
           sha256 = "827d4225d9c52ab784793831a41f5f594ece21113ad0e5da540505a42842db70";
           libraryHaskellDepends = [
             base data-default-class fclabels process shake split
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/samplecount/shake-language-c";
           description = "Utilities for cross-compiling with Shake";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "shakespeare" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
         , containers, directory, exceptions, ghc-prim, parsec, process
         , scientific, stdenv, template-haskell, text, time, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "shakespeare";
           version = "2.0.11.2";
           sha256 = "536327335c60f144aa372e4e0f163097bb0b435e28438bf7c54f1f22271f71d4";
           libraryHaskellDepends = [
             aeson base blaze-html blaze-markup bytestring containers directory
             exceptions ghc-prim parsec process scientific template-haskell text
             time transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/shakespearean-templates";
           description = "A toolkit for making compile-time interpolated templates";
           license = stdenv.lib.licenses.mit;
         }) {};
      "shell-conduit" = callPackage
        ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
         , control-monad-loop, directory, filepath, monad-control, monads-tf
         , process, resourcet, semigroups, split, stdenv, template-haskell
         , text, transformers, transformers-base, unix
         }:
         mkDerivation {
           pname = "shell-conduit";
           version = "4.5.2";
           sha256 = "427bc36d11b0b67f6cdfabc85a2dea95e65aed1dc16223af68832f4cff4b6c12";
           libraryHaskellDepends = [
             async base bytestring conduit conduit-extra control-monad-loop
             directory filepath monad-control monads-tf process resourcet
             semigroups split template-haskell text transformers
             transformers-base unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/shell-conduit";
           description = "Write shell scripts with Conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shelltestrunner" = callPackage
        ({ mkDerivation, base, cmdargs, Diff, directory, filemanip
         , filepath, HUnit, parsec, pretty-show, process, regex-tdfa, safe
         , stdenv, test-framework, test-framework-hunit, utf8-string
         }:
         mkDerivation {
           pname = "shelltestrunner";
           version = "1.3.5";
           sha256 = "4265eb9cc87c352655099da26f49fb7829f5163edd03a20105b7a25609d3a829";
           revision = "2";
           editedCabalFile = "1d72n8k72w2mdi3y9s74ydlwxj407mc237albx6zx42lsjx1fw34";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base cmdargs Diff directory filemanip filepath HUnit parsec
             pretty-show process regex-tdfa safe test-framework
             test-framework-hunit utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://joyful.com/shelltestrunner";
           description = "A tool for testing command-line programs";
           license = "GPL";
         }) {};
      "shelly" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, directory
         , enclosed-exceptions, exceptions, lifted-async, lifted-base
         , monad-control, mtl, process, stdenv, system-fileio
         , system-filepath, text, time, transformers, transformers-base
         , unix-compat
         }:
         mkDerivation {
           pname = "shelly";
           version = "1.6.8.1";
           sha256 = "e5a32f7552779667d1f0164d271e99c9ddcabdf1a7a1503cd6fc8ba0bb4445cd";
           revision = "1";
           editedCabalFile = "00amvlmjkhibpjip84d9s1xrn4nx78zmavha5d65dm2j25q9al25";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base bytestring containers directory enclosed-exceptions
             exceptions lifted-async lifted-base monad-control mtl process
             system-fileio system-filepath text time transformers
             transformers-base unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/Shelly.hs";
           description = "shell-like (systems) programming in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shortcut-links" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "shortcut-links";
           version = "0.4.2.0";
           sha256 = "1e6b75c5e94fddf9e2e665821ac70f5083e5d40d1fd55813e94943ce02335027";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/shortcut-links";
           description = "Link shortcuts for use in text markup";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "should-not-typecheck" = callPackage
        ({ mkDerivation, base, deepseq, HUnit, stdenv }:
         mkDerivation {
           pname = "should-not-typecheck";
           version = "2.1.0";
           sha256 = "f538ac70ce07679bc2e6c1651db82a86866664ab995665fdc78e6cb12bd8d591";
           libraryHaskellDepends = [ base deepseq HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/CRogers/should-not-typecheck";
           description = "A HUnit/hspec assertion library to verify that an expression does not typecheck";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "signal" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "signal";
           version = "0.1.0.3";
           sha256 = "1df5108befee3eaefb5a826eb83df60f192ff3f3e264d998a7e491d60f388ac7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base unix ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pmlodawski/signal";
           description = "Multiplatform signal support for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "silently" = callPackage
        ({ mkDerivation, base, deepseq, directory, stdenv }:
         mkDerivation {
           pname = "silently";
           version = "1.2.5";
           sha256 = "cef625635053a46032ca53b43d311921875a437910b6568ded17027fdca83839";
           libraryHaskellDepends = [ base deepseq directory ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/silently";
           description = "Prevent or capture writing to stdout and other handles";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, cmdargs, directory, filepath
         , http-types, mime-types, monad-control, mtl, process, setenv
         , simple-templates, stdenv, text, transformers, transformers-base
         , unordered-containers, vector, wai, wai-extra
         }:
         mkDerivation {
           pname = "simple";
           version = "0.11.1";
           sha256 = "74c3cfb9a92cbaebb47e8abbc7d918947a05340fd0d4fab1661ff8e777f5e815";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base64-bytestring blaze-builder bytestring directory
             filepath http-types mime-types monad-control mtl simple-templates
             text transformers transformers-base unordered-containers vector wai
             wai-extra
           ];
           executableHaskellDepends = [
             aeson attoparsec base bytestring cmdargs directory filepath process
             setenv simple-templates text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://simple.cx";
           description = "A minimalist web framework for the WAI server interface";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "simple-log" = callPackage
        ({ mkDerivation, async, base, containers, deepseq, directory
         , exceptions, filepath, mtl, SafeSemaphore, stdenv, text, time
         , transformers
         }:
         mkDerivation {
           pname = "simple-log";
           version = "0.4.0";
           sha256 = "548c444505f70beb02b14b5b1e0c647acaa1879edc5699ef365ec516a9b55aa5";
           revision = "1";
           editedCabalFile = "00v7d55ydmksjdf5m8lyzl2vhwl6034x9bpzmn52796dx3l99mwl";
           libraryHaskellDepends = [
             async base containers deepseq directory exceptions filepath mtl
             SafeSemaphore text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mvoidex/simple-log";
           description = "Simple log for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-postgresql-orm" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath
         , postgresql-orm, postgresql-simple, resource-pool, simple, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "simple-postgresql-orm";
           version = "0.9.0.1";
           sha256 = "3f0fe86dac2b70662340c5b36d42b11083a57e0beb16df62931d32c73d313b48";
           libraryHaskellDepends = [
             base bytestring directory filepath postgresql-orm postgresql-simple
             resource-pool simple transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://simple.cx";
           description = "Connector package for integrating postgresql-orm with the Simple web framework";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "simple-reflect" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "simple-reflect";
           version = "0.3.2";
           sha256 = "38224eb3d0d5eafc7101ad48fa92001c3e753a015d53bb12753a3836b871ecb6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://twanvl.nl/blog/haskell/simple-reflection-of-expressions";
           description = "Simple reflection of expressions containing variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-sendfile" = callPackage
        ({ mkDerivation, base, bytestring, network, stdenv, unix }:
         mkDerivation {
           pname = "simple-sendfile";
           version = "0.2.25";
           sha256 = "0ae68821cd828b29772654b5613d514a421b1b1440d82a4b610339e67a92294d";
           revision = "1";
           editedCabalFile = "1axghvn2iz0gzlc0ics4q8abl15ggwvcwcmly5cxhmc32hqv8y5c";
           libraryHaskellDepends = [ base bytestring network unix ];
           doHaddock = false;
           doCheck = false;
           description = "Cross platform library for the sendfile system call";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-session" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, byteable
         , bytestring, containers, cookie, cryptohash, http-types, simple
         , stdenv, transformers, wai, wai-extra
         }:
         mkDerivation {
           pname = "simple-session";
           version = "0.10.1.1";
           sha256 = "8a9c9cb7a80080b6440a80549919d3cee3409af6c516b3d10d1392708b48e7c1";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder byteable bytestring containers
             cookie cryptohash http-types simple transformers wai wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://simple.cx";
           description = "Cookie-based session management for the Simple web framework";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "simple-smt" = callPackage
        ({ mkDerivation, base, process, stdenv }:
         mkDerivation {
           pname = "simple-smt";
           version = "0.6.0";
           sha256 = "0cb4d409cb0cf99a9f26c405dc7626c1206d5bffec925ce202f42327b769b695";
           libraryHaskellDepends = [ base process ];
           doHaddock = false;
           doCheck = false;
           description = "A simple way to interact with an SMT solver process";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-templates" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "simple-templates";
           version = "0.8.0.1";
           sha256 = "28e10f916320bb5097d9ed323a1726d88d17a51b0ac0290a91806d97840bca8e";
           libraryHaskellDepends = [
             aeson attoparsec base scientific text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://simple.cx";
           description = "A basic template language for the Simple web framework";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "simpleirc" = callPackage
        ({ mkDerivation, base, bytestring, connection, containers, network
         , old-locale, stdenv, time
         }:
         mkDerivation {
           pname = "simpleirc";
           version = "0.3.1";
           sha256 = "8573184d344d1e0217d693a30e00a70b424e9c5b126a80178568f8f58ac290d7";
           libraryHaskellDepends = [
             base bytestring connection containers network old-locale time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dom96/SimpleIRC";
           description = "Simple IRC Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "singletons" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, syb
         , template-haskell, th-desugar
         }:
         mkDerivation {
           pname = "singletons";
           version = "2.0.1";
           sha256 = "fd149d3da367eebe81728a7a61389f18bb18b3cddd611b7aed6c0b265110ba41";
           libraryHaskellDepends = [
             base containers mtl syb template-haskell th-desugar
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/goldfirere/singletons";
           description = "A framework for generating singleton types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "siphash" = callPackage
        ({ mkDerivation, base, bytestring, cpu, stdenv }:
         mkDerivation {
           pname = "siphash";
           version = "1.0.3";
           sha256 = "cf81ce41c6ca40c4fec9add5dcebc161cb2d31f522f9ad727df23d30ac6a05f3";
           revision = "1";
           editedCabalFile = "1q2dy0ywngm9iv7k6d9gnf860m9hpf62q5qvdzmxw5s629gk4afn";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring cpu ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-siphash";
           description = "siphash: a fast short input PRF";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "skein" = callPackage
        ({ mkDerivation, base, bytestring, cereal, crypto-api, stdenv
         , tagged
         }:
         mkDerivation {
           pname = "skein";
           version = "1.0.9.4";
           sha256 = "f882ca0cc5ed336ef898fb3c89579e392900259296b2320edf968b9fc16cb8c9";
           libraryHaskellDepends = [
             base bytestring cereal crypto-api tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/meteficha/skein";
           description = "Skein, a family of cryptographic hash functions. Includes Skein-MAC as well.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "skeletons" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, containers, directory
         , filepath, stdenv, text, tinytemplate, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "skeletons";
           version = "0.4.0";
           sha256 = "3dd5045d09131434a794b9452980b4a54da4312d2e1116ac455bbc9bdf6fbcc6";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             ansi-wl-pprint base containers directory filepath text tinytemplate
             transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jb55/skeletons";
           description = "Manage project skeletons";
           license = stdenv.lib.licenses.mit;
         }) {};
      "slave-thread" = callPackage
        ({ mkDerivation, base, base-prelude, list-t, mmorph
         , partial-handler, stdenv, stm-containers, transformers
         }:
         mkDerivation {
           pname = "slave-thread";
           version = "1.0.2";
           sha256 = "e47120598dd65ebee33253911a31518021323a5ccfa52588e13c44fd5f5b4b13";
           libraryHaskellDepends = [
             base base-prelude list-t mmorph partial-handler stm-containers
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/slave-thread";
           description = "A principal solution to ghost threads and silent exceptions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "slug" = callPackage
        ({ mkDerivation, aeson, base, exceptions, path-pieces, persistent
         , stdenv, text
         }:
         mkDerivation {
           pname = "slug";
           version = "0.1.5";
           sha256 = "6bc271612759fd9a415ee382b620b0f5b1154c762eb3469a409dafd5f35282fc";
           revision = "1";
           editedCabalFile = "065jagswn01pixryhlqscsy0m3sb9l90xp13hcv3h7yafipdxfhw";
           libraryHaskellDepends = [
             aeson base exceptions path-pieces persistent text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/slug";
           description = "Type-safe slugs for Yesod ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "smallcaps" = callPackage
        ({ mkDerivation, attoparsec, base, containers, data-default
         , directory, filepath, parsec, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "smallcaps";
           version = "0.6.0.3";
           sha256 = "2ec2cac6c542f3e6574f622c963a5931a424daadd4c93078fd0ac160a6705d03";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base containers data-default directory filepath parsec
             text transformers
           ];
           executableHaskellDepends = [ base containers data-default text ];
           doHaddock = false;
           doCheck = false;
           description = "Flatten camel case text in LaTeX files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "smallcheck" = callPackage
        ({ mkDerivation, base, ghc-prim, logict, mtl, pretty, stdenv }:
         mkDerivation {
           pname = "smallcheck";
           version = "1.1.1";
           sha256 = "4d17607c1a620491e7e495a17575b73952932c761e7f9bdfa87e0102fb52f9f9";
           revision = "1";
           editedCabalFile = "1ykq0hqs1alw86p0ssa6dhsb1a8d4m6bqwibkhvzcd6c28dq975i";
           libraryHaskellDepends = [ base ghc-prim logict mtl pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/smallcheck";
           description = "A property-based testing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "smoothie" = callPackage
        ({ mkDerivation, aeson, base, linear, stdenv, text, vector }:
         mkDerivation {
           pname = "smoothie";
           version = "0.4.2.3";
           sha256 = "ae9f1fd411fc6c57ce4f3d51f23f96ef6cc8362a3df3f932e0fcfa988029e84d";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ aeson base linear text vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/smoothie";
           description = "Smooth curves via several interpolation modes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "smtLib" = callPackage
        ({ mkDerivation, base, pretty, stdenv }:
         mkDerivation {
           pname = "smtLib";
           version = "1.0.8";
           sha256 = "37016f9322742c88c89d692e62d01c419b03242bbc6d84da4dab772408ad21a9";
           libraryHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           description = "A library for working with the SMTLIB format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "smtp-mail" = callPackage
        ({ mkDerivation, array, base, base16-bytestring, base64-bytestring
         , bytestring, cryptohash, filepath, mime-mail, network, stdenv
         , text
         }:
         mkDerivation {
           pname = "smtp-mail";
           version = "0.1.4.6";
           sha256 = "86dacbef87a2519222a1165b49401a437887a249f5bfd63a99702198dad214bc";
           libraryHaskellDepends = [
             array base base16-bytestring base64-bytestring bytestring
             cryptohash filepath mime-mail network text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jhickner/smtp-mail";
           description = "Simple email sending via SMTP";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snap" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, cereal
         , clientsession, comonad, configurator, containers, directory
         , directory-tree, dlist, either, filepath, hashable, heist, lens
         , logict, MonadCatchIO-transformers, mtl, mwc-random, old-time
         , pwstore-fast, regex-posix, snap-core, snap-server, stdenv, stm
         , template-haskell, text, time, transformers, unordered-containers
         , vector, vector-algorithms, xmlhtml
         }:
         mkDerivation {
           pname = "snap";
           version = "0.14.0.7";
           sha256 = "98c853d2efa8104f89567a69ad271196e034b30ec13dd71051e6ce6119d15709";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bytestring cereal clientsession comonad
             configurator containers directory directory-tree dlist either
             filepath hashable heist lens logict MonadCatchIO-transformers mtl
             mwc-random pwstore-fast regex-posix snap-core snap-server stm text
             time transformers unordered-containers vector vector-algorithms
             xmlhtml
           ];
           executableHaskellDepends = [
             base bytestring containers directory directory-tree filepath
             hashable old-time snap-server template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://snapframework.com/";
           description = "Top-level package for the Snap Web Framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snap-core" = callPackage
        ({ mkDerivation, attoparsec, attoparsec-enumerator, base
         , blaze-builder, blaze-builder-enumerator, bytestring
         , bytestring-mmap, case-insensitive, containers, deepseq, directory
         , enumerator, filepath, hashable, HUnit, MonadCatchIO-transformers
         , mtl, old-locale, random, regex-posix, stdenv, text, time, unix
         , unix-compat, unordered-containers, vector, zlib-enum
         }:
         mkDerivation {
           pname = "snap-core";
           version = "0.9.8.0";
           sha256 = "47310fcd9c347883f5985c27c1fbcfac8c5783472a01afcc720bcc850622d2db";
           revision = "1";
           editedCabalFile = "116pmq932dmyv5kbh834y2m5bd1yp91cyyfz3mhjbpw31krcj8hw";
           libraryHaskellDepends = [
             attoparsec attoparsec-enumerator base blaze-builder
             blaze-builder-enumerator bytestring bytestring-mmap
             case-insensitive containers deepseq directory enumerator filepath
             hashable HUnit MonadCatchIO-transformers mtl old-locale random
             regex-posix text time unix unix-compat unordered-containers vector
             zlib-enum
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://snapframework.com/";
           description = "Snap: A Haskell Web Framework (core interfaces and types)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snap-server" = callPackage
        ({ mkDerivation, attoparsec, attoparsec-enumerator, base
         , blaze-builder, blaze-builder-enumerator, bytestring
         , case-insensitive, containers, enumerator, HsOpenSSL
         , MonadCatchIO-transformers, mtl, network, old-locale, snap-core
         , stdenv, text, time, unix, unix-compat
         }:
         mkDerivation {
           pname = "snap-server";
           version = "0.9.5.1";
           sha256 = "af8f2344b90f701dd1924743d6073546206384d5a904a1338bb784e18c8d3ea3";
           revision = "2";
           editedCabalFile = "13941c08pq59pgsrdzp50jnr7bc5dszh1lxgsb0l1y21lm6rj527";
           configureFlags = [ "-fopenssl" ];
           libraryHaskellDepends = [
             attoparsec attoparsec-enumerator base blaze-builder
             blaze-builder-enumerator bytestring case-insensitive containers
             enumerator HsOpenSSL MonadCatchIO-transformers mtl network
             old-locale snap-core text time unix unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://snapframework.com/";
           description = "A fast, iteratee-based, epoll-enabled web server for the Snap Framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snaplet-fay" = callPackage
        ({ mkDerivation, aeson, base, bytestring, configurator, directory
         , fay, filepath, mtl, snap, snap-core, stdenv, transformers
         }:
         mkDerivation {
           pname = "snaplet-fay";
           version = "0.3.3.13";
           sha256 = "39810748b7177b45a0fab785e48ac497d81587e48dde9dc8ad75e8d704bdda3f";
           revision = "6";
           editedCabalFile = "02z5ym0gsjqzy4ghdhi4nrzxxgq0m28h2fbg1kp4bjpa3w37b2sp";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring configurator directory fay filepath mtl snap
             snap-core transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/faylang/snaplet-fay";
           description = "Fay integration for Snap with request- and pre-compilation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snmp" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, async, base
         , binary, bytestring, cipher-aes, cipher-des, containers
         , crypto-cipher-types, cryptohash, mtl, network, network-info
         , random, securemem, stdenv, text, time
         }:
         mkDerivation {
           pname = "snmp";
           version = "0.2.1.1";
           sha256 = "0737d6fc4299a00d248d263ebdde7b3451f32da3f9a6f5afac0a125eb57384a4";
           libraryHaskellDepends = [
             asn1-encoding asn1-parse asn1-types async base binary bytestring
             cipher-aes cipher-des containers crypto-cipher-types cryptohash mtl
             network network-info random securemem text time
           ];
           doHaddock = false;
           doCheck = false;
           description = "API for write snmp client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snowflake" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "snowflake";
           version = "0.1.1.1";
           sha256 = "f156ca321ae17033fe1cbe7e676fea403136198e1c3a132924a080cd3145cddd";
           revision = "1";
           editedCabalFile = "1y5v3nsin8iyxvh0abfhs7ma75p5zjvha0lp41801pdiikacfzha";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           description = "A loose port of Twitter Snowflake to Haskell. Generates arbitrary precision, unique, time-sortable identifiers.";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "soap" = callPackage
        ({ mkDerivation, base, bytestring, conduit, configurator
         , data-default, exceptions, http-client, http-types, iconv, mtl
         , resourcet, stdenv, text, unordered-containers, xml-conduit
         , xml-conduit-writer, xml-types
         }:
         mkDerivation {
           pname = "soap";
           version = "0.2.3.2";
           sha256 = "e7e5d21f70d67f14806a44f7328350d0f06b39ad4cbbc5a514437c5ddfb95395";
           libraryHaskellDepends = [
             base bytestring conduit configurator data-default exceptions
             http-client http-types iconv mtl resourcet text
             unordered-containers xml-conduit xml-conduit-writer xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dpwiz/haskell-soap";
           description = "SOAP client tools";
           license = stdenv.lib.licenses.mit;
         }) {};
      "soap-openssl" = callPackage
        ({ mkDerivation, base, configurator, data-default, HsOpenSSL
         , http-client, http-client-openssl, soap, stdenv, text
         }:
         mkDerivation {
           pname = "soap-openssl";
           version = "0.1.0.2";
           sha256 = "2008547f4fd22063479ce1cd1c483db926f5f08a2ff6fb0c60fb2f0f7d42830f";
           revision = "1";
           editedCabalFile = "1b3aivn9jfaax00id7x4cqvpmd6lgynslchlry0qsmq1lj466cdf";
           libraryHaskellDepends = [
             base configurator data-default HsOpenSSL http-client
             http-client-openssl soap text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dpwiz/haskell-soap";
           description = "TLS-enabled SOAP transport (using openssl bindings)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "soap-tls" = callPackage
        ({ mkDerivation, base, configurator, connection, data-default
         , http-client, http-client-tls, soap, stdenv, text, tls, x509
         , x509-store, x509-validation
         }:
         mkDerivation {
           pname = "soap-tls";
           version = "0.1.1.2";
           sha256 = "e43abafb0ed390b9f5f99cc957973367d40e91c8d3ae7e22b3250a08ebe7df76";
           revision = "1";
           editedCabalFile = "0h6jgiifrphdphxfvgk95and4a86xp6afxi90v0b93cs2zyi0vsy";
           libraryHaskellDepends = [
             base configurator connection data-default http-client
             http-client-tls soap text tls x509 x509-store x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dpwiz/haskell-soap";
           description = "TLS-enabled SOAP transport (using tls package)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "socket" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "socket";
           version = "0.6.1.0";
           sha256 = "c010f5b5c705483f52a8c1d45f07f57b49e8b61c07187bc3e50d658c72c409e6";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lpeterse/haskell-socket";
           description = "An extensible socket library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "socket-io" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, engine-io
         , mtl, stdenv, stm, text, transformers, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "socket-io";
           version = "1.3.5";
           sha256 = "1604797a7095ef26b733cdff8922bf373fac551ab157c9756b031d191f90903f";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring engine-io mtl stm text
             transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/engine.io";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "socks" = callPackage
        ({ mkDerivation, base, bytestring, cereal, network, stdenv }:
         mkDerivation {
           pname = "socks";
           version = "0.5.5";
           sha256 = "2647ea93e21ad1dfd77e942c022c8707e468d25e1ff672a88be82508034fc868";
           revision = "1";
           editedCabalFile = "0nz8q0xvd8y6f42bd1w3q8d8bg1qzl8ggx0a23kb3jb60g36dmvw";
           libraryHaskellDepends = [ base bytestring cereal network ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-socks";
           description = "Socks proxy (version 5) implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sodium" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "sodium";
           version = "0.11.0.3";
           sha256 = "ea61f6725d01cf581a086738e9c18bbf567a428545d582824280aa48150b1a03";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           description = "Sodium Reactive Programming (FRP) System";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sorted-list" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "sorted-list";
           version = "0.1.6.1";
           sha256 = "07eda22facb55bd2c135a8a2ada96e5d7f0a2d86f471cdeb4eb3fd3ab37ce0b4";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/sorted-list/blob/master/README.md";
           description = "Type-enforced sorted lists and related functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sourcemap" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, process
         , stdenv, text, unordered-containers, utf8-string
         }:
         mkDerivation {
           pname = "sourcemap";
           version = "0.1.6";
           sha256 = "b9a04cccb4fe7eea8b37a2eaf2bc776eae5640038ab76fb948c5a3ea09a9ce7a";
           revision = "1";
           editedCabalFile = "1f7q44ar6qfip8fsllg43jyn7r15ifn2r0vz32cbmx0sb0d38dax";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring process text unordered-containers
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of source maps as proposed by Google and Mozilla";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "spdx" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "spdx";
           version = "0.2.1.0";
           sha256 = "a7f0d6098e201f5d7b14c13387fe699b9830c95c0192bbd8ceda446a30c980f2";
           revision = "1";
           editedCabalFile = "0qffjk0iz3fnd4099n9bqzakpma6ffw6znk99x67j3i8qdmk1fmd";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/spdx";
           description = "SPDX license expression language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "speculation" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, stm, transformers }:
         mkDerivation {
           pname = "speculation";
           version = "1.5.0.3";
           sha256 = "73bf641a87e0d28a2ba233922db936e0776c3dc24ed421f6f963f015e2eb4d3f";
           libraryHaskellDepends = [ base ghc-prim stm transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/speculation";
           description = "A framework for safe, programmable, speculative parallelism";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "speedy-slice" = callPackage
        ({ mkDerivation, base, lens, mcmc-types, mwc-probability, pipes
         , primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "speedy-slice";
           version = "0.1.4";
           sha256 = "b400e6475d77de2c4dbaf09ee0a3581fd8f34b44c7952e3108ab27960960ea92";
           libraryHaskellDepends = [
             base lens mcmc-types mwc-probability pipes primitive transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/speedy-slice";
           description = "Speedy slice sampling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sphinx" = callPackage
        ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
         , network, stdenv, text, text-icu, xml
         }:
         mkDerivation {
           pname = "sphinx";
           version = "0.6.0.2";
           sha256 = "76a977c6ce6e71c220bd5fed7acd0be500c2a1b5c8d081a29564a8e37ba7a6df";
           libraryHaskellDepends = [
             base binary bytestring data-binary-ieee754 network text text-icu
             xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gregwebs/haskell-sphinx-client";
           description = "Haskell bindings to the Sphinx full-text searching daemon";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "splice" = callPackage
        ({ mkDerivation, base, network, stdenv }:
         mkDerivation {
           pname = "splice";
           version = "0.6.1.1";
           sha256 = "81fabe6652571f0dbf6b8904bd782daaeccc9d89d40f77b15dff46b7499d4e53";
           libraryHaskellDepends = [ base network ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://corsis.github.com/splice/";
           description = "Cross-platform Socket to Socket Data Splicing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "split" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "split";
           version = "0.2.3.1";
           sha256 = "7615b60adee20c19ddafd9d74456e8fe8e4274e2c676a5e858511b664205c688";
           revision = "1";
           editedCabalFile = "1kbf588dpzivh8fzrfgs761i4pqzcnpn8di7zxnq0ir9lwhfk2b0";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Combinator library for splitting lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "spool" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, vector }:
         mkDerivation {
           pname = "spool";
           version = "0.1";
           sha256 = "868c72b98aaf9f041f424d949d8cef05c9b859984e4e35d57026fad9d9f873eb";
           libraryHaskellDepends = [ base bytestring vector ];
           doHaddock = false;
           doCheck = false;
           description = "Convert between ByteString and Vector.Storable without copying";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "spoon" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "spoon";
           version = "0.3.1";
           sha256 = "b9b350b6730e34c246bbf7e228a86b3d4925b52c95542f7676d719ef2a9881d4";
           revision = "1";
           editedCabalFile = "09s5jjcsg4g4qxchq9g2l4i9d5zh3rixpkbiysqcgl69kj8mwv74";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "Catch errors thrown from pure computations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sql-words" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "sql-words";
           version = "0.1.4.1";
           sha256 = "f53ea8f9621281ad85607a55a56cebb8bdb485f02000aa2ab3c4f867b2ff3dae";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Simple idea SQL keywords data constructor into OverloadedString";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sqlite-simple" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, blaze-textual
         , bytestring, containers, direct-sqlite, stdenv, text, time
         , transformers
         }:
         mkDerivation {
           pname = "sqlite-simple";
           version = "0.4.12.0";
           sha256 = "eb5732bea0fff46a1761c5aa635533c7200c748624825440276774ce4bf56093";
           revision = "1";
           editedCabalFile = "0mzp3hz586z4x02ggk2a1v6dbs2qkm4cid78waz5hn8n7jlbcg59";
           libraryHaskellDepends = [
             attoparsec base blaze-builder blaze-textual bytestring containers
             direct-sqlite text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nurpax/sqlite-simple";
           description = "Mid-Level SQLite client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "srcloc" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "srcloc";
           version = "0.5.1.0";
           sha256 = "e61df6ce79c8ac42a7a9a15ab3553ef5448174c0bfaee7192ff4c3d6a5695aff";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.drexel.edu/~mainland/";
           description = "Data types for managing source code locations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stack" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, async, attoparsec, base
         , base-compat, base16-bytestring, base64-bytestring, binary
         , binary-tagged, blaze-builder, byteable, bytestring, Cabal
         , conduit, conduit-extra, containers, cryptohash
         , cryptohash-conduit, deepseq, directory, edit-distance, either
         , enclosed-exceptions, errors, exceptions, extra, fast-logger
         , filelock, filepath, fsnotify, generic-deriving, gitrev, hashable
         , hastache, hit, hpack, hpc, http-client, http-client-tls
         , http-conduit, http-types, lifted-base, microlens, monad-control
         , monad-logger, monad-unlift, mtl, open-browser
         , optparse-applicative, optparse-simple, path, path-io, persistent
         , persistent-sqlite, persistent-template, pretty, process
         , project-template, regex-applicative-text, resourcet, retry, safe
         , semigroups, split, stdenv, stm, streaming-commons, tar
         , template-haskell, temporary, text, text-binary, time, tls
         , transformers, transformers-base, unix, unix-compat
         , unordered-containers, vector, vector-binary-instances, yaml
         , zip-archive, zlib
         }:
         mkDerivation {
           pname = "stack";
           version = "1.1.2";
           sha256 = "fc836b24fdeac54244fc79b6775d5edee146b7e552ad8e69596c7cc2f2b10625";
           revision = "8";
           editedCabalFile = "04isgkd0dw1ypzwwi17hd68wffz0r0yf7n6ccga1qj4wqxlwvdqf";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson ansi-terminal async attoparsec base base-compat
             base16-bytestring base64-bytestring binary binary-tagged
             blaze-builder byteable bytestring Cabal conduit conduit-extra
             containers cryptohash cryptohash-conduit deepseq directory
             edit-distance either enclosed-exceptions errors exceptions extra
             fast-logger filelock filepath fsnotify generic-deriving hashable
             hastache hit hpack hpc http-client http-client-tls http-conduit
             http-types lifted-base microlens monad-control monad-logger
             monad-unlift mtl open-browser optparse-applicative path path-io
             persistent persistent-sqlite persistent-template pretty process
             project-template regex-applicative-text resourcet retry safe
             semigroups split stm streaming-commons tar template-haskell
             temporary text text-binary time tls transformers transformers-base
             unix unix-compat unordered-containers vector
             vector-binary-instances yaml zip-archive zlib
           ];
           executableHaskellDepends = [
             base bytestring Cabal containers directory filelock filepath gitrev
             http-client lifted-base microlens monad-control monad-logger mtl
             optparse-applicative optparse-simple path path-io text transformers
           ];
           doHaddock = false;
           doCheck = false;
           preCheck = "export HOME=$TMPDIR";
           postInstall = ''
             exe=$out/bin/stack
             mkdir -p $out/share/bash-completion/completions
             $exe --bash-completion-script $exe >$out/share/bash-completion/completions/stack
           '';
           homepage = "http://haskellstack.org";
           description = "The Haskell Tool Stack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stack-run-auto" = callPackage
        ({ mkDerivation, async, base, directory, extract-dependencies
         , file-modules, filepath, lens, lens-aeson, MissingH, process
         , stdenv, stm-containers, text, time, wreq
         }:
         mkDerivation {
           pname = "stack-run-auto";
           version = "0.1.1.4";
           sha256 = "5eb96ea94ec54a56ae26e09cc7988bb006edd4109eca9c57ed51bcc1d605f543";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base directory extract-dependencies file-modules filepath
             lens lens-aeson MissingH process stm-containers text time wreq
           ];
           executableHaskellDepends = [
             async base directory extract-dependencies file-modules filepath
             lens lens-aeson MissingH process stm-containers text time wreq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yamadapc/stack-run-auto#readme";
           description = "Initial project template from stack";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage" = callPackage
        ({ mkDerivation, base, stackage-build-plan, stackage-cabal
         , stackage-cli, stackage-install, stackage-sandbox, stackage-setup
         , stackage-update, stackage-upload, stdenv
         }:
         mkDerivation {
           pname = "stackage";
           version = "0.7.3.2";
           sha256 = "ea6b8fc4ec0bff431f44e75238dff599ac0a082c80ac14f049dfbbd5fdf0f95a";
           libraryHaskellDepends = [
             base stackage-build-plan stackage-cabal stackage-cli
             stackage-install stackage-sandbox stackage-setup stackage-update
             stackage-upload
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.stackage.org/";
           description = "Dummy package forcing installation of other Stackage packages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-build-plan" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, containers
         , directory, exceptions, filepath, http-client, http-client-tls
         , mtl, optparse-applicative, stackage-cli, stackage-types, stdenv
         , text, time, yaml
         }:
         mkDerivation {
           pname = "stackage-build-plan";
           version = "0.1.1.0";
           sha256 = "cf73f80eab84dc34dead04a5750e7f76eb030b4666b88641796b65bb2b9b98ea";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring Cabal containers directory exceptions
             filepath http-client http-client-tls mtl stackage-types text time
             yaml
           ];
           executableHaskellDepends = [
             aeson base optparse-applicative stackage-cli text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/stackage-build-plan";
           description = "Calculate and print (in different formats) Stackage build plans";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-cabal" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, http-client
         , http-client-tls, http-types, optparse-applicative, parsec
         , process, stackage-cli, stdenv, system-fileio, text
         }:
         mkDerivation {
           pname = "stackage-cabal";
           version = "0.1.1";
           sha256 = "f2f32812ac46c29fd3ad8e1112a1190930c3cade5d081548c6351452f88f271d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [
             base bytestring exceptions http-client http-client-tls http-types
             optparse-applicative parsec process stackage-cli system-fileio text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.stackage.org/package/stackage-cabal";
           description = "A CLI executable for cabal-based stackage commands";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-cli" = callPackage
        ({ mkDerivation, base, conduit, directory, either, exceptions
         , filepath, hashable, optparse-applicative, optparse-simple
         , process, split, stdenv, text, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "stackage-cli";
           version = "0.1.0.2";
           sha256 = "16213bd51f37c4c60f1a8ca91720cf7d0199001ae0aa50acc69facf37ec05a81";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base conduit directory either exceptions filepath hashable
             optparse-applicative optparse-simple process split text
             transformers unordered-containers
           ];
           executableHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.stackage.org/package/stackage-cli";
           description = "A CLI library for stackage commands";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-curator" = callPackage
        ({ mkDerivation, aeson, amazonka, amazonka-core, amazonka-s3, async
         , base, base16-bytestring, binary, binary-orphans, binary-tagged
         , blaze-html, byteable, bytestring, Cabal, classy-prelude-conduit
         , conduit, conduit-extra, containers, cryptohash
         , cryptohash-conduit, data-default-class, directory, exceptions
         , filepath, hashable, html-conduit, http-client, http-client-tls
         , http-conduit, lucid, mime-types, monad-unlift, monad-unlift-ref
         , mono-traversable, mtl, old-locale, optparse-applicative
         , optparse-simple, process, resourcet, safe, semigroups
         , stackage-cli, stackage-install, stdenv, stm, streaming-commons
         , syb, system-fileio, system-filepath, tar, temporary, text, time
         , transformers, unix-compat, unordered-containers, utf8-string
         , vector, xml-conduit, xml-types, yaml, zlib
         }:
         mkDerivation {
           pname = "stackage-curator";
           version = "0.14.0";
           sha256 = "13ad2b94821402f533d0e5b4ac38ea1107fa015ab1a5d997f03f0ae05d38fa67";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson amazonka amazonka-core amazonka-s3 async base
             base16-bytestring binary binary-orphans binary-tagged blaze-html
             byteable bytestring Cabal classy-prelude-conduit conduit
             conduit-extra containers cryptohash cryptohash-conduit
             data-default-class directory exceptions filepath hashable
             html-conduit http-client http-client-tls http-conduit lucid
             mime-types monad-unlift monad-unlift-ref mono-traversable mtl
             old-locale process resourcet safe semigroups stackage-install stm
             streaming-commons syb system-fileio system-filepath tar temporary
             text time transformers unix-compat unordered-containers utf8-string
             vector xml-conduit xml-types yaml zlib
           ];
           executableHaskellDepends = [
             aeson base http-client http-client-tls optparse-applicative
             optparse-simple stackage-cli system-filepath text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/stackage";
           description = "Tools for curating Stackage bundles";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-install" = callPackage
        ({ mkDerivation, aeson, async, base, bytestring, containers
         , cryptohash, directory, filepath, http-client, http-client-tls
         , http-types, process, stdenv, stm, tar, text
         }:
         mkDerivation {
           pname = "stackage-install";
           version = "0.1.2";
           sha256 = "d46a0dfb3b82a154509fc396d966df642302341bfd758204d72d23e590874843";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson async base bytestring containers cryptohash directory
             filepath http-client http-client-tls http-types process stm tar
             text
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/stackage-install";
           description = "Secure download of packages for cabal-install";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-metadata" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, bytestring, Cabal
         , conduit, containers, cryptohash, directory, filepath, http-client
         , http-client-tls, pretty, resourcet, stackage-install
         , stackage-update, stdenv, tar, text, transformers, yaml, zlib
         }:
         mkDerivation {
           pname = "stackage-metadata";
           version = "0.3.0.0";
           sha256 = "5d6b66f326fc1cc7cf833145eb6c4f905725370c8031a5df019101e5ed331a22";
           revision = "1";
           editedCabalFile = "1kfdzvvfxlc0y23mdwklm3szb91zjwpzibb68jgjf1hkmv5kfzk3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring Cabal conduit containers directory filepath
             pretty resourcet tar text transformers zlib
           ];
           executableHaskellDepends = [
             base base16-bytestring bytestring Cabal conduit containers
             cryptohash directory filepath http-client http-client-tls resourcet
             stackage-install stackage-update tar text transformers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/commercialhaskell/all-cabal-metadata-tool";
           description = "DEPRECATED Grab current metadata for all packages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-sandbox" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, conduit-combinators
         , conduit-extra, directory, filepath, optparse-applicative, process
         , stackage-cli, stdenv, text
         }:
         mkDerivation {
           pname = "stackage-sandbox";
           version = "0.1.6";
           sha256 = "ade45f67b92175869594e64e68f3076feba3b50e863b8b588cff69310def1bdb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [
             attoparsec base bytestring conduit-combinators conduit-extra
             directory filepath optparse-applicative process stackage-cli text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.stackage.org/package/stackage-sandbox";
           description = "Work with shared stackage sandboxes";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-setup" = callPackage
        ({ mkDerivation, aeson, base, bytestring, classy-prelude-conduit
         , cryptohash, cryptohash-conduit, directory, filepath
         , http-client-tls, http-conduit, http-types, optparse-applicative
         , process, stackage-cli, stdenv, text, unordered-containers, yaml
         }:
         mkDerivation {
           pname = "stackage-setup";
           version = "0.0.2";
           sha256 = "3bae41b72eb7992affedea2937ffb6c66e8f01d2c42ef5a4fc826c21d0d20184";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [
             aeson base bytestring classy-prelude-conduit cryptohash
             cryptohash-conduit directory filepath http-client-tls http-conduit
             http-types optparse-applicative process stackage-cli text
             unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.stackage.org/package/stackage-setup";
           description = "An executable for downloading a Haskell setup";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-types" = callPackage
        ({ mkDerivation, aeson, base, Cabal, containers, exceptions
         , hashable, safe, semigroups, stdenv, text, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "stackage-types";
           version = "1.2.0";
           sha256 = "c00255049aa5aac04bb67372cea26feadc4f38442cedbe7035d611baa2edf4cb";
           libraryHaskellDepends = [
             aeson base Cabal containers exceptions hashable safe semigroups
             text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/stackage-types";
           description = "Shared data types between various Stackage packages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-update" = callPackage
        ({ mkDerivation, base, directory, filepath, process, stdenv }:
         mkDerivation {
           pname = "stackage-update";
           version = "0.1.2";
           sha256 = "72c3b1e60528afe9fd816b8b1dfcdab9a940aa32816f4593b06359a6b70383d3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory filepath process ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/stackage-update";
           description = "Update your package index incrementally (requires git)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-upload" = callPackage
        ({ mkDerivation, aeson, base, bytestring, directory, filepath
         , http-client, http-client-tls, http-types, optparse-applicative
         , process, stackage-cli, stdenv, temporary, text
         }:
         mkDerivation {
           pname = "stackage-upload";
           version = "0.1.0.6";
           sha256 = "6f9f11e3ccacdb4590ac108420107c329c891663d270edb0a46f0f4b3613949e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring directory filepath http-client
             http-client-tls http-types process temporary text
           ];
           executableHaskellDepends = [
             base optparse-applicative stackage-cli
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/stackage-upload";
           description = "A more secure version of cabal upload which uses HTTPS";
           license = stdenv.lib.licenses.mit;
         }) {};
      "state-plus" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "state-plus";
           version = "0.1.2";
           sha256 = "c6ed155137d40262bf8aa38155bd93ecdc4bdbcb4ac83f5b980eeb8545ee377d";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           description = "MonadPlus for StateT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stateWriter" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "stateWriter";
           version = "0.2.8";
           sha256 = "dbed209ec350b751b2c56388ab751149874f6b76c0d7a6725de1583682ccc6e2";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A faster variant of the RWS monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stateref" = callPackage
        ({ mkDerivation, base, mtl, stdenv, stm }:
         mkDerivation {
           pname = "stateref";
           version = "0.3";
           sha256 = "7dd390aab346ca877cde1217d5b62145cdfa6f9390e3b7a53c9296229ee1b741";
           libraryHaskellDepends = [ base mtl stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~mokus/stateref/";
           description = "Abstraction for things that work like IORef";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "statestack" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "statestack";
           version = "0.2.0.5";
           sha256 = "f4eadcf9b08c14cb084436f81e16edf78d6eeda77a3f93e38ba5d7e263ea5f66";
           revision = "2";
           editedCabalFile = "0c10cv107ls0wm7gs3gvknd8a1gqvrkk97frn8lp1ch697mz44rp";
           libraryHaskellDepends = [
             base mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple State-like monad transformer with saveable and restorable state";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "static-canvas" = callPackage
        ({ mkDerivation, base, double-conversion, free, mtl, stdenv, text
         }:
         mkDerivation {
           pname = "static-canvas";
           version = "0.2.0.3";
           sha256 = "370824df08cedef2aacbbc8b855fd5cd3c80cfcc07ae2931e0f25397a61dd749";
           revision = "1";
           editedCabalFile = "1z3mi5z590xxmipd5fxylcmf39rrwvmwva2rkk6km1nxb5kfasl7";
           libraryHaskellDepends = [ base double-conversion free mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jeffreyrosenbluth/static-canvas";
           description = "DSL to generate HTML5 Canvas javascript";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "statistics" = callPackage
        ({ mkDerivation, aeson, base, binary, deepseq, erf, math-functions
         , monad-par, mwc-random, primitive, stdenv, vector
         , vector-algorithms, vector-binary-instances
         }:
         mkDerivation {
           pname = "statistics";
           version = "0.13.3.0";
           sha256 = "6e7fe0f10086725c696fdd855caf4b6fb58ca5100bd0c9995f575f5b071381ed";
           libraryHaskellDepends = [
             aeson base binary deepseq erf math-functions monad-par mwc-random
             primitive vector vector-algorithms vector-binary-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/statistics";
           description = "A library of statistical types, data, and functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "statistics-linreg" = callPackage
        ({ mkDerivation, base, MonadRandom, random, random-shuffle, safe
         , statistics, stdenv, vector
         }:
         mkDerivation {
           pname = "statistics-linreg";
           version = "0.3";
           sha256 = "6273c2166b8072814ede516c7c9f1e13a158b5013938fdf83a3ea2355aee8909";
           libraryHaskellDepends = [
             base MonadRandom random random-shuffle safe statistics vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/alpmestan/statistics-linreg";
           description = "Linear regression between two samples, based on the 'statistics' package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stm" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "stm";
           version = "2.4.4.1";
           sha256 = "8f999095ed8d50d2056fc6e185035ee8166c50751e1af8de02ac38d382bf3384";
           revision = "1";
           editedCabalFile = "0kzw4rw9fgmc4qyxmm1lwifdyrx5r1356150xm14vy4mp86diks9";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           description = "Software Transactional Memory";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-chans" = callPackage
        ({ mkDerivation, base, Cabal, stdenv, stm }:
         mkDerivation {
           pname = "stm-chans";
           version = "3.0.0.4";
           sha256 = "2344fc5bfa33d565bad7b009fc0e2c5a7a595060ba149c661f44419fc0d54738";
           revision = "1";
           editedCabalFile = "0v9axxcfszqdmf3dhjxy34ybh22x3r5c48mdnbvjh5i5lp7g7vp2";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Additional types of channels for STM";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-conduit" = callPackage
        ({ mkDerivation, async, base, cereal, cereal-conduit, conduit
         , conduit-combinators, conduit-extra, directory, ghc-prim
         , lifted-async, lifted-base, monad-control, monad-loops, resourcet
         , stdenv, stm, stm-chans, transformers, void
         }:
         mkDerivation {
           pname = "stm-conduit";
           version = "2.8.0";
           sha256 = "0bad21541ac28765802468c71b61f464daf1fca4b2adf1c66bab006d0a7d3128";
           libraryHaskellDepends = [
             async base cereal cereal-conduit conduit conduit-combinators
             conduit-extra directory ghc-prim lifted-async lifted-base
             monad-control monad-loops resourcet stm stm-chans transformers void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cgaebel/stm-conduit";
           description = "Introduces conduits to channels, and promotes using conduits concurrently";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-containers" = callPackage
        ({ mkDerivation, base, base-prelude, focus, hashable, list-t
         , primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "stm-containers";
           version = "0.2.15";
           sha256 = "452483bcbe131475c216a463b67c3c43011a3e26493e0365379ce2ba6bd6b2e0";
           libraryHaskellDepends = [
             base base-prelude focus hashable list-t primitive transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/stm-containers";
           description = "Containers for STM";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stm-delay" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "stm-delay";
           version = "0.1.1.1";
           sha256 = "b132581aac47e6cba6a1691a485e1700fbb047c02b7e1e43ae9bbd8476108a32";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joeyadams/haskell-stm-delay";
           description = "Updatable one-shot timer polled with STM";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-stats" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm, template-haskell
         , time
         }:
         mkDerivation {
           pname = "stm-stats";
           version = "0.2.0.0";
           sha256 = "0a4f39b1e9fffe50d6dfaa9c0b04977e510fae8b6bd3d7abb7076e8aa8f01345";
           libraryHaskellDepends = [
             base containers stm template-haskell time
           ];
           doHaddock = false;
           doCheck = false;
           description = "retry statistics for STM transactions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stopwatch" = callPackage
        ({ mkDerivation, base, clock, stdenv, transformers }:
         mkDerivation {
           pname = "stopwatch";
           version = "0.1.0.3";
           sha256 = "0ddeaefab7989bd5fc5c5e45c769806630da7be0e699f36e4ada6e6d91c5026e";
           libraryHaskellDepends = [ base clock transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/stopwatch";
           description = "A simple stopwatch utility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "storable-complex" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "storable-complex";
           version = "0.2.2";
           sha256 = "ab076f15c47a2a324a2119c8feee0a78e1d2af488d0d24b7113b4bb7eee47c06";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cartazio/storable-complex";
           description = "Storable instance for Complex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "storable-endian" = callPackage
        ({ mkDerivation, base, byteorder, stdenv }:
         mkDerivation {
           pname = "storable-endian";
           version = "0.2.5";
           sha256 = "e206eecf9480e937347ad0663f6c588da490606a1e55b871c68da8c7c1b44112";
           libraryHaskellDepends = [ base byteorder ];
           doHaddock = false;
           doCheck = false;
           description = "Storable instances with endianness";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stratosphere" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, lens
         , stdenv, template-haskell, text, unordered-containers
         }:
         mkDerivation {
           pname = "stratosphere";
           version = "0.1.2.1";
           sha256 = "70948036bc62ee5d77d01efa674fcfd762e2bf95d04a94e55dde1339940d471c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring lens template-haskell text
             unordered-containers
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base bytestring lens template-haskell text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/frontrowed/stratosphere#readme";
           description = "EDSL for AWS CloudFormation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "streaming" = callPackage
        ({ mkDerivation, base, exceptions, ghc-prim, mmorph, monad-control
         , mtl, resourcet, stdenv, time, transformers, transformers-base
         }:
         mkDerivation {
           pname = "streaming";
           version = "0.1.4.3";
           sha256 = "c9ea0aa19a91717f0f988d0c2503e68a523b1d104facec841d0182425ec920c9";
           revision = "1";
           editedCabalFile = "12i2dw38zv2gsfpz2k4i0ffcjkbqvmag4bv9hvmr95r5189ysz2r";
           libraryHaskellDepends = [
             base exceptions ghc-prim mmorph monad-control mtl resourcet time
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michaelt/streaming";
           description = "an elementary streaming prelude and general stream type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streaming-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, exceptions, mmorph, mtl
         , resourcet, stdenv, streaming, transformers, transformers-base
         }:
         mkDerivation {
           pname = "streaming-bytestring";
           version = "0.1.4.4";
           sha256 = "0a8b6623cff9fa1310c835a3c3f374cbf1c14ca385dd401db9c13b503e347662";
           libraryHaskellDepends = [
             base bytestring deepseq exceptions mmorph mtl resourcet streaming
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michaelt/streaming-bytestring";
           description = "effectful byte steams, or: bytestring io done right";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streaming-commons" = callPackage
        ({ mkDerivation, array, async, base, blaze-builder, bytestring
         , directory, network, process, random, stdenv, stm, text
         , transformers, unix, zlib
         }:
         mkDerivation {
           pname = "streaming-commons";
           version = "0.1.16";
           sha256 = "17fdf509823e72996265de9260eaf58e33350e746dea058a36392c843ea8106e";
           libraryHaskellDepends = [
             array async base blaze-builder bytestring directory network process
             random stm text transformers unix zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/streaming-commons";
           description = "Common lower-level functions needed by various streaming data libraries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "streamproc" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "streamproc";
           version = "1.6.2";
           sha256 = "e76effaaff83e6a066df949415db109b405bda0aaeb95f0710906c65892584f2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/peti/streamproc";
           description = "Stream Processer Arrow";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streams" = callPackage
        ({ mkDerivation, adjunctions, base, comonad, distributive
         , semigroupoids, semigroups, stdenv
         }:
         mkDerivation {
           pname = "streams";
           version = "3.2.1";
           sha256 = "44edcc8bda54c0c356e606896756af5e61dab0070c021df31dfbbc56cad2d9f7";
           libraryHaskellDepends = [
             adjunctions base comonad distributive semigroupoids semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/streams/issues";
           description = "Various Haskell 2010 stream comonads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "strict" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "strict";
           version = "0.3.2";
           sha256 = "2cd35a67938db635a87617d9576d5df0158b581e8e5694f07487c0f4b1549221";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cse.unsw.edu.au/~rl/code/strict.html";
           description = "Strict data types and String IO";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "strict-base-types" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, binary, deepseq, ghc-prim
         , hashable, lens, QuickCheck, stdenv, strict
         }:
         mkDerivation {
           pname = "strict-base-types";
           version = "0.5.0";
           sha256 = "febcadf3d7f97f9c8c161a98e2537ba83a8adc4e4f6015e65430d7367104a1cb";
           libraryHaskellDepends = [
             aeson base bifunctors binary deepseq ghc-prim hashable lens
             QuickCheck strict
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/meiersi/strict-base-types";
           description = "Strict variants of the types provided in base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-class" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, tagged, text }:
         mkDerivation {
           pname = "string-class";
           version = "0.1.6.5";
           sha256 = "821dc13ee0521e0bee335e689c88596efb193130835a6edc45f94dcc9f72237a";
           libraryHaskellDepends = [ base bytestring tagged text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bairyn/string-class";
           description = "String class library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-combinators" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "string-combinators";
           version = "0.6.0.5";
           sha256 = "94914abfbd7d17051edab4bc9927c191fd05a652d9ef3cf259b5d0e0ca177e1e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/string-combinators";
           description = "Polymorphic functions to build and combine stringlike values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-conv" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "string-conv";
           version = "0.1.2";
           sha256 = "f259a03e6f296af19a71c07ab9a98a38661dfe40679f360f8e371334ea226039";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Soostone/string-conv";
           description = "Standardized conversion between string types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-conversions" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, utf8-string }:
         mkDerivation {
           pname = "string-conversions";
           version = "0.4";
           sha256 = "1a64a6db3c7fe37c798aaa433ee4c951c0727fd46a9c096c002b6bf0adac24ae";
           libraryHaskellDepends = [ base bytestring text utf8-string ];
           doHaddock = false;
           doCheck = false;
           description = "Simplifies dealing with different types for strings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-qq" = callPackage
        ({ mkDerivation, base, Cabal, process, stdenv, template-haskell }:
         mkDerivation {
           pname = "string-qq";
           version = "0.0.2";
           sha256 = "9757cad387856a313729caffe0639215a10be7d72b09c44bcab9e55ee2a8c218";
           revision = "1";
           editedCabalFile = "1flc6mr1nnv8mx69cy1ilwk5gxsidcns82vjdg8dcs8z5axg95kp";
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal process ];
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "QuasiQuoter for non-interpolated strings, texts and bytestrings";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "stringable" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, system-filepath, text }:
         mkDerivation {
           pname = "stringable";
           version = "0.1.3";
           sha256 = "e7af961e1eb52c89330aeb5434d7cfdebd3b712dd39812f68dcbd685e3da5a82";
           libraryHaskellDepends = [ base bytestring system-filepath text ];
           doHaddock = false;
           doCheck = false;
           description = "A Stringable type class, in the spirit of Foldable and Traversable";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stringbuilder" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "stringbuilder";
           version = "0.5.0";
           sha256 = "8966882622fc06fd4e588da626a558b54daa313f2328c188d9305b0c6f2fe9aa";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A writer monad for multi-line string literals";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stringsearch" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, stdenv }:
         mkDerivation {
           pname = "stringsearch";
           version = "0.3.6.6";
           sha256 = "295f1971920bc52263d8275d7054ad223a7e1aefe75533f9887735c9644ffe4a";
           libraryHaskellDepends = [ array base bytestring containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dafis/stringsearch";
           description = "Fast searching, splitting and replacing of ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stripe-core" = callPackage
        ({ mkDerivation, aeson, base, bytestring, mtl, stdenv, text, time
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "stripe-core";
           version = "2.0.3";
           sha256 = "1c3d319ef29bb3e2863838e553a44a23449dafc8f244c62a7f3ffc7b8305e3a8";
           libraryHaskellDepends = [
             aeson base bytestring mtl text time transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmjio/stripe-haskell";
           description = "Stripe API for Haskell - Pure Core";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stripe-haskell" = callPackage
        ({ mkDerivation, base, stdenv, stripe-core, stripe-http-streams }:
         mkDerivation {
           pname = "stripe-haskell";
           version = "2.0.3";
           sha256 = "225b6b5671181a8349b952bf98a30c40bf0ee24ab53cc720f02d7979ad7cd5bb";
           libraryHaskellDepends = [ base stripe-core stripe-http-streams ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmjio/stripe";
           description = "Stripe API for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stripe-http-streams" = callPackage
        ({ mkDerivation, aeson, base, bytestring, HsOpenSSL, http-streams
         , io-streams, stdenv, stripe-core, text
         }:
         mkDerivation {
           pname = "stripe-http-streams";
           version = "2.0.3";
           sha256 = "c6423451c388e3006012b01932b3fdd23d344a5d8dd73755ef00cb74b7c736f6";
           libraryHaskellDepends = [
             aeson base bytestring HsOpenSSL http-streams io-streams stripe-core
             text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Stripe API for Haskell - http-streams backend";
           license = stdenv.lib.licenses.mit;
         }) {};
      "strive" = callPackage
        ({ mkDerivation, aeson, base, bytestring, data-default, gpolyline
         , http-conduit, http-types, stdenv, template-haskell, text, time
         , transformers
         }:
         mkDerivation {
           pname = "strive";
           version = "2.2.2";
           sha256 = "cf1b8b89a234798947931c874e9a48598737fb41d8971e5c1eed87d9fb75beb0";
           libraryHaskellDepends = [
             aeson base bytestring data-default gpolyline http-conduit
             http-types template-haskell text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/strive#readme";
           description = "A client for the Strava V3 API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stylish-haskell" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, directory
         , filepath, haskell-src-exts, mtl, optparse-applicative, stdenv
         , strict, syb, yaml
         }:
         mkDerivation {
           pname = "stylish-haskell";
           version = "0.5.17.0";
           sha256 = "374ad1e8206ae9b41b94b95fef55ad8d439c006fa650e6315ef04eca38e53b78";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring containers directory filepath
             haskell-src-exts mtl syb yaml
           ];
           executableHaskellDepends = [
             aeson base bytestring containers directory filepath
             haskell-src-exts mtl optparse-applicative strict syb yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jaspervdj/stylish-haskell";
           description = "Haskell code prettifier";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "success" = callPackage
        ({ mkDerivation, base, monad-control, mtl, stdenv, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "success";
           version = "0.2.6";
           sha256 = "e995e77e8ae13bc4d543ea771f6a4d17853dea1ae46ef294131fc8c582f2dab6";
           libraryHaskellDepends = [
             base monad-control mtl transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/success";
           description = "A version of Either specialised for encoding of success or failure";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sundown" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "sundown";
           version = "0.6";
           sha256 = "cb9b7e98138311375148ffe0fa4c4b04eb7a9f8ec2ae13a674d465e5d71db027";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bitonic/sundown";
           description = "Bindings to the sundown markdown library";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "svg-builder" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, hashable, stdenv
         , text, unordered-containers
         }:
         mkDerivation {
           pname = "svg-builder";
           version = "0.1.0.2";
           sha256 = "81490cf0c843d6d7795ba32ac6cb05acf4a92431fe7702aa634ec52d60bfee54";
           revision = "1";
           editedCabalFile = "1h3bzkimiydj5j2rh7cyp5bhphvy6hglpkidhlfwy520sqsw3zvx";
           libraryHaskellDepends = [
             base blaze-builder bytestring hashable text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jeffreyrosenbluth/svg-builder.git";
           description = "DSL for building SVG";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "svg-tree" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers
         , JuicyPixels, lens, linear, mtl, scientific, stdenv, text
         , transformers, vector, xml
         }:
         mkDerivation {
           pname = "svg-tree";
           version = "0.5.1.2";
           sha256 = "0c285cf21203555c7d7179e6c3924c0ba1b5e03ed42dacf596ff891317893da0";
           libraryHaskellDepends = [
             attoparsec base bytestring containers JuicyPixels lens linear mtl
             scientific text transformers vector xml
           ];
           doHaddock = false;
           doCheck = false;
           description = "SVG file loader and serializer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "swagger" = callPackage
        ({ mkDerivation, aeson, base, bytestring, stdenv, text, time
         , transformers
         }:
         mkDerivation {
           pname = "swagger";
           version = "0.2.2";
           sha256 = "19ffcf443fd03a87258fb4b3225166315d0fd835a7539ea70d7992619329ecc2";
           libraryHaskellDepends = [
             aeson base bytestring text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of swagger data model";
           license = "unknown";
         }) {};
      "swagger2" = callPackage
        ({ mkDerivation, aeson, base, base-compat, containers, hashable
         , http-media, lens, mtl, network, scientific, stdenv
         , template-haskell, text, time, transformers, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "swagger2";
           version = "2.0.2";
           sha256 = "a9d2d65793e2c6767e06effd8e947f0072b2d6dd414e85012b73a2574167649b";
           revision = "2";
           editedCabalFile = "1c96yz6hc4k5vwzjjisappbybrfbcq5p8zb8y0nvxb71knda7mwi";
           libraryHaskellDepends = [
             aeson base base-compat containers hashable http-media lens mtl
             network scientific template-haskell text time transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GetShopTV/swagger2";
           description = "Swagger 2.0 data model";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "syb" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "syb";
           version = "0.6";
           sha256 = "a38d1f7e6a40e2c990fec85215c45063a508bf73df98a4483ec78c5025b66cdc";
           revision = "1";
           editedCabalFile = "158ngdnlq9n1mil7cq2bzy4zkgx73zzms9q56wp6ll93m5mc4nlx";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB";
           description = "Scrap Your Boilerplate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "syb-with-class" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "syb-with-class";
           version = "0.6.1.7";
           sha256 = "5c521870d8c533dabb0483015592897e1bc2356dacd19ad7f279e41b69e66abb";
           libraryHaskellDepends = [
             array base bytestring containers template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Scrap Your Boilerplate With Class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "symbol" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "symbol";
           version = "0.2.4";
           sha256 = "d074a7741f6ce0f2a604e4467c1c46e1acc2b707db107b3458395e646a9b8831";
           revision = "1";
           editedCabalFile = "01ab7600ja88wfvg9x8zmxksw44j9klmm71y9zmig7qxs1qslb25";
           libraryHaskellDepends = [ base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.drexel.edu/~mainland/";
           description = "A 'Symbol' type for fast symbol comparison";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sync-mht" = callPackage
        ({ mkDerivation, array, base, base16-bytestring, byteable, bytes
         , bytestring, cereal, containers, cryptohash, directory, exceptions
         , filepath, HUnit, io-streams, mtl, process, random, regex-compat
         , stdenv, temporary, text, time, transformers, unix, zlib
         }:
         mkDerivation {
           pname = "sync-mht";
           version = "0.3.8.5";
           sha256 = "146c2e789845bbc58c4baf9f4c6e4e9b0908b5518311b321543dd481f90efdaa";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base base16-bytestring byteable bytes bytestring cereal
             containers cryptohash directory exceptions filepath HUnit
             io-streams mtl process random regex-compat temporary text time
             transformers unix zlib
           ];
           executableHaskellDepends = [
             array base base16-bytestring byteable bytes bytestring cereal
             containers cryptohash directory exceptions filepath HUnit
             io-streams mtl process random regex-compat temporary text time
             transformers unix zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ekarayel/sync-mht";
           description = "Fast incremental file transfer using Merkle-Hash-Trees";
           license = stdenv.lib.licenses.mit;
         }) {};
      "system-argv0" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, system-filepath, text }:
         mkDerivation {
           pname = "system-argv0";
           version = "0.1.1";
           sha256 = "6d51da9d2157be14a83f8dca3e9d4196d420e667cd685effb8d7b39185cf4ec6";
           libraryHaskellDepends = [ base bytestring system-filepath text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-filesystem/";
           description = "Get argv[0] as a FilePath";
           license = stdenv.lib.licenses.mit;
         }) {};
      "system-fileio" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, system-filepath, text
         , time, unix
         }:
         mkDerivation {
           pname = "system-fileio";
           version = "0.3.16.3";
           sha256 = "3175707cb322c65760fa2eb2ab17327f251c8294ad688efc6258e82328830491";
           libraryHaskellDepends = [
             base bytestring system-filepath text time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/haskell-filesystem";
           description = "Consistent filesystem interaction across GHC versions (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "system-filepath" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, stdenv, text }:
         mkDerivation {
           pname = "system-filepath";
           version = "0.4.13.4";
           sha256 = "345d7dec968b74ab1b8c0e7bb78c2ef1e5be7be6b7bac455340fd658abfec5fb";
           libraryHaskellDepends = [ base bytestring deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/haskell-filesystem";
           description = "High-level, byte-based file and directory path manipulations (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "system-posix-redirect" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "system-posix-redirect";
           version = "1.1.0.1";
           sha256 = "53535011e64c1792052987bc1e8799222286c30c349dd36d3fc08c8612fa6ef2";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           description = "A toy module to temporarily redirect a program's stdout";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "syz" = callPackage
        ({ mkDerivation, base, stdenv, syb }:
         mkDerivation {
           pname = "syz";
           version = "0.2.0.0";
           sha256 = "3e85801a83fa2a7e57093a7d0aa52f21cba07a0bd6d1ba82d2ddfb335249a3d4";
           libraryHaskellDepends = [ base syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.indiana.edu/~adamsmd/papers/scrap_your_zippers/";
           description = "Scrap Your Zippers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tabular" = callPackage
        ({ mkDerivation, base, csv, html, mtl, stdenv }:
         mkDerivation {
           pname = "tabular";
           version = "0.2.2.7";
           sha256 = "13f8da12108dafcf3194eb6bf25febf0081c7e4734f66d2d4aeee899f3c14ffb";
           libraryHaskellDepends = [ base csv html mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/kowey/tabular";
           description = "Two-dimensional data tables with rendering functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagged" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, template-haskell }:
         mkDerivation {
           pname = "tagged";
           version = "0.8.4";
           sha256 = "20c861d299445ea810ba39d9d0529fb0b3862f4d0271a4fb168ccd493a234d5e";
           libraryHaskellDepends = [ base deepseq template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/tagged";
           description = "Haskell 98 phantom types to avoid unsafely passing dummy arguments";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagged-binary" = callPackage
        ({ mkDerivation, base, binary, bytestring, pureMD5, stdenv }:
         mkDerivation {
           pname = "tagged-binary";
           version = "0.2.0.0";
           sha256 = "35e30f2f9183a9890557be7a28e4f88b19c68b0cfd688e906d8491f72b247745";
           libraryHaskellDepends = [ base binary bytestring pureMD5 ];
           doHaddock = false;
           doCheck = false;
           description = "Provides tools for serializing data tagged with type information";
           license = stdenv.lib.licenses.mit;
         }) {};
      "taggy" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup, stdenv
         , text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "taggy";
           version = "0.2.0";
           sha256 = "c36b0bebb1e384afe9a11760183bc15a665fb2b352a5035d545321351c630207";
           revision = "1";
           editedCabalFile = "02xmvs9m977szhf5cgy31rbadi662g194giq3djzvsd41c1sshq3";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base blaze-html blaze-markup text unordered-containers
             vector
           ];
           executableHaskellDepends = [ attoparsec base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/alpmestan/taggy";
           description = "Efficient and simple HTML/XML parsing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "taggy-lens" = callPackage
        ({ mkDerivation, base, lens, stdenv, taggy, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "taggy-lens";
           version = "0.1.2";
           sha256 = "2bce7b9a008819f4a6ef5224136e0573bb0f2170b80d6bfe079efc0c7062a216";
           libraryHaskellDepends = [
             base lens taggy text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/alpmestan/taggy-lens";
           description = "Lenses for the taggy html/xml parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagshare" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "tagshare";
           version = "0.0";
           sha256 = "d2314bae2e6820700f2a61db9c9f7976e1b53547a49cdd3352bdf29ac3856ce0";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           description = "TagShare - explicit sharing with tags";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagsoup" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text }:
         mkDerivation {
           pname = "tagsoup";
           version = "0.13.10";
           sha256 = "ac838eeed18118423220716855c2bfd71dcc4a7a455893d8c4ad627828f57d58";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring containers text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/tagsoup#readme";
           description = "Parsing and extracting information from (possibly malformed) HTML/XML documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagstream-conduit" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , case-insensitive, conduit, conduit-extra, data-default, resourcet
         , stdenv, text, transformers, xml-conduit
         }:
         mkDerivation {
           pname = "tagstream-conduit";
           version = "0.5.5.3";
           sha256 = "b296e8f0ba18ae951b5bb3fc2d9d964954666df61ea9363d667f251af17134ab";
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring case-insensitive conduit
             conduit-extra data-default resourcet text transformers xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yihuang/tagstream-conduit";
           description = "streamlined html tag parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tar" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , directory, filepath, stdenv, time
         }:
         mkDerivation {
           pname = "tar";
           version = "0.5.0.3";
           sha256 = "d8d9ad876365f88bdccd02073049e58715cd5ba94de06eb98e21d595244918a3";
           revision = "1";
           editedCabalFile = "0ds7hjyvbpnxly0nwsrmzl2mazpw7ajm7ibv6aqa5s5vk9p1wwjx";
           libraryHaskellDepends = [
             array base bytestring containers deepseq directory filepath time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Reading, writing and manipulating \".tar\" archive files.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tardis" = callPackage
        ({ mkDerivation, base, mmorph, mtl, stdenv }:
         mkDerivation {
           pname = "tardis";
           version = "0.4.1.0";
           sha256 = "e672abadd75055c2372d722c98058f7f3403fcca18258565d1cdd8e0dc25a5d9";
           revision = "1";
           editedCabalFile = "1wp6vp90g19hv8r2l83ava7qxf0933gb7ni2zgyfa66vlvxvhibv";
           libraryHaskellDepends = [ base mmorph mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/tardis";
           description = "Bidirectional state monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, clock, containers
         , deepseq, mtl, optparse-applicative, regex-tdfa, stdenv, stm
         , tagged, unbounded-delays
         }:
         mkDerivation {
           pname = "tasty";
           version = "0.11.0.4";
           sha256 = "e0e248d50aaa098b2633d51a1c71f3da569ba5d6c0e77e0e39b6c9b7de97fd16";
           revision = "1";
           editedCabalFile = "0rr568wx6x4cmpgs0yqcblr5pakk0qjqnxyac3kdpm4473g3llpx";
           libraryHaskellDepends = [
             ansi-terminal async base clock containers deepseq mtl
             optparse-applicative regex-tdfa stm tagged unbounded-delays
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://documentup.com/feuerbach/tasty";
           description = "Modern and extensible testing framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-ant-xml" = callPackage
        ({ mkDerivation, base, containers, generic-deriving, ghc-prim, mtl
         , stdenv, stm, tagged, tasty, transformers, xml
         }:
         mkDerivation {
           pname = "tasty-ant-xml";
           version = "1.0.2";
           sha256 = "bbc3cc6741597af6b158bb54345d7356c98b50eb8b493abd38178a471915ff5d";
           libraryHaskellDepends = [
             base containers generic-deriving ghc-prim mtl stm tagged tasty
             transformers xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/tasty-ant-xml";
           description = "Render tasty output to XML for Jenkins";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-dejafu" = callPackage
        ({ mkDerivation, base, dejafu, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-dejafu";
           version = "0.3.0.2";
           sha256 = "1f1d2ebbad76c763e036871ec481f40c532334f7692dc187a94b77519dbe2f5d";
           libraryHaskellDepends = [ base dejafu tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Deja Fu support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-expected-failure" = callPackage
        ({ mkDerivation, base, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-expected-failure";
           version = "0.11.0.4";
           sha256 = "41ed5a34e250ee5dc78daf93aa02a25d751b2c6423302faf49f28986822ba564";
           revision = "1";
           editedCabalFile = "07sz28vm5rllp9yj1ibhz015s6c4gcq1vzxlphhqam1ah096jc42";
           libraryHaskellDepends = [ base tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nomeata/tasty-expected-failure";
           description = "Mark tasty tests as failure expected";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-fail-fast" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm, tagged, tasty }:
         mkDerivation {
           pname = "tasty-fail-fast";
           version = "0.0.2";
           sha256 = "28e463b3e85e356f1a0676a4accd7ecc002814dc0487323613f0c6aacc153ac6";
           libraryHaskellDepends = [ base containers stm tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/MichaelXavier/tasty-fail-fast#readme";
           description = "Adds the ability to fail a tasty test suite on first test failure";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-golden" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, deepseq
         , directory, filepath, mtl, optparse-applicative, process, stdenv
         , tagged, tasty, temporary
         }:
         mkDerivation {
           pname = "tasty-golden";
           version = "2.3.1.1";
           sha256 = "9e87fa5b29f840731c12722049563655cedb6522b5e5792c5eb596eb352c8e5d";
           libraryHaskellDepends = [
             async base bytestring containers deepseq directory filepath mtl
             optparse-applicative process tagged tasty temporary
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/tasty-golden";
           description = "Golden tests support for tasty";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-hspec" = callPackage
        ({ mkDerivation, base, hspec, hspec-core, QuickCheck, random
         , stdenv, tagged, tasty, tasty-quickcheck, tasty-smallcheck
         }:
         mkDerivation {
           pname = "tasty-hspec";
           version = "1.1.3";
           sha256 = "3c597d948cad9c61355a56811533abbad130eb6e4068fd930ab5514c759bfe31";
           revision = "4";
           editedCabalFile = "0a9za4xhhng4zlfgil2cwzlkjv6dypxn81l1lwyi6mw8qms1apfd";
           libraryHaskellDepends = [
             base hspec hspec-core QuickCheck random tagged tasty
             tasty-quickcheck tasty-smallcheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mitchellwrosen/tasty-hspec";
           description = "Hspec support for the Tasty test framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-html" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, containers, filepath
         , generic-deriving, mtl, stdenv, stm, tagged, tasty, text
         , transformers
         }:
         mkDerivation {
           pname = "tasty-html";
           version = "0.4.1.1";
           sha256 = "0eea1c9fcf1ef3aeb94b811086e11d87ce59f90bb91afa8765152b943c591f1a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base blaze-html bytestring containers filepath generic-deriving mtl
             stm tagged tasty text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/feuerbach/tasty-html";
           description = "Render tasty output to HTML";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-hunit" = callPackage
        ({ mkDerivation, base, stdenv, tasty }:
         mkDerivation {
           pname = "tasty-hunit";
           version = "0.9.2";
           sha256 = "ae1efc2a750dfc09f9276d3a57e6a8f8b30f1a6932e81c53fcd67132b8ea1623";
           libraryHaskellDepends = [ base tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://documentup.com/feuerbach/tasty";
           description = "HUnit support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-kat" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, tasty }:
         mkDerivation {
           pname = "tasty-kat";
           version = "0.0.3";
           sha256 = "a72501f0f77db372648566bbba1dd1d6d0d0c975b42238875d663313e9a5db93";
           libraryHaskellDepends = [ base bytestring tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/tasty-kat";
           description = "Known Answer Tests (KAT) framework for tasty";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-quickcheck" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-quickcheck";
           version = "0.8.4";
           sha256 = "365f4cb6db70cce36ebdc133a2f6388cab71df2ca11f223f0458565956ec3297";
           libraryHaskellDepends = [ base QuickCheck tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://documentup.com/feuerbach/tasty";
           description = "QuickCheck support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-rerun" = callPackage
        ({ mkDerivation, base, containers, mtl, optparse-applicative
         , reducers, split, stdenv, stm, tagged, tasty, transformers
         }:
         mkDerivation {
           pname = "tasty-rerun";
           version = "1.1.6";
           sha256 = "ed33270c8a1f1576985e9907087921fd4f8fba19253fe3bfefec2d05f9799d79";
           libraryHaskellDepends = [
             base containers mtl optparse-applicative reducers split stm tagged
             tasty transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/tasty-rerun";
           description = "Run tests by filtering the test tree depending on the result of previous test runs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-silver" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, bytestring, containers
         , deepseq, directory, filepath, mtl, optparse-applicative, process
         , process-extras, regex-tdfa, stdenv, stm, tagged, tasty, temporary
         , text
         }:
         mkDerivation {
           pname = "tasty-silver";
           version = "3.1.9";
           sha256 = "7067a64be061c42102eca6c09215bcaebe27c8bb9c554c38521c105dcc69b630";
           libraryHaskellDepends = [
             ansi-terminal async base bytestring containers deepseq directory
             filepath mtl optparse-applicative process process-extras regex-tdfa
             stm tagged tasty temporary text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phile314/tasty-silver";
           description = "A fancy test runner, including support for golden tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-smallcheck" = callPackage
        ({ mkDerivation, async, base, smallcheck, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-smallcheck";
           version = "0.8.1";
           sha256 = "314ba7acdb7793730e7677f553a72dd6a4a8f9a45ff3e931cd7d384affb3c6d8";
           libraryHaskellDepends = [ async base smallcheck tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://documentup.com/feuerbach/tasty";
           description = "SmallCheck support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-tap" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm, tasty }:
         mkDerivation {
           pname = "tasty-tap";
           version = "0.0.3";
           sha256 = "b65cde7c662dd1d204a4e8efb84c1210c1ed0571def12ccf3c59f3036f0bc0fc";
           libraryHaskellDepends = [ base containers stm tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michaelxavier/tasty-tap";
           description = "TAP (Test Anything Protocol) Version 13 formatter for tasty";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-th" = callPackage
        ({ mkDerivation, base, stdenv, tasty, template-haskell }:
         mkDerivation {
           pname = "tasty-th";
           version = "0.1.4";
           sha256 = "18a14d693e709046eba3bb1a4e9febfce09d04059342728f06178788a24ece35";
           libraryHaskellDepends = [ base tasty template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bennofs/tasty-th";
           description = "Automatic tasty test case discovery using TH";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "telegram-api" = callPackage
        ({ mkDerivation, aeson, base, bytestring, either, http-api-data
         , http-client, http-media, http-types, mime-types, servant
         , servant-client, stdenv, string-conversions, text, transformers
         }:
         mkDerivation {
           pname = "telegram-api";
           version = "0.5.0.0";
           sha256 = "f971c4acd9101f4fd811a5e60b31ce2c85a09789a248e3a5473efa81d227ad93";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring either http-api-data http-client http-media
             http-types mime-types servant servant-client string-conversions
             text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/klappvisor/haskell-telegram-api#readme";
           description = "Telegram Bot API bindings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tellbot" = callPackage
        ({ mkDerivation, base, bifunctors, bytestring, containers
         , http-conduit, mtl, network, regex-pcre, split, stdenv, tagsoup
         , text, time, transformers
         }:
         mkDerivation {
           pname = "tellbot";
           version = "0.6.1";
           sha256 = "4b7e83cc0a9f6cc175d8a4aedb91c3c052809c27f203f46ea1ea9d27e9a099e6";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bifunctors bytestring containers http-conduit mtl network
             regex-pcre split tagsoup text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/tellbot";
           description = "IRC tellbot";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "template" = callPackage
        ({ mkDerivation, base, mtl, stdenv, text }:
         mkDerivation {
           pname = "template";
           version = "0.2.0.10";
           sha256 = "8fd5a321b1c62f8ca5ed68c098e676917a5dac4d65809fceaed4b52c22b4ac82";
           libraryHaskellDepends = [ base mtl text ];
           doHaddock = false;
           doCheck = false;
           description = "Simple string substitution";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "temporary" = callPackage
        ({ mkDerivation, base, directory, exceptions, filepath, stdenv
         , transformers, unix
         }:
         mkDerivation {
           pname = "temporary";
           version = "1.2.0.4";
           sha256 = "51e713804246404df8a728919a2e7d1994f8cfda42cfa7a74ea65d8b7d206762";
           libraryHaskellDepends = [
             base directory exceptions filepath transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/feuerbach/temporary";
           description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "temporary-rc" = callPackage
        ({ mkDerivation, base, directory, exceptions, filepath, stdenv
         , transformers, unix
         }:
         mkDerivation {
           pname = "temporary-rc";
           version = "1.2.0.3";
           sha256 = "1a4f8dd65f7db92316a68ef64c3518873799115babce92ef9869103d318011db";
           libraryHaskellDepends = [
             base directory exceptions filepath transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/feuerbach/temporary";
           description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "terminal-progress-bar" = callPackage
        ({ mkDerivation, base, base-unicode-symbols, stdenv, stm, stm-chans
         }:
         mkDerivation {
           pname = "terminal-progress-bar";
           version = "0.0.1.4";
           sha256 = "a36b3a305c58def80aa01fc2df46f4c15ea411a4531dd1723784e839448cbb51";
           libraryHaskellDepends = [
             base base-unicode-symbols stm stm-chans
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/roelvandijk/terminal-progress-bar";
           description = "A simple progress bar in the terminal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "terminal-size" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "terminal-size";
           version = "0.3.2.1";
           sha256 = "b5c23e964756bc13914649a67d63233f59ad0a813abe7cadeb2fc9d586dc9658";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Get terminal window height and width";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "terminfo" = callPackage
        ({ mkDerivation, base, ncurses, stdenv }:
         mkDerivation {
           pname = "terminfo";
           version = "0.4.0.2";
           sha256 = "fea88b28443f5efd316c7699685b3925c0a7613992305f11af03746139d8f856";
           libraryHaskellDepends = [ base ];
           librarySystemDepends = [ ncurses ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/judah/terminfo";
           description = "Haskell bindings to the terminfo library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) ncurses;};
      "test-framework" = callPackage
        ({ mkDerivation, ansi-terminal, ansi-wl-pprint, base, containers
         , hostname, old-locale, random, regex-posix, stdenv, time, xml
         }:
         mkDerivation {
           pname = "test-framework";
           version = "0.8.1.1";
           sha256 = "7883626a5aebb1df327bf26dbd382208946250a79f9cc3bf9a9eb0b0767bb273";
           revision = "4";
           editedCabalFile = "16b7j6ixd8c0cqy64j0icynnj0v049y16igv0qhw81hzr7nc09bw";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal ansi-wl-pprint base containers hostname old-locale
             random regex-posix time xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://batterseapower.github.io/test-framework/";
           description = "Framework for running and organising tests, with HUnit and QuickCheck support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-hunit" = callPackage
        ({ mkDerivation, base, extensible-exceptions, HUnit, stdenv
         , test-framework
         }:
         mkDerivation {
           pname = "test-framework-hunit";
           version = "0.3.0.2";
           sha256 = "95cb8ee02a850b164bfdabdf4dbc839d621361f3ac770ad21ea43a8bde360bf8";
           revision = "3";
           editedCabalFile = "0i9mlalv7cl1iq43ld5myrnpszq5rxmd79hk495dcb08rglhgl3z";
           libraryHaskellDepends = [
             base extensible-exceptions HUnit test-framework
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://batterseapower.github.io/test-framework/";
           description = "HUnit support for the test-framework package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-quickcheck2" = callPackage
        ({ mkDerivation, base, extensible-exceptions, QuickCheck, random
         , stdenv, test-framework
         }:
         mkDerivation {
           pname = "test-framework-quickcheck2";
           version = "0.3.0.3";
           sha256 = "cc96c6f30c29b16a3f7ec5c108f320a6c0f0d3ef71afff8a1cb98caf33ffe18a";
           revision = "4";
           editedCabalFile = "1j1lk0xpbdfvp42h6c34yq1snhl1mk6sf393raxvakfl0l7nybqd";
           libraryHaskellDepends = [
             base extensible-exceptions QuickCheck random test-framework
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://batterseapower.github.io/test-framework/";
           description = "QuickCheck2 support for the test-framework package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-smallcheck" = callPackage
        ({ mkDerivation, base, smallcheck, stdenv, test-framework
         , transformers
         }:
         mkDerivation {
           pname = "test-framework-smallcheck";
           version = "0.2";
           sha256 = "6081c4f35967b0d0cb92ac09a915fa9e2da01c401266b20ce18793fbc2bceff6";
           libraryHaskellDepends = [
             base smallcheck test-framework transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/smallcheck";
           description = "Support for SmallCheck tests in test-framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-th" = callPackage
        ({ mkDerivation, base, haskell-src-exts, language-haskell-extract
         , regex-posix, stdenv, template-haskell, test-framework
         }:
         mkDerivation {
           pname = "test-framework-th";
           version = "0.2.4";
           sha256 = "8b780d9e3edd8d91e24f72d9fa1f80420e52959428ad7c22d0694901a43f9c8a";
           libraryHaskellDepends = [
             base haskell-src-exts language-haskell-extract regex-posix
             template-haskell test-framework
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/finnsson/test-generator";
           description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-th-prime" = callPackage
        ({ mkDerivation, base, cpphs, haskell-src-exts, stdenv
         , template-haskell, test-framework
         }:
         mkDerivation {
           pname = "test-framework-th-prime";
           version = "0.0.9";
           sha256 = "77e4e33e4207dc6ba9a3c0bb1eda9d6ac6803e1bf20fd7a4aee5c8fe958399bd";
           libraryHaskellDepends = [
             base cpphs haskell-src-exts template-haskell test-framework
           ];
           doHaddock = false;
           doCheck = false;
           description = "Template Haskell for test framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-simple" = callPackage
        ({ mkDerivation, base, mtl, QuickCheck, state-plus, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "test-simple";
           version = "0.1.9";
           sha256 = "eaee79bf997272fe0c97a0cfb80347c760ca5de8ffb0d639ddbf00ba6f6ef51d";
           libraryHaskellDepends = [
             base mtl QuickCheck state-plus template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple Perl inspired testing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "testing-feat" = callPackage
        ({ mkDerivation, base, mtl, QuickCheck, stdenv, tagshare
         , template-haskell
         }:
         mkDerivation {
           pname = "testing-feat";
           version = "0.4.0.3";
           sha256 = "34ca9c7849c4054b951cb359dc55ec1d24f5c2f7cf31d6211959778ad35407ce";
           revision = "1";
           editedCabalFile = "05j5i1sfg1k94prhwmg6z50w0flb9k181nhabwr3m9gkrrqzb4b4";
           libraryHaskellDepends = [
             base mtl QuickCheck tagshare template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Functional Enumeration of Algebraic Types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "texmath" = callPackage
        ({ mkDerivation, base, containers, mtl, pandoc-types, parsec
         , stdenv, syb, xml
         }:
         mkDerivation {
           pname = "texmath";
           version = "0.8.6.7";
           sha256 = "9e5fd9571a7257bdc8cfa6e0da077b16e867011a9f813065d68dd046bd358c88";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers mtl pandoc-types parsec syb xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/texmath";
           description = "Conversion between formats used to represent mathematics";
           license = "GPL";
         }) {};
      "text" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, deepseq, ghc-prim
         , integer-gmp, stdenv
         }:
         mkDerivation {
           pname = "text";
           version = "1.2.2.1";
           sha256 = "1addb1bdf36293c996653c9a0a320b5491714495862d997a23fb1ecd41ff395b";
           revision = "1";
           editedCabalFile = "1y9v539ngplrpnw1wd3wvazxqb90iwxivnlzrhaljryijp9zlvqw";
           libraryHaskellDepends = [
             array base binary bytestring deepseq ghc-prim integer-gmp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/text";
           description = "An efficient packed Unicode text type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-binary" = callPackage
        ({ mkDerivation, base, binary, stdenv, text }:
         mkDerivation {
           pname = "text-binary";
           version = "0.2.1.1";
           sha256 = "b697b2bd09080643d4686705c779122129638904870df5c1d41c8fc72f08f4a1";
           libraryHaskellDepends = [ base binary text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kawu/text-binary";
           description = "Binary instances for text types";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "text-format" = callPackage
        ({ mkDerivation, array, base, double-conversion, ghc-prim
         , integer-gmp, old-locale, stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "text-format";
           version = "0.3.1.1";
           sha256 = "6de112764446a65370204f35a5fc4b1831106049f90918545d5dcd2ddd7fee0b";
           revision = "1";
           editedCabalFile = "1ap2paddh2q1ifs3nwdj0f1r7fypnsa669l7gdvgyfidz3w5vzic";
           libraryHaskellDepends = [
             array base double-conversion ghc-prim integer-gmp old-locale text
             time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/text-format";
           description = "Text formatting";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-icu" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, icu, stdenv, text }:
         mkDerivation {
           pname = "text-icu";
           version = "0.7.0.1";
           sha256 = "e2764c2749033706eed5b9fb3cda11177ad15cdf11912028f551eca39a2c7f78";
           libraryHaskellDepends = [ base bytestring deepseq text ];
           librarySystemDepends = [ icu ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/text-icu";
           description = "Bindings to the ICU library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) icu;};
      "text-ldap" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
         , containers, dlist, semigroups, stdenv, transformers
         }:
         mkDerivation {
           pname = "text-ldap";
           version = "0.1.1.8";
           sha256 = "f2466df70426db84435a52bb0fa82065186e49f873aba334dfd06c92ed29c039";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base base64-bytestring bytestring containers dlist
             semigroups transformers
           ];
           executableHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Parser and Printer for LDAP text data stream";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-manipulate" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "text-manipulate";
           version = "0.2.0.1";
           sha256 = "e0e9c71d9b1cfb7d3bca3d0a500d939b3efc6684515c0d7bd685503aa4f49d2f";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/text-manipulate";
           description = "Case conversion, word boundary manipulation, and textual subjugation";
           license = "unknown";
         }) {};
      "text-postgresql" = callPackage
        ({ mkDerivation, base, dlist, stdenv, transformers }:
         mkDerivation {
           pname = "text-postgresql";
           version = "0.0.2.1";
           sha256 = "10f83683108faa8a704f649bb10ab1962f926b0ac4e481922764cc87bb92f2f6";
           libraryHaskellDepends = [ base dlist transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Parser and Printer of PostgreSQL extended types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-region" = callPackage
        ({ mkDerivation, aeson, base, base-unicode-symbols, bytestring
         , containers, groups, lens, mtl, stdenv, text
         }:
         mkDerivation {
           pname = "text-region";
           version = "0.1.0.1";
           sha256 = "5217ff7af33898ca615e5444ba4293f214d6a5cbc8c4eb34ba53845151f61bf1";
           revision = "1";
           editedCabalFile = "03sv66drcgj9ch2mcb44macbwb51i3j2zdk9fn06x09jsm55svys";
           libraryHaskellDepends = [
             aeson base base-unicode-symbols bytestring containers groups lens
             mtl text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvoidex/text-region";
           description = "Marking text regions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-show" = callPackage
        ({ mkDerivation, array, base, base-compat, bytestring
         , bytestring-builder, containers, generic-deriving, ghc-prim
         , integer-gmp, nats, semigroups, stdenv, tagged, template-haskell
         , text, transformers, void
         }:
         mkDerivation {
           pname = "text-show";
           version = "2.1.2";
           sha256 = "76c1ce631c6932816dc241b290400e7200d7c79fd50ec03f51964e244fae320d";
           revision = "2";
           editedCabalFile = "18zdsfhpzclsx4nz7waxzn7gjn6gb9wr2wph54bvj8wrb087mcxk";
           libraryHaskellDepends = [
             array base base-compat bytestring bytestring-builder containers
             generic-deriving ghc-prim integer-gmp nats semigroups tagged
             template-haskell text transformers void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/text-show";
           description = "Efficient conversion of values into Text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-zipper" = callPackage
        ({ mkDerivation, base, stdenv, text, vector }:
         mkDerivation {
           pname = "text-zipper";
           version = "0.4";
           sha256 = "0a94fbdc2febc7656369b30c09fe4bcee1f9323547af40037a2adbee52a45d97";
           libraryHaskellDepends = [ base text vector ];
           doHaddock = false;
           doCheck = false;
           description = "A text editor zipper library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tf-random" = callPackage
        ({ mkDerivation, base, primitive, random, stdenv, time }:
         mkDerivation {
           pname = "tf-random";
           version = "0.5";
           sha256 = "2e30cec027b313c9e1794d326635d8fc5f79b6bf6e7580ab4b00186dadc88510";
           libraryHaskellDepends = [ base primitive random time ];
           doHaddock = false;
           doCheck = false;
           description = "High-quality splittable pseudorandom number generator";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-abstraction" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "th-abstraction";
           version = "0.2.6.0";
           sha256 = "e52e289a547d68f203d65f2e63ec2d87a3c613007d2fe873615c0969b981823c";
           revision = "1";
           editedCabalFile = "0k4s4nbg9jlgaza38842jnzs8s01ig85fzmjgd10k9hl02gc3r44";
           libraryHaskellDepends = [
             base containers ghc-prim template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/glguy/th-abstraction";
           description = "Nicer interface for reified information about data types";
           license = stdenv.lib.licenses.isc;
         }) {};
      "th-data-compat" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "th-data-compat";
           version = "0.0.2.2";
           sha256 = "a1b58dfb959d982d0935494c3effe75a5c3804d0a15357b7cab12ce9be62ce38";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Compatibility for data definition template of TH";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-desugar" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, syb
         , template-haskell, th-lift, th-orphans
         }:
         mkDerivation {
           pname = "th-desugar";
           version = "1.5.5";
           sha256 = "db8cfe15c2b1c5b5e6c2105a0a16f409c9eb9b359c2f2c18e440d5562c5d38a3";
           revision = "1";
           editedCabalFile = "1f6ir0gcn23kaxwl5j08r01cbjg0yx8bwc7b8j4agyjwlb2arzvd";
           libraryHaskellDepends = [
             base containers mtl syb template-haskell th-lift th-orphans
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cis.upenn.edu/~eir/packages/th-desugar";
           description = "Functions to desugar Template Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-expand-syns" = callPackage
        ({ mkDerivation, base, containers, stdenv, syb, template-haskell }:
         mkDerivation {
           pname = "th-expand-syns";
           version = "0.4.1.0";
           sha256 = "c198f592cc5cd644da97209f1aca0decd10e0847dd676195cb5dcb6abbbe48ea";
           libraryHaskellDepends = [ base containers syb template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Expands type synonyms in Template Haskell ASTs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-extras" = callPackage
        ({ mkDerivation, base, stdenv, syb, template-haskell }:
         mkDerivation {
           pname = "th-extras";
           version = "0.0.0.4";
           sha256 = "8feff450aaf28ec4f08c45a5656c62879861a8e7f45591cb367d5351ddc3fbed";
           libraryHaskellDepends = [ base syb template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/th-extras";
           description = "A grab bag of functions for use with Template Haskell";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "th-lift" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, template-haskell }:
         mkDerivation {
           pname = "th-lift";
           version = "0.7.6";
           sha256 = "326a2c9dac32506d5b7e5d9f3234c0e7a33a612256e4745bfb8de5a32803ecd1";
           libraryHaskellDepends = [ base ghc-prim template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mboes/th-lift";
           description = "Derive Template Haskell's Lift class for datatypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-lift-instances" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv
         , template-haskell, text, th-lift, vector
         }:
         mkDerivation {
           pname = "th-lift-instances";
           version = "0.1.11";
           sha256 = "1da46afabdc73c86f279a0557d5a8f9af1296f9f6043264ba354b1c9cc65a6b8";
           libraryHaskellDepends = [
             base bytestring containers template-haskell text th-lift vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bennofs/th-lift-instances/";
           description = "Lift instances for template-haskell for common data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-orphans" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell, th-lift
         , th-reify-many
         }:
         mkDerivation {
           pname = "th-orphans";
           version = "0.13.0";
           sha256 = "bdaeee2a3588e0622f2036481974dfe1bd135a3d71004393c94201d8d700be80";
           libraryHaskellDepends = [
             base mtl template-haskell th-lift th-reify-many
           ];
           doHaddock = false;
           doCheck = false;
           description = "Orphan instances for TH datatypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-reify-compat" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "th-reify-compat";
           version = "0.0.1.1";
           sha256 = "721ca5a1e2c31c8381e53a30a551057309c077c68904667b16a94a357c1ac513";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/khibino/haskell-th-reify-compat/";
           description = "Compatibility for the result type of TH reify";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-reify-many" = callPackage
        ({ mkDerivation, base, containers, mtl, safe, stdenv
         , template-haskell, th-expand-syns
         }:
         mkDerivation {
           pname = "th-reify-many";
           version = "0.1.6";
           sha256 = "aea5d277af954ec41d8c129b9e0761a0e628b6e216d0243fb2600339bbfce6ac";
           libraryHaskellDepends = [
             base containers mtl safe template-haskell th-expand-syns
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mgsloan/th-reify-many";
           description = "Recurseively reify template haskell datatype info";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "these" = callPackage
        ({ mkDerivation, base, bifunctors, containers, data-default-class
         , hashable, mtl, profunctors, semigroupoids, semigroups, stdenv
         , transformers, transformers-compat, unordered-containers, vector
         }:
         mkDerivation {
           pname = "these";
           version = "0.6.2.1";
           sha256 = "41dd6403ec489deef66632fcae4cd058f636badb162aedff7c8b4930affb99bb";
           revision = "2";
           editedCabalFile = "0dcsslw9spcvi504a3drb0rihdgs2qrzmrydkbxkrqhpxajyz69q";
           libraryHaskellDepends = [
             base bifunctors containers data-default-class hashable mtl
             profunctors semigroupoids semigroups transformers
             transformers-compat unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/isomorphism/these";
           description = "An either-or-both data type & a generalized 'zip with padding' typeclass";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "threads" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "threads";
           version = "0.5.1.4";
           sha256 = "d3b805b743cc7c0bce2a9b142f45bb1ad07e7bd6c2bd97a5fc442c007276febd";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/threads";
           description = "Fork threads and wait for their result";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "through-text" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, stdenv, text
         }:
         mkDerivation {
           pname = "through-text";
           version = "0.1.0.0";
           sha256 = "933225da128906e61865ccd1da73463781b890d742cbb38f52524d94ac19b4cd";
           revision = "3";
           editedCabalFile = "1gia9j7zq3g74kqvkzwp68d690nhddix1kpmj23d5a3zns3rxasn";
           libraryHaskellDepends = [ base bytestring case-insensitive text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.github.com/bergmark/through-text";
           description = "Convert textual types through Text without needing O(n^2) instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "thumbnail-plus" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , data-default, directory, either, gd, imagesize-conduit, resourcet
         , stdenv, temporary, transformers
         }:
         mkDerivation {
           pname = "thumbnail-plus";
           version = "1.0.5";
           sha256 = "81907f62a172f044dbc5c17feb18adee3512eb39c0fd54fb3af42b6d9ff3400c";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra data-default directory either
             gd imagesize-conduit resourcet temporary transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/thumbnail-plus";
           description = "Generate thumbnails easily and safely";
           license = stdenv.lib.licenses.mit;
         }) {};
      "thyme" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, containers
         , cpphs, deepseq, mtl, old-locale, profunctors, QuickCheck, random
         , stdenv, text, time, vector, vector-space, vector-th-unbox
         }:
         mkDerivation {
           pname = "thyme";
           version = "0.3.5.5";
           sha256 = "84c6701fb7b40841d22582202382c362fd9e0d6e5f1c959b7e0f2f91a85c796c";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring containers deepseq mtl old-locale
             profunctors QuickCheck random text time vector vector-space
             vector-th-unbox
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liyang/thyme";
           description = "A faster time library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tidal" = callPackage
        ({ mkDerivation, base, binary, bytestring, colour, containers
         , hashable, hmt, hosc, mersenne-random-pure64, mtl, parsec
         , PortMidi, process, serialport, stdenv, text, time, transformers
         , websockets
         }:
         mkDerivation {
           pname = "tidal";
           version = "0.7.1";
           sha256 = "fce7b8e13e4fd0b520a68fa9733cf1a29dfaf6cbdeb37be463b3e6d4ed700314";
           libraryHaskellDepends = [
             base binary bytestring colour containers hashable hmt hosc
             mersenne-random-pure64 mtl parsec PortMidi process serialport text
             time transformers websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://tidal.lurk.org/";
           description = "Pattern language for improvised music";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "time-compat" = callPackage
        ({ mkDerivation, base, old-time, stdenv, time }:
         mkDerivation {
           pname = "time-compat";
           version = "0.1.0.3";
           sha256 = "590711214510c0d2d09780c7fe3b21748bc4802e9053f78ccd6658e951fe0f7f";
           libraryHaskellDepends = [ base old-time time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/dag/time-compat";
           description = "Compatibility with old-time for the time package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-lens" = callPackage
        ({ mkDerivation, base, data-lens-light, stdenv, time }:
         mkDerivation {
           pname = "time-lens";
           version = "0.4.0.1";
           sha256 = "9f53888424e7f68be8966ac25c8e36dae03cf576f120c76248588d6495c32624";
           libraryHaskellDepends = [ base data-lens-light time ];
           doHaddock = false;
           doCheck = false;
           description = "Lens-based interface to Data.Time data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-locale-compat" = callPackage
        ({ mkDerivation, base, old-locale, stdenv, time }:
         mkDerivation {
           pname = "time-locale-compat";
           version = "0.1.1.3";
           sha256 = "9144bf68b47791a2ac73f45aeadbc5910be2da9ad174909e1a10a70b4576aced";
           libraryHaskellDepends = [ base old-locale time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/khibino/haskell-time-locale-compat";
           description = "Compatibility of TimeLocale between old-locale and time-1.5";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-parsers" = callPackage
        ({ mkDerivation, base, parsers, stdenv, template-haskell, time }:
         mkDerivation {
           pname = "time-parsers";
           version = "0.1.1.0";
           sha256 = "872d2ad4727ed7ac00a06b2acb7d7965da04d432c2d45017805fd4e6975d6ab2";
           libraryHaskellDepends = [ base parsers template-haskell time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/time-parsers#readme";
           description = "Parsers for types in `time`";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-units" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "time-units";
           version = "1.0.0";
           sha256 = "e181997dd05321f09b21c5e0bf38524ccab51ecc588a6017253cc96db289e099";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/acw/time-units";
           description = "A basic library for defining units of time as types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timeit" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "timeit";
           version = "1.0.0.0";
           sha256 = "bd48d90bf96802580d0fa4e9c99150ef3c32cdf97bf345bf40e83633cc5d7236";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Time a computation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timemap" = callPackage
        ({ mkDerivation, base, containers, focus, hashable, list-t, stdenv
         , stm, stm-containers, time, unordered-containers
         }:
         mkDerivation {
           pname = "timemap";
           version = "0.0.4";
           sha256 = "6e7c85c727fd9152db635c33ddb72cab5dca9ae240d41fcb653883f1bcd1d9e3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers focus hashable list-t stm stm-containers time
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "A mutable hashmap, implicitly indexed by UTCTime";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timerep" = callPackage
        ({ mkDerivation, attoparsec, base, monoid-subclasses, stdenv, text
         , time
         }:
         mkDerivation {
           pname = "timerep";
           version = "2.0.0.2";
           sha256 = "1d4e417f3ca08921941c16791680e13b66fb1844d94759068846ede78c965339";
           libraryHaskellDepends = [
             attoparsec base monoid-subclasses text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/HugoDaniel/timerep";
           description = "Parse and display time according to some RFCs (RFC3339, RFC2822, RFC822)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timezone-olson" = callPackage
        ({ mkDerivation, base, binary, bytestring, extensible-exceptions
         , stdenv, time, timezone-series
         }:
         mkDerivation {
           pname = "timezone-olson";
           version = "0.1.7";
           sha256 = "232f55b670531dced3b4f86b97b8f597073da6540e2b4e085936f73f30dea6aa";
           revision = "2";
           editedCabalFile = "1ss4ipn11m6y8bq9pw9i7cs3yciqacf7y281749xc77a1w2nw19b";
           libraryHaskellDepends = [
             base binary bytestring extensible-exceptions time timezone-series
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/time-ng/";
           description = "A pure Haskell parser and renderer for binary Olson timezone files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timezone-series" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "timezone-series";
           version = "0.1.5.1";
           sha256 = "d244dda23a90f019884e6684a6bd7ec43f77875edf382861890ef1c68b2e7a56";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/time-ng/";
           description = "Enhanced timezone handling for Data.Time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tinylog" = callPackage
        ({ mkDerivation, base, bytestring, containers, double-conversion
         , fast-logger, stdenv, text, transformers, unix-time
         }:
         mkDerivation {
           pname = "tinylog";
           version = "0.14.0";
           sha256 = "322f56178011707436a8e5234a879c5254a468f789ad8db635c98adf752a73ea";
           libraryHaskellDepends = [
             base bytestring containers double-conversion fast-logger text
             transformers unix-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/tinylog/";
           description = "Simplistic logging using fast-logger";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "tinytemplate" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "tinytemplate";
           version = "0.1.2.0";
           sha256 = "30c73964f575bd139ccb214b1123caa99bc330d1904c4d3a5e31e33c31d17d0a";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dicomgrid/tinytemplate";
           description = "A tiny text templating library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tls" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, async, base, bytestring
         , cereal, cryptonite, data-default-class, memory, mtl, network
         , stdenv, transformers, x509, x509-store, x509-validation
         }:
         mkDerivation {
           pname = "tls";
           version = "1.3.8";
           sha256 = "b440cf011c3e7af89e1ed719c714ab1001e8d3b13ef9dd3660019d88826bb1e5";
           libraryHaskellDepends = [
             asn1-encoding asn1-types async base bytestring cereal cryptonite
             data-default-class memory mtl network transformers x509 x509-store
             x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-tls";
           description = "TLS/SSL protocol native implementation (Server and Client)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tls-debug" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, data-default-class
         , network, pem, stdenv, time, tls, x509, x509-store, x509-system
         , x509-validation
         }:
         mkDerivation {
           pname = "tls-debug";
           version = "0.4.4";
           sha256 = "e5e7e416de38f21de5ba4ca17a904d843d6f3f66f6b6309b6ab9770f897c551d";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring cryptonite data-default-class network pem time tls
             x509 x509-store x509-system x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-tls";
           description = "Set of programs for TLS testing and debugging";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "token-bucket" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "token-bucket";
           version = "0.1.0.1";
           sha256 = "312609c0037271b1091f23c2edf467e9449edca5bbed0cfb45c2c93c1bee6ad0";
           revision = "4";
           editedCabalFile = "19kxi77aqyra00m02751sdfm6qy6mx4mlh7bhqv4wyaggwga707g";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/token-bucket";
           description = "Rate limiter using lazy bucket algorithm";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "torrent" = callPackage
        ({ mkDerivation, base, bencode, binary, bytestring, containers
         , filepath, stdenv, syb
         }:
         mkDerivation {
           pname = "torrent";
           version = "10000.0.1";
           sha256 = "ba7c9565f5397f7603b924a67537abe6738cdc20649ff3fb510b5731d1e18725";
           libraryHaskellDepends = [
             base bencode binary bytestring containers filepath syb
           ];
           doHaddock = false;
           doCheck = false;
           description = "BitTorrent file parser and generater";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tostring" = callPackage
        ({ mkDerivation, base, case-insensitive, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "tostring";
           version = "0.2.1.1";
           sha256 = "efa700d44aec57c82be60c0eabd610f62f2df0d9b06cf41b5fc35a2b77502531";
           libraryHaskellDepends = [ base case-insensitive text utf8-string ];
           doHaddock = false;
           doCheck = false;
           description = "The ToString class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tracy" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "tracy";
           version = "0.1.4.0";
           sha256 = "e778ebf70161ac37878629bf8857021969a71bea1b04140a0c306d0b9d0f430f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Convenience wrappers for non-intrusive debug tracing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "transformers-base" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "transformers-base";
           version = "0.4.4";
           sha256 = "6aa3494fc70659342fbbb163035d5827ecfd8079e3c929e2372adf771fd52387";
           revision = "1";
           editedCabalFile = "196pr3a4lhgklyw6nq6rv1j9djwzmvx7xrpp58carxnb55gk06pv";
           libraryHaskellDepends = [
             base stm transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/transformers-base";
           description = "Lift computations from the bottom of a transformer stack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transformers-compat" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "transformers-compat";
           version = "0.4.0.4";
           sha256 = "d5231bc9929ed234032411038c0baae5a3d82939163c2a36582fbe657c46af52";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/transformers-compat/";
           description = "A small compatibility shim exposing the new types from transformers 0.3 and 0.4 to older Haskell platforms.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transformers-lift" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "transformers-lift";
           version = "0.1.0.1";
           sha256 = "c29d11f58fb9b2c1011c162f8f9f98cb0f2d12ca1317f40f4c88d9881840aa74";
           revision = "1";
           editedCabalFile = "0jk65y544gm09hi3wl0d599aay5a6d484wi3l9nwv2yml97x9inw";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Ad-hoc type classes for lifting";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "traverse-with-class" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, transformers }:
         mkDerivation {
           pname = "traverse-with-class";
           version = "0.2.0.4";
           sha256 = "9d54e9ceac37f1253af616204139d9630ac3b3b5d618bbe03b74db4d7e208772";
           libraryHaskellDepends = [ base template-haskell transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Generic applicative traversals";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tree-fun" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "tree-fun";
           version = "0.8.1.0";
           sha256 = "2ae925f198e9700dedbf809c2b77086fef32f58b4a4adb6c398dca49f4d56f1f";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           description = "Library for functions pertaining to tree exploration and manipulation";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "tree-view" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "tree-view";
           version = "0.4";
           sha256 = "f64de6b9461d125fa4755fc98b6921a7a53cb4f096f88692fe86dd68cde5fe57";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           description = "Render trees as foldable HTML and Unicode art";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tries" = callPackage
        ({ mkDerivation, base, bytestring, bytestring-trie, composition
         , composition-extra, containers, deepseq, hashable, keys
         , QuickCheck, quickcheck-instances, rose-trees, semigroups, sets
         , stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "tries";
           version = "0.0.4";
           sha256 = "6be9638a03b35effe69c9bbfc33b00fe92156211945b83dee871e70cf266f94a";
           libraryHaskellDepends = [
             base bytestring bytestring-trie composition composition-extra
             containers deepseq hashable keys QuickCheck quickcheck-instances
             rose-trees semigroups sets unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Various trie implementations in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "trifecta" = callPackage
        ({ mkDerivation, ansi-terminal, ansi-wl-pprint, array, base
         , blaze-builder, blaze-html, blaze-markup, bytestring, charset
         , comonad, containers, deepseq, fingertree, ghc-prim, hashable
         , lens, mtl, parsers, profunctors, reducers, semigroups, stdenv
         , transformers, unordered-containers, utf8-string
         }:
         mkDerivation {
           pname = "trifecta";
           version = "1.5.2";
           sha256 = "ebc23319d2cfd39c87b2cf688f3db45528e371de9a417fc9e07e50a796b6503a";
           revision = "1";
           editedCabalFile = "0aq6nds1564wj7vvh75d80g91jxc8mxnp8gnf5mrr8w3lhq9xa8z";
           libraryHaskellDepends = [
             ansi-terminal ansi-wl-pprint array base blaze-builder blaze-html
             blaze-markup bytestring charset comonad containers deepseq
             fingertree ghc-prim hashable lens mtl parsers profunctors reducers
             semigroups transformers unordered-containers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/trifecta/";
           description = "A modern parser combinator library with convenient diagnostics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "true-name" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "true-name";
           version = "0.1.0.2";
           sha256 = "067627890569fe5a241b6bd7e0de44b2f2fa22a2e9e2e29eaed6aadc2e6e1cb0";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liyang/true-name";
           description = "Template Haskell hack to violate module abstractions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ttrie" = callPackage
        ({ mkDerivation, atomic-primops, base, hashable, primitive, stdenv
         , stm
         }:
         mkDerivation {
           pname = "ttrie";
           version = "0.1.2.1";
           sha256 = "50444fe989559a0b16120df72765321ffd9de2fd97c943104513d894f21f4a68";
           libraryHaskellDepends = [
             atomic-primops base hashable primitive stm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mcschroeder/ttrie";
           description = "Contention-free STM hash map";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tttool" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, containers
         , directory, executable-path, filepath, hashable, haskeline, HPDF
         , JuicyPixels, mtl, natural-sort, optparse-applicative, parsec
         , process, random, split, spool, stdenv, template-haskell, time
         , vector, yaml, zlib
         }:
         mkDerivation {
           pname = "tttool";
           version = "1.6.1.2";
           sha256 = "8f5f05c91ea4f50e43924618090f7806e0649dc83edd8c1af0e05d9032098384";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson base binary bytestring containers directory executable-path
             filepath hashable haskeline HPDF JuicyPixels mtl natural-sort
             optparse-applicative parsec process random split spool
             template-haskell time vector yaml zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/entropia/tip-toi-reveng";
           description = "Working with files for the Tiptoi® pen";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tuple" = callPackage
        ({ mkDerivation, base, OneTuple, stdenv }:
         mkDerivation {
           pname = "tuple";
           version = "0.3.0.2";
           sha256 = "2fcb068ffafbe64170e02094a363f83d1725f44f8af963d9dad943a592e89624";
           libraryHaskellDepends = [ base OneTuple ];
           doHaddock = false;
           doCheck = false;
           description = "Various functions on tuples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tuple-th" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell }:
         mkDerivation {
           pname = "tuple-th";
           version = "0.2.5";
           sha256 = "56ea37dcede07b5cf5385108540ae626db163f9df0387583d3c7afdaf72634d7";
           libraryHaskellDepends = [ base containers template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Generate (non-recursive) utility functions for tuples of statically known size";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tuples-homogenous-h98" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "tuples-homogenous-h98";
           version = "0.1.1.0";
           sha256 = "025afc8f0fe9c92fb43cebedfa6a764f744d3dc3a3d52935d0a01bc80d111f3a";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ppetr/tuples-homogenous-h98";
           description = "Wrappers for n-ary tuples with Traversable and Applicative/Monad instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "turtle" = callPackage
        ({ mkDerivation, ansi-wl-pprint, async, base, bytestring, clock
         , containers, directory, exceptions, foldl, hostname, managed
         , optional-args, optparse-applicative, process, semigroups, stdenv
         , stm, system-fileio, system-filepath, temporary, text, time
         , transformers, unix, unix-compat
         }:
         mkDerivation {
           pname = "turtle";
           version = "1.5.9";
           sha256 = "3da459b5c15291465645e711e67b1ff29973c33bf0040fccc4b86321d1c4a28f";
           revision = "1";
           editedCabalFile = "19mbp8rz9mrc10k5s2n2ihsvk7i7sm19y3xvdy320aajxv7k69hh";
           libraryHaskellDepends = [
             ansi-wl-pprint async base bytestring clock containers directory
             exceptions foldl hostname managed optional-args
             optparse-applicative process semigroups stm system-fileio
             system-filepath temporary text time transformers unix unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Shell programming, Haskell-style";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "turtle-options" = callPackage
        ({ mkDerivation, base, optional-args, parsec, stdenv, text, turtle
         }:
         mkDerivation {
           pname = "turtle-options";
           version = "0.1.0.4";
           sha256 = "c2c76b0bc0bc93397827c12b6f049e682afe702f9f662a1b0818e8e221d51ace";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base optional-args parsec text turtle ];
           executableHaskellDepends = [ base turtle ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/elaye/turtle-options#readme";
           description = "Collection of command line options and parsers for these options";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "twitter-conduit" = callPackage
        ({ mkDerivation, aeson, attoparsec, authenticate-oauth, base
         , bytestring, conduit, conduit-extra, containers, data-default
         , exceptions, http-client, http-conduit, http-types, lens
         , lens-aeson, resourcet, stdenv, template-haskell, text, time
         , transformers, transformers-base, twitter-types
         , twitter-types-lens
         }:
         mkDerivation {
           pname = "twitter-conduit";
           version = "0.2.1";
           sha256 = "56271d64566f5c43f7557e384e2e8e655f19f782078c28e99919efc32cfff3ff";
           libraryHaskellDepends = [
             aeson attoparsec authenticate-oauth base bytestring conduit
             conduit-extra containers data-default exceptions http-client
             http-conduit http-types lens lens-aeson resourcet template-haskell
             text time transformers transformers-base twitter-types
             twitter-types-lens
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/himura/twitter-conduit";
           description = "Twitter API package with conduit interface and Streaming API support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "twitter-feed" = callPackage
        ({ mkDerivation, aeson, authenticate-oauth, base, bytestring
         , http-conduit, stdenv
         }:
         mkDerivation {
           pname = "twitter-feed";
           version = "0.2.0.11";
           sha256 = "8b98b4ddfb88f4c14f8eb43bd74a4c4e7941a92d44b90717e9b8dbe4c454c889";
           revision = "3";
           editedCabalFile = "0hzrh34ar9a5sfxq7zbh0hr38ndvd3x5pjp59j7b6vdalpk3r1af";
           libraryHaskellDepends = [
             aeson authenticate-oauth base bytestring http-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/twitter-feed";
           description = "Client for fetching Twitter timeline via Oauth";
           license = stdenv.lib.licenses.mit;
         }) {};
      "twitter-types" = callPackage
        ({ mkDerivation, aeson, base, stdenv, text, time
         , unordered-containers
         }:
         mkDerivation {
           pname = "twitter-types";
           version = "0.7.2.2";
           sha256 = "768ee869fc5dc95cf4073ec27862060e6dc6ad7234511d0c6b59cc49841c6d58";
           libraryHaskellDepends = [
             aeson base text time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/himura/twitter-types";
           description = "Twitter JSON parser and types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "twitter-types-lens" = callPackage
        ({ mkDerivation, base, lens, stdenv, template-haskell, text, time
         , twitter-types
         }:
         mkDerivation {
           pname = "twitter-types-lens";
           version = "0.7.2";
           sha256 = "4ffeabee70234e0969a0581489473380ebf93de504f7b24f9bc024571acfb212";
           revision = "1";
           editedCabalFile = "0rag7vz1irirnqxh18xwvp8rg7ysx4lwrb9ysv5wcfjdggp6b6gs";
           libraryHaskellDepends = [
             base lens template-haskell text time twitter-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/himura/twitter-types";
           description = "Twitter JSON types (lens powered)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-aligned" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-aligned";
           version = "0.9.6";
           sha256 = "1b877271cbfc365563f2dc779dc2ee4820be144e1708318882a3cd11786ade55";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/atzeus/type-aligned";
           description = "Various type-aligned sequence data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-eq" = callPackage
        ({ mkDerivation, base, cpphs, stdenv }:
         mkDerivation {
           pname = "type-eq";
           version = "0.5";
           sha256 = "9fcf4c4f1734b113625f0fd38a239a9637366e176736a4183f22f60e2ccdfa00";
           revision = "1";
           editedCabalFile = "1g8m6f73pbz8mqvqbrvxhp2klj7lf624jgqdn1gchd56z4pcnryw";
           libraryHaskellDepends = [ base ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/glaebhoerl/type-eq";
           description = "Type equality evidence you can carry around";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-level-numbers" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "type-level-numbers";
           version = "0.1.1.1";
           sha256 = "5b56ef5f6e0b6476b9aba46055c3919e67823cbc1b87ed8e6ed70113b1f2318a";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Type level numbers implemented using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-list" = callPackage
        ({ mkDerivation, base, singletons, stdenv }:
         mkDerivation {
           pname = "type-list";
           version = "0.3.0.4";
           sha256 = "cd06218bf2f6897e0caf85c86334d8834ea36410a0d0b1d9193e1cbadd1b300a";
           libraryHaskellDepends = [ base singletons ];
           doHaddock = false;
           doCheck = false;
           description = "Operations on type-level lists and tuples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "typelits-witnesses" = callPackage
        ({ mkDerivation, base, base-compat, constraints, reflection, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "typelits-witnesses";
           version = "0.2.3.0";
           sha256 = "a56e92f9c1be1a3063ae3ba3c55c9715ad298b8c5ff8fcf293cf6eabc6ff210c";
           libraryHaskellDepends = [
             base base-compat constraints reflection transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/typelits-witnesses";
           description = "Existential witnesses, singletons, and classes for operations on GHC TypeLits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "types-compat" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "types-compat";
           version = "0.1.1";
           sha256 = "7ec14729ed21bdcb827e584735d06f00df3a27a606f3d36c051ad4f4756b83ba";
           revision = "2";
           editedCabalFile = "0h8hlx3zb7s8dfh275ich99j4aa4gdj2f8yvzwpmzgylcvn1gfwg";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/types-compat";
           description = "ghc-7.6/7.8 compatible GHC.TypeLits, Data.Typeable and Data.Proxy.";
           license = stdenv.lib.licenses.mit;
         }) {};
      "typography-geometry" = callPackage
        ({ mkDerivation, base, containers, parallel, polynomials-bernstein
         , stdenv, vector
         }:
         mkDerivation {
           pname = "typography-geometry";
           version = "1.0.0.1";
           sha256 = "edaeafb60126be19f0e4fdda54be89b92317dd03b59e9d8b6f119064c1642ad7";
           libraryHaskellDepends = [
             base containers parallel polynomials-bernstein vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Drawings for printed text documents";
           license = "GPL";
         }) {};
      "tz" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, data-default
         , deepseq, stdenv, template-haskell, time, tzdata, vector
         }:
         mkDerivation {
           pname = "tz";
           version = "0.1.2.0";
           sha256 = "b501251a446d4fe544617eaa41e2442f283f8843dd57d52820d88a9e2ce04d70";
           libraryHaskellDepends = [
             base binary bytestring containers data-default deepseq
             template-haskell time tzdata vector
           ];
           doHaddock = false;
           doCheck = false;
           preConfigure = "export TZDIR=${pkgs.tzdata}/share/zoneinfo";
           homepage = "https://github.com/nilcons/haskell-tz";
           description = "Efficient time zone handling";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "tzdata" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, stdenv
         , vector
         }:
         mkDerivation {
           pname = "tzdata";
           version = "0.1.20160614.0";
           sha256 = "fb9b13398b66f05d863082f7c811fdd26d77e3a39a254abe8ea337a88a6fa27d";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers deepseq vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nilcons/haskell-tzdata";
           description = "Time zone database (as files and as a module)";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "ua-parser" = callPackage
        ({ mkDerivation, aeson, base, bytestring, data-default, file-embed
         , pcre-light, stdenv, text, yaml
         }:
         mkDerivation {
           pname = "ua-parser";
           version = "0.7.2";
           sha256 = "469afe9d9c7d7de7405b316a388639858b515840f74ba0b4c48985559922df55";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring data-default file-embed pcre-light text yaml
           ];
           doHaddock = false;
           doCheck = false;
           description = "A library for parsing User-Agent strings, official Haskell port of ua-parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uglymemo" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "uglymemo";
           version = "0.1.0.1";
           sha256 = "fe89ef49c0cb15867c58815b050b33f17d394d4c48a9b7240a39780a5a79b847";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "A simple (but internally ugly) memoization function";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "unbound-generics" = callPackage
        ({ mkDerivation, base, containers, contravariant, deepseq, mtl
         , profunctors, stdenv, template-haskell, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "unbound-generics";
           version = "0.3.1";
           sha256 = "1f85672c8edfc8cbea638bcbf1e29d04934d79470177cb59e6dba0f9bb7a6440";
           libraryHaskellDepends = [
             base containers contravariant deepseq mtl profunctors
             template-haskell transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lambdageek/unbound-generics";
           description = "Support for programming with names and binders using GHC Generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unbounded-delays" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "unbounded-delays";
           version = "0.1.0.9";
           sha256 = "4010ca5c4ca800039db259fc7a5180f10fc98f00580c7223ac7ad401ca4190b8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/unbounded-delays";
           description = "Unbounded thread delays and timeouts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uncertain" = callPackage
        ({ mkDerivation, ad, base, base-compat, containers, free
         , mwc-random, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "uncertain";
           version = "0.3.1.0";
           sha256 = "6f67855ed4799e0c3465dfaef062b637efc61fbea40ebc44ced163028a996ff2";
           libraryHaskellDepends = [
             ad base base-compat containers free mwc-random primitive
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/uncertain";
           description = "Manipulating numbers with inherent experimental/measurement uncertainty";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unexceptionalio" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "unexceptionalio";
           version = "0.3.0";
           sha256 = "927e2be6bb9ced73c1c17d79c981cadef4039d9ee45d2d3d6b4c133ff93ff0b8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/singpolyma/unexceptionalio";
           description = "IO without any non-error, synchronous exceptions";
           license = "unknown";
         }) {};
      "unicode-transforms" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "unicode-transforms";
           version = "0.1.0.1";
           sha256 = "5fe607ec91e1cf25db1842e7409d4ed0e1bb6829409e846e010db25b2c75cb0b";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/harendra-kumar/unicode-transforms";
           description = "Unicode transforms (normalization NFC/NFD/NFKC/NFKD)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unification-fd" = callPackage
        ({ mkDerivation, base, containers, logict, mtl, stdenv }:
         mkDerivation {
           pname = "unification-fd";
           version = "0.10.0.1";
           sha256 = "5bf46760e6db104c57f915322b32744f7604323281f5c7dd20185f905fb51996";
           libraryHaskellDepends = [ base containers logict mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Simple generic unification algorithms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "union" = callPackage
        ({ mkDerivation, base, deepseq, profunctors, stdenv, tagged, vinyl
         }:
         mkDerivation {
           pname = "union";
           version = "0.1.1.0";
           sha256 = "d83b04349288fe9b73c254312da9850e1c05717beb7f8db6f7fefed83f1a82e6";
           libraryHaskellDepends = [ base deepseq profunctors tagged vinyl ];
           doHaddock = false;
           doCheck = false;
           description = "Extensible type-safe unions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "union-find" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "union-find";
           version = "0.2";
           sha256 = "e6c2682bb8c06e8c43e360f45658d0eea17209cce84953e2a7d2f0240591f0ec";
           revision = "1";
           editedCabalFile = "13cwjh03n82sgshbk4fdlvhc0pb3v979sdcdrpvnpjdqmvcprs92";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nominolo/union-find";
           description = "Efficient union and equivalence testing of sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uniplate" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv, syb
         , unordered-containers
         }:
         mkDerivation {
           pname = "uniplate";
           version = "1.6.12";
           sha256 = "fcc60bc6b3f6e925f611646db90e6db9f05286a9363405f844df1dc15572a8b7";
           libraryHaskellDepends = [
             base containers hashable syb unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://community.haskell.org/~ndm/uniplate/";
           description = "Help writing simple, concise and fast generic operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe" = callPackage
        ({ mkDerivation, stdenv, universe-instances-base
         , universe-instances-extended, universe-instances-trans
         , universe-reverse-instances
         }:
         mkDerivation {
           pname = "universe";
           version = "1.0";
           sha256 = "1f80e4788d348d53e39a32c8514940418a71c49c5423eb70b94e1786d94ff9a7";
           libraryHaskellDepends = [
             universe-instances-base universe-instances-extended
             universe-instances-trans universe-reverse-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Classes for types where we know all the values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-base" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "universe-base";
           version = "1.0.2.1";
           sha256 = "07c48350afacdc0b5569f72e3d6a27a8ff3c208b7a6f22d00e149a201798bb51";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "A class for finite and recursively enumerable types and some helper functions for enumerating them";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-instances-base" = callPackage
        ({ mkDerivation, base, containers, stdenv, universe-base }:
         mkDerivation {
           pname = "universe-instances-base";
           version = "1.0";
           sha256 = "a21150ee3bb71283522a573bf092c8d96b2e28a95336a95505aa4c2a067dd212";
           revision = "1";
           editedCabalFile = "13s8gxsvkw6phwvd79h9f3xaqbyzsx1svpysbmq72z1hv3mqyz8a";
           libraryHaskellDepends = [ base containers universe-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Universe instances for types from the base package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-instances-extended" = callPackage
        ({ mkDerivation, adjunctions, base, comonad, stdenv
         , universe-instances-base, void
         }:
         mkDerivation {
           pname = "universe-instances-extended";
           version = "1.0.0.1";
           sha256 = "665b272701b16a6bb8d40a5396aa1dcb038f002452ebdc29d353e3be2070c997";
           revision = "2";
           editedCabalFile = "1di3jk3ciikjrxzr76i0mqqza26mclnbxxak7ybkk4l06yqanj38";
           libraryHaskellDepends = [
             adjunctions base comonad universe-instances-base void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Universe instances for types from select extra packages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-instances-trans" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers, universe-base
         , universe-instances-base
         }:
         mkDerivation {
           pname = "universe-instances-trans";
           version = "1.0.0.1";
           sha256 = "0d047cf1eb4af9f2052f44f487e7d2d44c86f51b54a3cc1fc5243ad816e8310e";
           revision = "1";
           editedCabalFile = "0dcwgbgmbkjwzbxlncpl1b5hgjrmkl73djknjkhbnh02pysbwv69";
           libraryHaskellDepends = [
             base mtl transformers universe-base universe-instances-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Universe instances for types from the transformers and mtl packages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-reverse-instances" = callPackage
        ({ mkDerivation, base, containers, stdenv, universe-instances-base
         }:
         mkDerivation {
           pname = "universe-reverse-instances";
           version = "1.0";
           sha256 = "e9d41cbf26eabd77587fddf69493d7ad23028303d1c1d1d2ee1de1bf3d3e8d49";
           revision = "1";
           editedCabalFile = "0rq6h7yghnzrnv56pxnlfr6cfih8dbnhc6hh5416pgy5bxsa0ydj";
           libraryHaskellDepends = [
             base containers universe-instances-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "instances of standard classes that are made possible by enumerations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unix-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "unix-bytestring";
           version = "0.3.7.3";
           sha256 = "a3ec273da411988b7d9eb7317f6d84ce47f4b7fd39bdc721acd5229e7cff808c";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Unix/Posix-specific functions for ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unix-compat" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "unix-compat";
           version = "0.4.3.1";
           sha256 = "72801d5a654a6e108c153f412ebd54c37fb445643770e0b97701a59e109f7e27";
           revision = "2";
           editedCabalFile = "0b5jicn8nm53yxxzwlvfcv4xp5rrqp98x5wwqh234wn9x44z54d2";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jystic/unix-compat";
           description = "Portable POSIX-compatibility layer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unix-time" = callPackage
        ({ mkDerivation, base, binary, bytestring, old-time, stdenv }:
         mkDerivation {
           pname = "unix-time";
           version = "0.3.7";
           sha256 = "1131301131dd3e73353a346daa04578ec067073e7674d447051ac1a87262b4e1";
           libraryHaskellDepends = [ base binary bytestring old-time ];
           doHaddock = false;
           doCheck = false;
           description = "Unix time parser/formatter and utilities";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unordered-containers" = callPackage
        ({ mkDerivation, base, deepseq, hashable, stdenv }:
         mkDerivation {
           pname = "unordered-containers";
           version = "0.2.7.1";
           sha256 = "2f9277f1d61c409775835f094c031fbb5462dd564d639f4f1357ee086fc4d702";
           revision = "1";
           editedCabalFile = "0jxpawpssha9v1s6llxvizl10yywyqbar3gj2z26xwf0i1nyn73s";
           libraryHaskellDepends = [ base deepseq hashable ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/unordered-containers";
           description = "Efficient hashing-based container types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uri-bytestring" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , containers, stdenv
         }:
         mkDerivation {
           pname = "uri-bytestring";
           version = "0.2.2.1";
           sha256 = "9185e8f05d5c5154348c0d57d0df2b92ba6d09153fbdebded995b2f54e71c67e";
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Soostone/uri-bytestring";
           description = "Haskell URI parsing as ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uri-encode" = callPackage
        ({ mkDerivation, base, bytestring, network-uri, stdenv, text
         , utf8-string
         }:
         mkDerivation {
           pname = "uri-encode";
           version = "1.5.0.5";
           sha256 = "e82b588aad63112d34f6bad6f1ef72489b9edebfe14f2f523dc1dabdcbe2b186";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring network-uri text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Unicode aware uri-encoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uri-templater" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, charset, containers, dlist
         , HTTP, mtl, parsers, stdenv, template-haskell, text, trifecta
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "uri-templater";
           version = "0.2.0.0";
           sha256 = "ba1c40d5c4cfc904ec355c0a179b38a4eebb9cd453b2d803df4fbaf37789fe7a";
           revision = "1";
           editedCabalFile = "1vfss1nrl0l8m5fl57vi1cw0s7cgf7aqrqfcbyr0kjl7grfzpwhr";
           libraryHaskellDepends = [
             ansi-wl-pprint base charset containers dlist HTTP mtl parsers
             template-haskell text trifecta unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/sanetracker/uri-templater";
           description = "Parsing & Quasiquoting for RFC 6570 URI Templates";
           license = stdenv.lib.licenses.mit;
         }) {};
      "url" = callPackage
        ({ mkDerivation, base, stdenv, utf8-string }:
         mkDerivation {
           pname = "url";
           version = "2.1.3";
           sha256 = "5af27e3f8c0a27e52d0dcb98ef06a0fdd01efe8bb21242c29432e1bc380a4f61";
           libraryHaskellDepends = [ base utf8-string ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Url";
           description = "A library for working with URLs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "urlpath" = callPackage
        ({ mkDerivation, base, exceptions, mmorph, monad-control
         , monad-logger, mtl, path-extra, resourcet, stdenv, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "urlpath";
           version = "5.0.0.1";
           sha256 = "03ee80654c36609bb82df91278ec081c3bb415b46f9bb54b9d76fc2fbd587ce3";
           libraryHaskellDepends = [
             base exceptions mmorph monad-control monad-logger mtl path-extra
             resourcet transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "Painfully simple URL deployment";
           license = stdenv.lib.licenses.mit;
         }) {};
      "userid" = callPackage
        ({ mkDerivation, aeson, base, boomerang, safecopy, stdenv
         , web-routes, web-routes-th
         }:
         mkDerivation {
           pname = "userid";
           version = "0.1.2.7";
           sha256 = "9d8a614cf760556f40ab79f7f733161defd5240219bcd23399756c0589f2dc8c";
           libraryHaskellDepends = [
             aeson base boomerang safecopy web-routes web-routes-th
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/Happstack/userid";
           description = "The UserId type and useful instances for web development";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "users" = callPackage
        ({ mkDerivation, aeson, base, bcrypt, path-pieces, stdenv, text
         , time
         }:
         mkDerivation {
           pname = "users";
           version = "0.5.0.0";
           sha256 = "6761ac937b0d4c13c5158239a0c51199c394facb72cc734ada90a391f01e53d4";
           revision = "1";
           editedCabalFile = "1x26g7k6kmq2vng9y5qkz82z06rs322s2y8bs9y6r4vayvg07q9v";
           libraryHaskellDepends = [
             aeson base bcrypt path-pieces text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/users";
           description = "A library simplifying user management for web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "users-persistent" = callPackage
        ({ mkDerivation, base, bytestring, esqueleto, mtl, persistent
         , persistent-template, stdenv, text, time, transformers, users
         , uuid
         }:
         mkDerivation {
           pname = "users-persistent";
           version = "0.5.0.2";
           sha256 = "f860936c9eaca82353979c70344576964319d241e3c74caf0a55cd3c9918944c";
           libraryHaskellDepends = [
             base bytestring esqueleto mtl persistent persistent-template text
             time transformers users uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/users";
           description = "A persistent backend for the users package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "users-postgresql-simple" = callPackage
        ({ mkDerivation, base, bytestring, mtl, postgresql-simple, stdenv
         , text, time, users, uuid
         }:
         mkDerivation {
           pname = "users-postgresql-simple";
           version = "0.5.0.2";
           sha256 = "051b5d2c9c6cdeaacb6271a50ee4084cc1473de8d873825dc6d98023e96ec100";
           libraryHaskellDepends = [
             base bytestring mtl postgresql-simple text time users uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/users";
           description = "A PostgreSQL backend for the users package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "users-test" = callPackage
        ({ mkDerivation, base, hspec, stdenv, text, users }:
         mkDerivation {
           pname = "users-test";
           version = "0.5.0.1";
           sha256 = "f68549fa0cc002b16dc55f23a73b1a423aa2e64ab584c4041252a3bb6a5cac3e";
           libraryHaskellDepends = [ base hspec text users ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/users";
           description = "Library to test backends for the users library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "utf8-light" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "utf8-light";
           version = "0.4.2";
           sha256 = "184c428ce7896d702da46f6f107e6873ff100dbc1af40b49b5ce87317e619e67";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           description = "Unicode";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "utf8-string" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "utf8-string";
           version = "1.0.1.1";
           sha256 = "fb0b9e3acbe0605bcd1c63e51f290a7bbbe6628dfa3294ff453e4235fbaef140";
           revision = "3";
           editedCabalFile = "02vhj5gykkqa2dyn7s6gn8is1b5fdn9xcqqvlls268g7cpv6rk38";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/glguy/utf8-string/";
           description = "Support for reading and writing UTF8 Strings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "utility-ht" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "utility-ht";
           version = "0.0.12";
           sha256 = "a4445f436354599c1f3e923dfb3e4463b6f65e7c1dabea1e2d34d11c4a5b05ef";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Various small helper functions for Lists, Maybes, Tuples, Functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uu-interleaved" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "uu-interleaved";
           version = "0.2.0.0";
           sha256 = "3195ec570e94beb3b42d882940d9518bddb66ab6a27895d21a046769d055dae7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators";
           description = "Providing an interleaving combinator for use with applicative/alternative style implementations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "uu-parsinglib" = callPackage
        ({ mkDerivation, base, ListLike, stdenv, time, uu-interleaved }:
         mkDerivation {
           pname = "uu-parsinglib";
           version = "2.9.1.1";
           sha256 = "d25f5ae36641136143c72b1d29f24d093cb07327d14a7518af90801e5d67bb6c";
           libraryHaskellDepends = [ base ListLike time uu-interleaved ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators";
           description = "Fast, online, error-correcting, monadic, applicative, merging, permuting, interleaving, idiomatic parser combinators";
           license = stdenv.lib.licenses.mit;
         }) {};
      "uuid" = callPackage
        ({ mkDerivation, base, binary, bytestring, cryptonite, memory
         , network-info, random, stdenv, text, time, uuid-types
         }:
         mkDerivation {
           pname = "uuid";
           version = "1.3.12";
           sha256 = "ed62f1b3f0b19f0d548655ffef5aff066ad5c430fe11e909a1a7e8fc115a89ee";
           revision = "3";
           editedCabalFile = "08cg3b44sg8fia3kzyqhi30qrqcg4incr9qgsn9x3psvl72s8i2l";
           libraryHaskellDepends = [
             base binary bytestring cryptonite memory network-info random text
             time uuid-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aslatter/uuid";
           description = "For creating, comparing, parsing and printing Universally Unique Identifiers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uuid-orphans" = callPackage
        ({ mkDerivation, base, safecopy, stdenv, text, uuid-types
         , web-routes
         }:
         mkDerivation {
           pname = "uuid-orphans";
           version = "1.3.11.1";
           sha256 = "264028379dc6bfea1d84ebd6c745d666c51957430822b52480dd6413717a8b75";
           libraryHaskellDepends = [
             base safecopy text uuid-types web-routes
           ];
           doHaddock = false;
           doCheck = false;
           description = "Orphan instances for the UUID datatype";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uuid-types" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, hashable
         , random, stdenv, text
         }:
         mkDerivation {
           pname = "uuid-types";
           version = "1.0.3";
           sha256 = "9276517ab24a9b06f39d6e3c33c6c2b4ace1fc2126dbc1cd9806866a6551b3fd";
           revision = "1";
           editedCabalFile = "0iwwj07gp28g357hv76k4h8pvlzamvchnw003cv3qk778pcpx201";
           libraryHaskellDepends = [
             base binary bytestring deepseq hashable random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aslatter/uuid";
           description = "Type definitions for Universally Unique Identifiers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vado" = callPackage
        ({ mkDerivation, attoparsec, base, directory, filepath, process
         , stdenv, text
         }:
         mkDerivation {
           pname = "vado";
           version = "0.0.7";
           sha256 = "fc8609a92ce40a4c52d37a44297b67928bf30562c4b87a2e3885059ecbc6273b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base directory filepath process text
           ];
           executableHaskellDepends = [
             attoparsec base directory filepath process text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hamishmack/vado";
           description = "Runs commands on remote machines using ssh";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validate-input" = callPackage
        ({ mkDerivation, base, bytestring, either, mtl, pcre-heavy
         , semigroups, stdenv, string-conversions, text
         }:
         mkDerivation {
           pname = "validate-input";
           version = "0.4.0.0";
           sha256 = "20fae24b17429df923b835968720b76c581dc2c5037a2df9374b98a3fa41a1f9";
           libraryHaskellDepends = [
             base bytestring either mtl pcre-heavy semigroups string-conversions
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/validate-input";
           description = "Input validation combinator library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validation" = callPackage
        ({ mkDerivation, base, bifunctors, lens, mtl, semigroupoids
         , semigroups, stdenv, transformers
         }:
         mkDerivation {
           pname = "validation";
           version = "0.5.4";
           sha256 = "8b785f5d9e35285b2fbc35039799410bf3a9c7179735c232e573485cb98f74a3";
           libraryHaskellDepends = [
             base bifunctors lens mtl semigroupoids semigroups transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NICTA/validation";
           description = "A data-type like Either but with an accumulating Applicative";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "validity" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "validity";
           version = "0.3.0.4";
           sha256 = "9ae590d34aeb41f096bd7432ff8c8cb07a4da010825c0190d4ef630ef6370f7f";
           revision = "1";
           editedCabalFile = "06cdk8a350sp7ckpp6a5d8x02mzai3rh8fgvj491142f1wvzdgvk";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity typeclass";
           license = stdenv.lib.licenses.mit;
         }) {};
      "vault" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "vault";
           version = "0.3.0.6";
           sha256 = "0b433de60fa3d20e93dce6013293e18089fb3233c34211ffa3f860408866ef48";
           libraryHaskellDepends = [
             base containers hashable unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/HeinrichApfelmus/vault";
           description = "a persistent store for values of arbitrary types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vcsgui" = callPackage
        ({ mkDerivation, base, directory, filepath, gtk3, mtl, process
         , stdenv, text, vcswrapper
         }:
         mkDerivation {
           pname = "vcsgui";
           version = "0.1.3.0";
           sha256 = "0d8997fec3f3a0025045408f8e619abd9568247a08228daa0ff7fa9508e7b06b";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base directory filepath gtk3 mtl process text vcswrapper
           ];
           executableHaskellDepends = [
             base directory filepath gtk3 mtl process text vcswrapper
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/forste/haskellVCSGUI";
           description = "GUI library for source code management systems";
           license = "GPL";
         }) {};
      "vcswrapper" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, hxt, mtl
         , parsec, process, split, stdenv, text
         }:
         mkDerivation {
           pname = "vcswrapper";
           version = "0.1.3";
           sha256 = "99cee523d8a4164fce6a2598aad7c8efa3b70785d0a07441bbf7203e3d383e89";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers directory filepath hxt mtl parsec process split
             text
           ];
           executableHaskellDepends = [
             base containers directory filepath hxt mtl parsec process split
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/forste/haskellVCSWrapper";
           description = "Wrapper for source code management systems";
           license = "GPL";
         }) {};
      "vect" = callPackage
        ({ mkDerivation, base, random, stdenv }:
         mkDerivation {
           pname = "vect";
           version = "0.4.7";
           sha256 = "8d38e4f2face37aaf241639af422fd1a3be569d3aad4f227f3d6759611948980";
           libraryHaskellDepends = [ base random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~bkomuves/";
           description = "A low-dimensional linear algebra library, tailored to computer graphics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, primitive, stdenv }:
         mkDerivation {
           pname = "vector";
           version = "0.11.0.0";
           sha256 = "0a5320ed44c3f2b04b7f61e0f63f4fcd5b337524e601e01d5813ace3f5a432e4";
           revision = "2";
           editedCabalFile = "1kjafhgsyjqlvrpfv2vj17hipyv0zw56a2kbl6khzn5li9szvyib";
           libraryHaskellDepends = [ base deepseq ghc-prim primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/vector";
           description = "Efficient Arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-algorithms" = callPackage
        ({ mkDerivation, base, bytestring, primitive, stdenv, vector }:
         mkDerivation {
           pname = "vector-algorithms";
           version = "0.7.0.1";
           sha256 = "ed460a41ca068f568bc2027579ab14185fbb72c7ac469b5179ae5f8a52719070";
           revision = "2";
           editedCabalFile = "186nxwg02m16v68gi186f0z99cafp4g87flhfccnzlrvshlfb83m";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring primitive vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~dolio/";
           description = "Efficient algorithms for vector arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-binary-instances" = callPackage
        ({ mkDerivation, base, binary, stdenv, vector }:
         mkDerivation {
           pname = "vector-binary-instances";
           version = "0.2.3.3";
           sha256 = "20158b1ab2fb8dd1bad57896fa3f75bb7fbc5354020c5715e997972b6ffb9f5c";
           libraryHaskellDepends = [ base binary vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/vector-binary-instances";
           description = "Instances of Data.Binary and Data.Serialize for vector";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-buffer" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, vector }:
         mkDerivation {
           pname = "vector-buffer";
           version = "0.4.1";
           sha256 = "9b5a9b57488267a765d9e7a8f2aa387ee0d3153989c169952da1e1229a60fd9b";
           libraryHaskellDepends = [ base deepseq vector ];
           doHaddock = false;
           doCheck = false;
           description = "A buffer compatible with Data.Vector.*";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-fftw" = callPackage
        ({ mkDerivation, base, fftw, primitive, stdenv, storable-complex
         , vector
         }:
         mkDerivation {
           pname = "vector-fftw";
           version = "0.1.3.7";
           sha256 = "e3c21826d6bfb45c82a6c5a972b060f33b4feab3c9e6f389251208daaa7f8176";
           libraryHaskellDepends = [ base primitive storable-complex vector ];
           librarySystemDepends = [ fftw ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/vector-fftw";
           description = "A binding to the fftw library for one-dimensional vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) fftw;};
      "vector-instances" = callPackage
        ({ mkDerivation, base, comonad, keys, pointed, semigroupoids
         , semigroups, stdenv, vector
         }:
         mkDerivation {
           pname = "vector-instances";
           version = "3.3.1";
           sha256 = "68c7f154fe4ad53e29433e150c8718b0e74b4cf4c45a79af89940fff83868c59";
           libraryHaskellDepends = [
             base comonad keys pointed semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/vector-instances";
           description = "Orphan Instances for 'Data.Vector'";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-space" = callPackage
        ({ mkDerivation, base, Boolean, MemoTrie, NumInstances, stdenv }:
         mkDerivation {
           pname = "vector-space";
           version = "0.10.4";
           sha256 = "b712cc9fc675b1d9e592f56ed08a9636c87783c11d6ac84b5f18f46cdcbefda2";
           revision = "1";
           editedCabalFile = "106nig4k4li22nyzxjlhc1hhchmwmpj27krhbp378sjkj0as7bbp";
           libraryHaskellDepends = [ base Boolean MemoTrie NumInstances ];
           doHaddock = false;
           doCheck = false;
           description = "Vector & affine spaces, linear maps, and derivatives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-th-unbox" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, vector }:
         mkDerivation {
           pname = "vector-th-unbox";
           version = "0.2.1.6";
           sha256 = "be87d4a6f1005ee2d0de6adf521e05c9e83c441568a8a8b60c79efe24ae90235";
           libraryHaskellDepends = [ base template-haskell vector ];
           doHaddock = false;
           doCheck = false;
           description = "Deriver for Data.Vector.Unboxed using Template Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "versions" = callPackage
        ({ mkDerivation, base, megaparsec, semigroups, stdenv, text }:
         mkDerivation {
           pname = "versions";
           version = "2.0.0";
           sha256 = "d8e18c140295e45e6b4f9c103c0c9d953a3baa769a0a364648074ad91623b7d2";
           libraryHaskellDepends = [ base megaparsec semigroups text ];
           doHaddock = false;
           doCheck = false;
           description = "Types and parsers for software version numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vhd" = callPackage
        ({ mkDerivation, base, byteable, bytestring, cereal, cipher-aes
         , cryptohash, directory, filepath, mmap, random, stdenv
         , storable-endian, text, time
         }:
         mkDerivation {
           pname = "vhd";
           version = "0.2.2";
           sha256 = "7c678f076395f44d853f87a4538635bc83d7a10319933dec9e06b40ce409ea7c";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base byteable bytestring cereal cipher-aes cryptohash directory
             filepath mmap random storable-endian text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-vhd";
           description = "Provides functions to inspect and manipulate virtual hard disk (VHD) files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vinyl" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "vinyl";
           version = "0.5.3";
           sha256 = "00f86a43def432c564226daae42b130a67c5fb413f3b097f43a14fbfb57608a6";
           revision = "1";
           editedCabalFile = "1x7qchds2l669jhzvk34qils6i4m80icblg5mlaxhyr9p2m4k5zl";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           description = "Extensible Records";
           license = stdenv.lib.licenses.mit;
         }) {};
      "vinyl-utils" = callPackage
        ({ mkDerivation, base, contravariant, stdenv, transformers, vinyl
         }:
         mkDerivation {
           pname = "vinyl-utils";
           version = "0.3.0.0";
           sha256 = "e6d7668cd91d5ef14b54396561c10930654dae9398cedefc1fb6faab00c4143f";
           libraryHaskellDepends = [ base contravariant transformers vinyl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/marcinmrotek/vinyl-utils";
           description = "Utilities for vinyl";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vivid" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, filepath
         , hashable, MonadRandom, mtl, network, process, random
         , random-shuffle, split, stdenv, stm, time, transformers
         }:
         mkDerivation {
           pname = "vivid";
           version = "0.2.0.5";
           sha256 = "fd56271270f68f4c60f4e7ac03a5a540288fb0b80739b094e2a8f5e737dab373";
           libraryHaskellDepends = [
             base binary bytestring containers filepath hashable MonadRandom mtl
             network process random random-shuffle split stm time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://vivid-synth.com";
           description = "Sound synthesis with SuperCollider";
           license = "GPL";
         }) {};
      "void" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, hashable, semigroups
         , stdenv
         }:
         mkDerivation {
           pname = "void";
           version = "0.7.1";
           sha256 = "c9f0fd93680c029abb9654b5464be260652829961b18b7046f96a0df95e825f4";
           libraryHaskellDepends = [
             base deepseq ghc-prim hashable semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/void";
           description = "A Haskell 98 logically uninhabited data type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vty" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , data-default, deepseq, directory, filepath, hashable, microlens
         , microlens-mtl, microlens-th, mtl, parallel, parsec, stdenv, stm
         , terminfo, text, transformers, unix, utf8-string, vector
         }:
         mkDerivation {
           pname = "vty";
           version = "5.5.0";
           sha256 = "9e185e42aff3385767b2f025765d896d8f503719f08cc6484f1c12b795eca41d";
           revision = "1";
           editedCabalFile = "041mgqpvkkyq4adzqxbf0fksngaddrpbdadlm3hw8kkwzrsnmjpg";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base blaze-builder bytestring containers data-default deepseq
             directory filepath hashable microlens microlens-mtl microlens-th
             mtl parallel parsec stm terminfo text transformers unix utf8-string
             vector
           ];
           executableHaskellDepends = [
             base containers data-default microlens microlens-mtl mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/coreyoconnor/vty";
           description = "A simple terminal UI library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring
         , bytestring-builder, http-types, network, stdenv, text
         , transformers, vault
         }:
         mkDerivation {
           pname = "wai";
           version = "3.2.1.1";
           sha256 = "5d80a68f5d8806682d8267b7dacc383d094e3ef7ecd705f20e42c91cad564e21";
           libraryHaskellDepends = [
             base blaze-builder bytestring bytestring-builder http-types network
             text transformers vault
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "Web Application Interface";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-app-static" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-html, blaze-markup
         , bytestring, containers, cryptonite, directory, file-embed
         , filepath, http-date, http-types, memory, mime-types, old-locale
         , optparse-applicative, stdenv, template-haskell, text, time
         , transformers, unix-compat, unordered-containers, wai, wai-extra
         , warp, zlib
         }:
         mkDerivation {
           pname = "wai-app-static";
           version = "3.1.6.1";
           sha256 = "b318acf31e2e809411f119744a016ba0a78f52554ac7321a3a1410a218886668";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-builder blaze-html blaze-markup bytestring containers
             cryptonite directory file-embed filepath http-date http-types
             memory mime-types old-locale optparse-applicative template-haskell
             text time transformers unix-compat unordered-containers wai
             wai-extra warp zlib
           ];
           executableHaskellDepends = [
             base bytestring containers directory mime-types text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/web-application-interface";
           description = "WAI application for static serving";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-conduit" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, conduit
         , http-types, stdenv, transformers, wai
         }:
         mkDerivation {
           pname = "wai-conduit";
           version = "3.0.0.3";
           sha256 = "e49720a7c7b58e78a56991e42fa550a722936af274dc27755a735781258f7aff";
           libraryHaskellDepends = [
             base blaze-builder bytestring conduit http-types transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "conduit wrappers for WAI";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-cors" = callPackage
        ({ mkDerivation, attoparsec, base, base-unicode-symbols, bytestring
         , case-insensitive, http-types, mtl, stdenv, transformers, wai
         }:
         mkDerivation {
           pname = "wai-cors";
           version = "0.2.5";
           sha256 = "25089b8a043e0eb042ef63070ddd7ecc4d961c74526c9c00b292eda4b92d766e";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base base-unicode-symbols bytestring case-insensitive
             http-types mtl transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/larskuhtz/wai-cors";
           description = "CORS for WAI";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-eventsource" = callPackage
        ({ mkDerivation, stdenv, wai }:
         mkDerivation {
           pname = "wai-eventsource";
           version = "3.0.0";
           sha256 = "785005f23bf9bf4e1dfaae0705472c0e3ea4c3843ff6a8625db8d1e327a6bfc0";
           libraryHaskellDepends = [ wai ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/web-application-interface";
           description = "WAI support for server-sent events (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-extra" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, base, base64-bytestring
         , blaze-builder, bytestring, case-insensitive, containers, cookie
         , data-default-class, deepseq, directory, fast-logger, http-types
         , iproute, lifted-base, network, old-locale, resourcet, stdenv
         , streaming-commons, stringsearch, text, time, transformers, unix
         , unix-compat, vault, void, wai, wai-logger, word8, zlib
         }:
         mkDerivation {
           pname = "wai-extra";
           version = "3.0.19";
           sha256 = "8002890c4aa4fc564a142982bc37f29c35caa76231697eb51c519a698482e3bf";
           libraryHaskellDepends = [
             aeson ansi-terminal base base64-bytestring blaze-builder bytestring
             case-insensitive containers cookie data-default-class deepseq
             directory fast-logger http-types iproute lifted-base network
             old-locale resourcet streaming-commons stringsearch text time
             transformers unix unix-compat vault void wai wai-logger word8 zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "Provides some basic WAI handlers and middleware";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-handler-launch" = callPackage
        ({ mkDerivation, async, base, blaze-builder, bytestring, http-types
         , process, stdenv, streaming-commons, transformers, wai, warp
         }:
         mkDerivation {
           pname = "wai-handler-launch";
           version = "3.0.2.1";
           sha256 = "84a466837e6df61be9ae03f8c0241bee374a0493f24f4bdc2a1e5f38ab705864";
           libraryHaskellDepends = [
             async base blaze-builder bytestring http-types process
             streaming-commons transformers wai warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "Launch a web app in the default browser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-logger" = callPackage
        ({ mkDerivation, base, blaze-builder, byteorder, bytestring
         , case-insensitive, fast-logger, http-types, network, stdenv, unix
         , unix-time, wai
         }:
         mkDerivation {
           pname = "wai-logger";
           version = "2.2.7";
           sha256 = "f4718c7661373b6a93fb7ac4b4662617f9e161f6b9297d0f665f71391e489607";
           libraryHaskellDepends = [
             base blaze-builder byteorder bytestring case-insensitive
             fast-logger http-types network unix unix-time wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "A logging system for WAI";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-caching" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, http-types
         , stdenv, wai
         }:
         mkDerivation {
           pname = "wai-middleware-caching";
           version = "0.1.0.2";
           sha256 = "15b5fb9c92599d5ecb6a70ba40bad024488f9eca7139abe23b961ba21602d78d";
           libraryHaskellDepends = [
             base blaze-builder bytestring http-types wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching#readme";
           description = "WAI Middleware to cache things";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-caching-lru" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, http-types
         , lrucache, stdenv, text, wai, wai-middleware-caching
         }:
         mkDerivation {
           pname = "wai-middleware-caching-lru";
           version = "0.1.0.0";
           sha256 = "377dc842f5ad77b98e8a817e092c891ccfd0da978fb9f69a380f001a95da28d3";
           libraryHaskellDepends = [
             base blaze-builder bytestring http-types lrucache text wai
             wai-middleware-caching
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-lru#readme";
           description = "Initial project template from stack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-caching-redis" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, hedis, http-types
         , stdenv, text, wai, wai-middleware-caching
         }:
         mkDerivation {
           pname = "wai-middleware-caching-redis";
           version = "0.2.0.0";
           sha256 = "6ff53783db20d8f0ff00514ea2679f7022ca59eb20ffad22628ac17c13bf7c4c";
           libraryHaskellDepends = [
             base blaze-builder bytestring hedis http-types text wai
             wai-middleware-caching
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-redis#readme";
           description = "Cache Wai Middleware using Redis backend";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-consul" = callPackage
        ({ mkDerivation, async, base, base-prelude, bytestring, conduit
         , conduit-extra, consul-haskell, enclosed-exceptions, http-client
         , http-types, monad-control, monad-logger, network, process
         , resourcet, stdenv, text, transformers, void, wai, wai-conduit
         }:
         mkDerivation {
           pname = "wai-middleware-consul";
           version = "0.1.0.2";
           sha256 = "d89d5a5bf0b08cf4fcd300d9e16c351a146119c34a9f31949498a874699c0763";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base base-prelude bytestring conduit conduit-extra
             consul-haskell enclosed-exceptions http-client http-types
             monad-control monad-logger network process resourcet text
             transformers void wai wai-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/wai-middleware-consul";
           description = "Wai Middleware for Consul";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-middleware-content-type" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, blaze-html, bytestring
         , clay, exceptions, hashable, http-media, http-types, lucid, mmorph
         , monad-control, monad-logger, mtl, pandoc, resourcet, shakespeare
         , stdenv, text, transformers, transformers-base
         , unordered-containers, urlpath, wai, wai-transformers
         }:
         mkDerivation {
           pname = "wai-middleware-content-type";
           version = "0.4.0";
           sha256 = "bccf5fb49c39cde628d8e73b4afff934186cba6824a8b04501bb3fbada4229eb";
           libraryHaskellDepends = [
             aeson base blaze-builder blaze-html bytestring clay exceptions
             hashable http-media http-types lucid mmorph monad-control
             monad-logger mtl pandoc resourcet shakespeare text transformers
             transformers-base unordered-containers urlpath wai wai-transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "A simple WAI library for responding with content";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-crowd" = callPackage
        ({ mkDerivation, authenticate, base, base64-bytestring, binary
         , blaze-builder, bytestring, case-insensitive, clientsession
         , containers, cookie, gitrev, http-client, http-client-tls
         , http-reverse-proxy, http-types, optparse-applicative, resourcet
         , stdenv, template-haskell, text, time, transformers, unix-compat
         , vault, wai, wai-app-static, wai-extra, warp
         }:
         mkDerivation {
           pname = "wai-middleware-crowd";
           version = "0.1.4.2";
           sha256 = "1136b61a6ce7729093664b63a4ab70de73e356d34b0c7a8114b639b18626b058";
           revision = "1";
           editedCabalFile = "0qvh92p9s80kmzg5w7rga54kfqbwcrkkv5p03pd92px04j2h5lbm";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             authenticate base base64-bytestring binary blaze-builder bytestring
             case-insensitive clientsession containers cookie http-client
             http-client-tls http-types resourcet text time unix-compat vault
             wai
           ];
           executableHaskellDepends = [
             base bytestring clientsession gitrev http-client http-client-tls
             http-reverse-proxy http-types optparse-applicative template-haskell
             text transformers wai wai-app-static wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "Middleware and utilities for using Atlassian Crowd authentication";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-middleware-metrics" = callPackage
        ({ mkDerivation, base, ekg-core, http-types, stdenv, text, time
         , wai
         }:
         mkDerivation {
           pname = "wai-middleware-metrics";
           version = "0.2.3";
           sha256 = "c9123ca10c2d0d223ce0c39faa7097de2e61ec2b9a24cff042d7248850ea2e2a";
           libraryHaskellDepends = [ base ekg-core http-types text time wai ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Helkafen/wai-middleware-metrics";
           description = "A WAI middleware to collect EKG request metrics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-prometheus" = callPackage
        ({ mkDerivation, base, bytestring, data-default, http-types
         , prometheus-client, stdenv, text, time, wai
         }:
         mkDerivation {
           pname = "wai-middleware-prometheus";
           version = "0.1.0.1";
           sha256 = "6da4cb9dd96912332050dd2abf6f489ef94aa856c409bd6205f706257bbe3037";
           revision = "1";
           editedCabalFile = "0dw043jgnyf480xrlqs3yszpjgy2fp8dc9jmhqnbjmrsw5p625q5";
           libraryHaskellDepends = [
             base bytestring data-default http-types prometheus-client text time
             wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/prometheus-haskell";
           description = "WAI middlware for exposing http://prometheus.io metrics.";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "wai-middleware-static" = callPackage
        ({ mkDerivation, base, bytestring, containers, cryptonite
         , directory, expiring-cache-map, filepath, http-types, memory
         , mime-types, mtl, old-locale, semigroups, stdenv, text, time, wai
         }:
         mkDerivation {
           pname = "wai-middleware-static";
           version = "0.8.1";
           sha256 = "e0b5f13f410f81897759acf43198a08101d2af4c9d506164367c7d1a96d55375";
           revision = "5";
           editedCabalFile = "1lb4whil5x1arjb3503x8j9i3wmf678ii1dx0paqqx7dchs6cfwl";
           libraryHaskellDepends = [
             base bytestring containers cryptonite directory expiring-cache-map
             filepath http-types memory mime-types mtl old-locale semigroups
             text time wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scotty-web/wai-middleware-static";
           description = "WAI middleware that serves requests to static files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-throttle" = callPackage
        ({ mkDerivation, base, containers, hashable, http-types, network
         , stdenv, stm, token-bucket, transformers, wai
         }:
         mkDerivation {
           pname = "wai-middleware-throttle";
           version = "0.2.1.0";
           sha256 = "862ac07bb8c8e21b4f56a6398444e2e6bdf9512a198ae394fa9d023f7cfcf87c";
           libraryHaskellDepends = [
             base containers hashable http-types network stm token-bucket
             transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "WAI Middleware for Request Throttling";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-verbs" = callPackage
        ({ mkDerivation, base, errors, exceptions, hashable, http-types
         , mmorph, monad-logger, mtl, resourcet, stdenv, transformers
         , transformers-base, unordered-containers, wai
         }:
         mkDerivation {
           pname = "wai-middleware-verbs";
           version = "0.2.0";
           sha256 = "5e88a38e8e838be9334b72a4dcec70874fe02c8b128dc7a64e682cacfb6ffbf3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base errors exceptions hashable http-types mmorph monad-logger mtl
             resourcet transformers transformers-base unordered-containers wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "Route different middleware responses based on the incoming HTTP verb";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-predicates" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring
         , bytestring-conversion, case-insensitive, cookie, http-types
         , singletons, stdenv, transformers, vault, vector, wai
         }:
         mkDerivation {
           pname = "wai-predicates";
           version = "0.8.6";
           sha256 = "7aba73c37a27975b37077b6f06d6c34488750ff022210e29a0966c68fafde918";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-conversion case-insensitive
             cookie http-types singletons transformers vault vector wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/wai-predicates/";
           description = "WAI request predicates";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "wai-route" = callPackage
        ({ mkDerivation, base, bytestring, http-types, stdenv
         , unordered-containers, wai
         }:
         mkDerivation {
           pname = "wai-route";
           version = "0.3.1.1";
           sha256 = "43fe7d52f5a3c388f67a309b1642353d59dc3cb33b30ca550ce4649da59c2c0f";
           libraryHaskellDepends = [
             base bytestring http-types unordered-containers wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "Minimalistic, efficient routing for WAI";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "wai-routes" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring
         , case-insensitive, containers, cookie, data-default-class
         , filepath, http-types, mime-types, monad-loops, mtl, path-pieces
         , random, stdenv, template-haskell, text, vault, wai
         , wai-app-static, wai-extra
         }:
         mkDerivation {
           pname = "wai-routes";
           version = "0.9.8";
           sha256 = "4152d74a8b0b762b448b112d391e8b760efb7b71444c5b9f58ed714d87331071";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring case-insensitive containers
             cookie data-default-class filepath http-types mime-types
             monad-loops mtl path-pieces random template-haskell text vault wai
             wai-app-static wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://ajnsit.github.io/wai-routes/";
           description = "Typesafe URLs for Wai applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-routing" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring
         , bytestring-conversion, case-insensitive, cookie, http-types
         , stdenv, transformers, wai, wai-predicates, wai-route
         }:
         mkDerivation {
           pname = "wai-routing";
           version = "0.12.3";
           sha256 = "9ce8d30b45ac65162589236b33f4ea417f784c70a1cc10b564880819d2620b0b";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-conversion case-insensitive
             cookie http-types transformers wai wai-predicates wai-route
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/wai-routing/";
           description = "Declarative routing for WAI";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "wai-session" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , cookie, http-types, StateVar, stdenv, time, transformers, vault
         , wai
         }:
         mkDerivation {
           pname = "wai-session";
           version = "0.3.2";
           sha256 = "83739ca93cf1db1e5b54dec7e2590dabfcc77a97ac1388f2f2f18840917c8326";
           libraryHaskellDepends = [
             base blaze-builder bytestring containers cookie http-types StateVar
             time transformers vault wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/singpolyma/wai-session";
           description = "Flexible session middleware for WAI";
           license = "unknown";
         }) {};
      "wai-session-postgresql" = callPackage
        ({ mkDerivation, base, bytestring, cereal, cookie, data-default
         , entropy, postgresql-simple, resource-pool, stdenv, text, time
         , transformers, wai, wai-session
         }:
         mkDerivation {
           pname = "wai-session-postgresql";
           version = "0.2.1.0";
           sha256 = "34f6a08e8a26ab1a58ad2e1f707ede69541f5788b7b0454a83dc26ad3afbbe9a";
           libraryHaskellDepends = [
             base bytestring cereal cookie data-default entropy
             postgresql-simple resource-pool text time transformers wai
             wai-session
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hce/postgresql-session#readme";
           description = "PostgreSQL backed Wai session store";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-transformers" = callPackage
        ({ mkDerivation, base, exceptions, stdenv, transformers, wai
         , wai-websockets, websockets
         }:
         mkDerivation {
           pname = "wai-transformers";
           version = "0.0.7";
           sha256 = "1a1801a2048eb84808a09e44cb899d6cc689948619eeeea005e312ea5a2fe32c";
           libraryHaskellDepends = [
             base exceptions transformers wai wai-websockets websockets
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple parameterization of Wai's Application type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-util" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
         , http-accept, http-types, network-uri, stdenv, text, transformers
         , wai, wai-extra
         }:
         mkDerivation {
           pname = "wai-util";
           version = "0.8";
           sha256 = "55621ef43cd729287947b6e2ee3c5d172b6b050b09511a46afd8ec7e34cc3383";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring conduit http-accept http-types
             network-uri text transformers wai wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/singpolyma/wai-util";
           description = "Collection of utility functions for use with WAI";
           license = "unknown";
         }) {};
      "wai-websockets" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, case-insensitive
         , file-embed, http-types, network, stdenv, text, transformers, wai
         , wai-app-static, warp, websockets
         }:
         mkDerivation {
           pname = "wai-websockets";
           version = "3.0.1.1";
           sha256 = "6abeafea574d9e8f4d41de091afec4594489877aa8717f97e91af5543fd38a31";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-builder bytestring case-insensitive http-types network
             transformers wai websockets
           ];
           executableHaskellDepends = [
             base blaze-builder bytestring case-insensitive file-embed
             http-types network text transformers wai wai-app-static warp
             websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "Provide a bridge between WAI and the websockets package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "waitra" = callPackage
        ({ mkDerivation, aeson, base, bytestring, directory, filepath
         , http-types, regex-applicative, stdenv, template-haskell, text
         , wai
         }:
         mkDerivation {
           pname = "waitra";
           version = "0.0.4.0";
           sha256 = "5610c69eb377e2714c3e502cf47fff7e116e356890aefb1f4144d3e6c1b16c12";
           revision = "2";
           editedCabalFile = "13xxz3dvmdnhzb61zr5y3q1g818mbjq36clrqc1v73imw17rsbvv";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring directory filepath http-types
             regex-applicative template-haskell text wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/futurice/waitra";
           description = "A very simple Wai router";
           license = stdenv.lib.licenses.mit;
         }) {};
      "warp" = callPackage
        ({ mkDerivation, array, async, auto-update, base, blaze-builder
         , bytestring, bytestring-builder, case-insensitive, containers
         , ghc-prim, hashable, http-date, http-types, http2, iproute
         , network, simple-sendfile, stdenv, stm, streaming-commons, text
         , unix, unix-compat, vault, wai, word8
         }:
         mkDerivation {
           pname = "warp";
           version = "3.2.9";
           sha256 = "e2789a51b302dde7ab4145b5a0be745e1bdaae108761f9664718fbccbd55ebca";
           revision = "1";
           editedCabalFile = "1gqivv5bp7ggkf2ync1k8mlqarbx48dr8qlan2nhlrxzi0gbhlm3";
           libraryHaskellDepends = [
             array async auto-update base blaze-builder bytestring
             bytestring-builder case-insensitive containers ghc-prim hashable
             http-date http-types http2 iproute network simple-sendfile stm
             streaming-commons text unix unix-compat vault wai word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "A fast, light-weight web server for WAI applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "warp-tls" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, data-default-class
         , network, stdenv, streaming-commons, tls, wai, warp
         }:
         mkDerivation {
           pname = "warp-tls";
           version = "3.2.2";
           sha256 = "9fc2a031ed5fd17c63479743869ed03fdf80f707a9ecfe4ff02939f4f7df091b";
           libraryHaskellDepends = [
             base bytestring cryptonite data-default-class network
             streaming-commons tls wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "HTTP over TLS support for Warp via the TLS package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wavefront" = callPackage
        ({ mkDerivation, attoparsec, base, dlist, filepath, mtl, stdenv
         , text, transformers, vector
         }:
         mkDerivation {
           pname = "wavefront";
           version = "0.7.0.2";
           sha256 = "3ec8338855efbdc430f3c7f5449c9e5308d7c854dea8a51ae192b983681eae26";
           libraryHaskellDepends = [
             attoparsec base dlist filepath mtl text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/wavefront";
           description = "Wavefront OBJ loader";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-fpco" = callPackage
        ({ mkDerivation, base, happstack-server, safe, snap, snap-core
         , snap-server, stdenv
         }:
         mkDerivation {
           pname = "web-fpco";
           version = "0.1.1.0";
           sha256 = "f618e3e8647cf96e8860e81aa43824a0c7fa7bc78ceba46169dc4bafc3ab3fc6";
           libraryHaskellDepends = [
             base happstack-server safe snap snap-core snap-server
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/web-fpco";
           description = "Wrappers for web frameworks to ease usage with the FP Complete environment";
           license = stdenv.lib.licenses.mit;
         }) {};
      "web-plugins" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, stm, text }:
         mkDerivation {
           pname = "web-plugins";
           version = "0.2.9";
           sha256 = "e63bfd7f666b40c7ff962a070c64dc5bef4a5c490af745fa7ee8f964284a7a50";
           libraryHaskellDepends = [ base containers mtl stm text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/clckwrks/web-plugins";
           description = "dynamic plugin system for web applications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, exceptions
         , ghc-prim, http-types, mtl, parsec, split, stdenv, text
         , utf8-string
         }:
         mkDerivation {
           pname = "web-routes";
           version = "0.27.11";
           sha256 = "45624d4d8a912809603d72a36bf738a027ebec71ce0104928f144abb16de8cd8";
           revision = "1";
           editedCabalFile = "1kq9x2s1z2l9ldsbmzl29b4xbpv1w3ls98ca76d8d4dnwg5va14a";
           libraryHaskellDepends = [
             base blaze-builder bytestring exceptions ghc-prim http-types mtl
             parsec split text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/docs/crashcourse/index.html#web-routes";
           description = "portable, type-safe URL routing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-boomerang" = callPackage
        ({ mkDerivation, base, boomerang, mtl, parsec, stdenv, text
         , web-routes
         }:
         mkDerivation {
           pname = "web-routes-boomerang";
           version = "0.28.4.2";
           sha256 = "7ea892cd6e8c25e4adabf999d2332248a7b458662479a28a812bafd8dd2b7827";
           libraryHaskellDepends = [
             base boomerang mtl parsec text web-routes
           ];
           doHaddock = false;
           doCheck = false;
           description = "Use boomerang for type-safe URL parsers/printers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-happstack" = callPackage
        ({ mkDerivation, base, bytestring, happstack-server, stdenv, text
         , web-routes
         }:
         mkDerivation {
           pname = "web-routes-happstack";
           version = "0.23.10";
           sha256 = "a7bbf337cea91b3dbf41d1785a4edef238a1e7d78e64dd153b90e36df35afbed";
           libraryHaskellDepends = [
             base bytestring happstack-server text web-routes
           ];
           doHaddock = false;
           doCheck = false;
           description = "Adds support for using web-routes with Happstack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-hsp" = callPackage
        ({ mkDerivation, base, hsp, stdenv, text, web-routes }:
         mkDerivation {
           pname = "web-routes-hsp";
           version = "0.24.6.1";
           sha256 = "ca7cf5bf026c52fee5b6af3ca173c7341cd991dcd38508d07589cc7ea8102cab";
           libraryHaskellDepends = [ base hsp text web-routes ];
           doHaddock = false;
           doCheck = false;
           description = "Adds XMLGenerator instance for RouteT monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-th" = callPackage
        ({ mkDerivation, base, parsec, split, stdenv, template-haskell
         , text, web-routes
         }:
         mkDerivation {
           pname = "web-routes-th";
           version = "0.22.6";
           sha256 = "e67472973238f1a6ed31c909e1021311da00a47f9d1c4dd0279bd1fca43eb9fb";
           libraryHaskellDepends = [
             base parsec split template-haskell text web-routes
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/happstack/web-routes-th";
           description = "Support for deriving PathInfo using Template Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-wai" = callPackage
        ({ mkDerivation, base, bytestring, http-types, stdenv, text, wai
         , web-routes
         }:
         mkDerivation {
           pname = "web-routes-wai";
           version = "0.24.3";
           sha256 = "0737b8f1b0324b2c5aa5f90ee14263a391fc62e2d61ca3d5be4f944d67a30f1c";
           libraryHaskellDepends = [
             base bytestring http-types text wai web-routes
           ];
           doHaddock = false;
           doCheck = false;
           description = "Library for maintaining correctness of URLs within an application";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routing" = callPackage
        ({ mkDerivation, base, bytestring, primitive, stdenv, text
         , types-compat, unordered-containers
         }:
         mkDerivation {
           pname = "web-routing";
           version = "0.6.2";
           sha256 = "ee20a428110d631f4a0c3607e3e83aaca70cd42a5fc44ba643290d7cedabf1f4";
           revision = "2";
           editedCabalFile = "1kdhj3waa07br9lsw2bl4yvcq04qax5g38279hjccs8h4j3x3d1x";
           libraryHaskellDepends = [
             base bytestring primitive text types-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/web-routing";
           description = "simple routing library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "webdriver" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , bytestring, data-default-class, directory, directory-tree
         , exceptions, filepath, http-client, http-types, lifted-base
         , monad-control, network, network-uri, scientific, stdenv
         , temporary, text, time, transformers, transformers-base
         , unordered-containers, vector, zip-archive
         }:
         mkDerivation {
           pname = "webdriver";
           version = "0.8.4";
           sha256 = "347f2935e7b9498d1a0391f929b347e295fa8b19a3ea0ac7b81802fda4164f23";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring bytestring
             data-default-class directory directory-tree exceptions filepath
             http-client http-types lifted-base monad-control network
             network-uri scientific temporary text time transformers
             transformers-base unordered-containers vector zip-archive
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kallisti-dev/hs-webdriver";
           description = "a Haskell client for the Selenium WebDriver protocol";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "webdriver-angular" = callPackage
        ({ mkDerivation, aeson, base, language-javascript, stdenv
         , template-haskell, text, transformers, unordered-containers
         , webdriver
         }:
         mkDerivation {
           pname = "webdriver-angular";
           version = "0.1.10";
           sha256 = "93e341b71b93ecd09a9bdfeae6b5debb4b92832e647ed041f435a6ef0bc34c5b";
           libraryHaskellDepends = [
             aeson base language-javascript template-haskell text transformers
             unordered-containers webdriver
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
           description = "Webdriver actions to assist with testing a webpage which uses Angular.Js";
           license = stdenv.lib.licenses.mit;
         }) {};
      "webkitgtk3" = callPackage
        ({ mkDerivation, base, bytestring, cairo, glib, gtk2hs-buildtools
         , gtk3, mtl, pango, stdenv, text, transformers, webkitgtk24x-gtk3
         }:
         mkDerivation {
           pname = "webkitgtk3";
           version = "0.14.1.1";
           sha256 = "a8edd6470fe9a6c82f98bc331d23f6c6fb6978b6d63f03f010e0c7e1000eb216";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cairo glib gtk3 mtl pango text transformers
           ];
           libraryPkgconfigDepends = [ webkitgtk24x-gtk3 ];
           libraryToolDepends = [ gtk2hs-buildtools ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Binding to the Webkit library";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) webkitgtk24x-gtk3;};
      "webkitgtk3-javascriptcore" = callPackage
        ({ mkDerivation, base, glib, gtk2hs-buildtools, gtk3, stdenv
         , webkitgtk24x-gtk3, webkitgtk3
         }:
         mkDerivation {
           pname = "webkitgtk3-javascriptcore";
           version = "0.13.1.2";
           sha256 = "974924ce394670a7b60126f78eaad2d9a023acab3dfc2472202f07998a95e1bd";
           libraryHaskellDepends = [ base glib gtk3 webkitgtk3 ];
           libraryPkgconfigDepends = [ webkitgtk24x-gtk3 ];
           libraryToolDepends = [ gtk2hs-buildtools ];
           doHaddock = false;
           doCheck = false;
           description = "JavaScriptCore FFI from webkitgtk";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) webkitgtk24x-gtk3;};
      "webpage" = callPackage
        ({ mkDerivation, base, blaze-html, data-default, lucid, stdenv
         , text
         }:
         mkDerivation {
           pname = "webpage";
           version = "0.0.4";
           sha256 = "17fba395357bf4d1462d1a50e2a06d1004d0df02cab524dc26e982a90f70c648";
           libraryHaskellDepends = [
             base blaze-html data-default lucid text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Organized and simple web page scaffold for blaze and lucid";
           license = stdenv.lib.licenses.mit;
         }) {};
      "websockets" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, binary
         , blaze-builder, bytestring, case-insensitive, containers, entropy
         , network, random, SHA, stdenv, text
         }:
         mkDerivation {
           pname = "websockets";
           version = "0.9.8.2";
           sha256 = "09ec17dfbf9f07da27575ce7853b0c80d87ad959c2b271f27be4c4e54615eca2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base base64-bytestring binary blaze-builder bytestring
             case-insensitive containers entropy network random SHA text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jaspervdj.be/websockets";
           description = "A sensible and clean way to write WebSocket-capable servers in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "websockets-snap" = callPackage
        ({ mkDerivation, base, bytestring, enumerator, mtl, snap-core
         , snap-server, stdenv, websockets
         }:
         mkDerivation {
           pname = "websockets-snap";
           version = "0.9.2.0";
           sha256 = "b7c30525c8a3ba5aeaadccaf47efc23ac52885e520012df6fc813fbf1bf35f0f";
           libraryHaskellDepends = [
             base bytestring enumerator mtl snap-core snap-server websockets
           ];
           doHaddock = false;
           doCheck = false;
           description = "Snap integration for the websockets library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "weigh" = callPackage
        ({ mkDerivation, base, deepseq, mtl, process, split, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "weigh";
           version = "0.0.3";
           sha256 = "396853c0e8347c7c13ec013259dc2a2c91663aa3f3e7f8bc9fa588f41d0af86a";
           libraryHaskellDepends = [
             base deepseq mtl process split template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/weigh#readme";
           description = "Measure allocations of a Haskell functions/values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "werewolf" = callPackage
        ({ mkDerivation, aeson, base, containers, directory, extra
         , filepath, lens, MonadRandom, mtl, optparse-applicative
         , random-shuffle, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "werewolf";
           version = "1.0.2.2";
           sha256 = "ef55f17c0d3a49f1135e9691d1cf29dbd0b538c4ef941b20f2f7ca7fd407fa81";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base containers directory extra filepath lens MonadRandom mtl
             text transformers
           ];
           executableHaskellDepends = [
             aeson base directory extra filepath lens MonadRandom mtl
             optparse-applicative random-shuffle text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hjwylde/werewolf";
           description = "A game engine for playing werewolf within an arbitrary chat client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "werewolf-slack" = callPackage
        ({ mkDerivation, aeson, base, bytestring, extra, http-client
         , http-client-tls, http-types, mtl, optparse-applicative, process
         , stdenv, text, wai, warp, werewolf
         }:
         mkDerivation {
           pname = "werewolf-slack";
           version = "1.0.2.0";
           sha256 = "94d0194666dfe540bb38cef0204547e62c80b54686a49b1d5f48d1b1d431a495";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson base bytestring extra http-client http-client-tls http-types
             mtl optparse-applicative process text wai warp werewolf
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hjwylde/werewolf-slack";
           description = "A chat interface for playing werewolf in Slack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "with-location" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "with-location";
           version = "0.1.0";
           sha256 = "2c91d70cb28d39d6d5fbb37800c7d984aed4254cdcbf03ffa0787404bddefde7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/with-location#readme";
           description = "Use ImplicitParams-based source locations in a backward compatible way";
           license = stdenv.lib.licenses.mit;
         }) {};
      "withdependencies" = callPackage
        ({ mkDerivation, base, conduit, containers, mtl, profunctors
         , stdenv
         }:
         mkDerivation {
           pname = "withdependencies";
           version = "0.2.4";
           sha256 = "a13eddc8fce5061204abf7289bed49bceb5b86a7981ba6a1b3fe510727fe267f";
           libraryHaskellDepends = [
             base conduit containers mtl profunctors
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bartavelle/withdependencies";
           description = "Run computations that depend on one or more elements in a stream";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "witherable" = callPackage
        ({ mkDerivation, base, base-orphans, containers, hashable, stdenv
         , transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "witherable";
           version = "0.1.3.3";
           sha256 = "6fdfd607e71b442d17b48ab7e00fe3d8dda2c39cf041134d01d49da83421cf6c";
           libraryHaskellDepends = [
             base base-orphans containers hashable transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/witherable";
           description = "Generalization of filter and catMaybes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wizards" = callPackage
        ({ mkDerivation, base, containers, control-monad-free, haskeline
         , mtl, stdenv, transformers
         }:
         mkDerivation {
           pname = "wizards";
           version = "1.0.2";
           sha256 = "4ba12c726d60688b8173db3891aa1dce7f57c6364c40ba2f1c2c8d16404bd30b";
           revision = "1";
           editedCabalFile = "15vwynd5v6xm92dxkxf125grd8sv599n5bnj92qqmhlc89psxhxk";
           libraryHaskellDepends = [
             base containers control-monad-free haskeline mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "High level, generic library for interrogative user interfaces";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wl-pprint" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "wl-pprint";
           version = "1.2";
           sha256 = "198003fa7edd3a2d625ec54402cdc5645434b60ad5983e93525f58fec9dcdf98";
           revision = "1";
           editedCabalFile = "04w1mm6c0k39x3aglrz5rgqjxszxb6jld0s7qrl4zhndl92nzi5c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "The Wadler/Leijen Pretty Printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wl-pprint-extras" = callPackage
        ({ mkDerivation, base, containers, nats, semigroupoids, semigroups
         , stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "wl-pprint-extras";
           version = "3.5.0.5";
           sha256 = "a9c21a85a729191fc422938a1f785d61be52f3a2923d8d79dade9b21e8e98d8f";
           libraryHaskellDepends = [
             base containers nats semigroupoids semigroups text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/wl-pprint-extras/";
           description = "A free monad based on the Wadler/Leijen pretty printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wl-pprint-terminfo" = callPackage
        ({ mkDerivation, base, bytestring, containers, nats, semigroups
         , stdenv, terminfo, text, transformers, wl-pprint-extras
         }:
         mkDerivation {
           pname = "wl-pprint-terminfo";
           version = "3.7.1.4";
           sha256 = "3cdaba571fc3f8c51e39d14773b23f0f8237bb2d33dbaf9230a98d4b2f388d20";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers nats semigroups terminfo text
             transformers wl-pprint-extras
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/wl-pprint-terminfo/";
           description = "A color pretty printer with terminfo support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wl-pprint-text" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "wl-pprint-text";
           version = "1.1.0.4";
           sha256 = "ff2d53814b7c66624a2ef3d8f79034273de5b7addb29c1ebad277057e3fff1f5";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           description = "A Wadler/Leijen Pretty Printer for Text values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "word-trie" = callPackage
        ({ mkDerivation, base, binary, containers, stdenv }:
         mkDerivation {
           pname = "word-trie";
           version = "0.3.0";
           sha256 = "a3f3c2c088c64219ae35f7383a5dc1a368217183ba603e98785c110ac3f29282";
           revision = "1";
           editedCabalFile = "01aanzslm69z94lqy43hgyxj1ys7sqfqwn72l0snw3h2n3pjwn45";
           libraryHaskellDepends = [ base binary containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/word-trie";
           description = "Implementation of a finite trie over words";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "word8" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "word8";
           version = "0.1.2";
           sha256 = "3cbae3755a078ecff46524b3f6e0018f7e796e6dac9c710fe09b433c544676dd";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Word8 library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wordpass" = callPackage
        ({ mkDerivation, base, containers, deepseq, directory, filepath
         , hflags, random-fu, random-source, stdenv, text, unix-compat
         , vector
         }:
         mkDerivation {
           pname = "wordpass";
           version = "1.0.0.7";
           sha256 = "2283d16807261457c54022ca028e3c3a7fec1df6b66b9074ddbf0f14e721d9d8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers deepseq directory filepath random-fu random-source
             text unix-compat vector
           ];
           executableHaskellDepends = [
             base containers deepseq directory filepath hflags random-fu
             random-source text unix-compat vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mgajda/wordpass";
           description = "Dictionary-based password generator";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wrap" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "wrap";
           version = "0.0.0";
           sha256 = "f8bbc4b417b2291532784d0c7940c0f1a24d054e6012963f7d727ad13977f50e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Wrap a function's return value with another function";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wreq" = callPackage
        ({ mkDerivation, aeson, attoparsec, authenticate-oauth, base
         , base16-bytestring, byteable, bytestring, case-insensitive
         , containers, cryptohash, exceptions, ghc-prim, hashable
         , http-client, http-client-tls, http-types, lens, lens-aeson
         , mime-types, psqueues, stdenv, template-haskell, text, time
         , time-locale-compat, unordered-containers
         }:
         mkDerivation {
           pname = "wreq";
           version = "0.4.1.0";
           sha256 = "3b8409e2fb7670d7060fdaa780008eeecb08e9b65bdab9d9690d8d26e5cb8e6d";
           revision = "1";
           editedCabalFile = "0dpsz8jrak4rzf51qdrx0mffbsqhysdvs63wmrfkpv3d4m1fwpa1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec authenticate-oauth base base16-bytestring byteable
             bytestring case-insensitive containers cryptohash exceptions
             ghc-prim hashable http-client http-client-tls http-types lens
             lens-aeson mime-types psqueues template-haskell text time
             time-locale-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.serpentine.com/wreq";
           description = "An easy-to-use HTTP client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wuss" = callPackage
        ({ mkDerivation, base, bytestring, connection, network, stdenv
         , websockets
         }:
         mkDerivation {
           pname = "wuss";
           version = "1.0.4";
           sha256 = "11a0072c4986d6aa60f686cf9fd29b58077706ab27aabad18d01e5942a179155";
           libraryHaskellDepends = [
             base bytestring connection network websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/wuss#readme";
           description = "Secure WebSocket (WSS) clients";
           license = stdenv.lib.licenses.mit;
         }) {};
      "x509" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
         , bytestring, containers, cryptonite, hourglass, memory, mtl, pem
         , stdenv
         }:
         mkDerivation {
           pname = "x509";
           version = "1.6.5";
           sha256 = "b53894214e23ab2795f2a9f4c885e37b35a223bbc03763b0017ce06dc8394783";
           revision = "1";
           editedCabalFile = "1rkwwkglxpr6ckxxwcj1pp8cfd83gxkdyvshdlb26fyhi49gslj3";
           libraryHaskellDepends = [
             asn1-encoding asn1-parse asn1-types base bytestring containers
             cryptonite hourglass memory mtl pem
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "X509 reader and writer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "x509-store" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
         , containers, cryptonite, directory, filepath, mtl, pem, stdenv
         , x509
         }:
         mkDerivation {
           pname = "x509-store";
           version = "1.6.2";
           sha256 = "49fd261c7e55a45fd357931a6d9f81e22f242e6047304d3e2662e43db94d807b";
           libraryHaskellDepends = [
             asn1-encoding asn1-types base bytestring containers cryptonite
             directory filepath mtl pem x509
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "X.509 collection accessing and storing methods";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "x509-system" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , mtl, pem, process, stdenv, x509, x509-store
         }:
         mkDerivation {
           pname = "x509-system";
           version = "1.6.4";
           sha256 = "d98ef028855ad73a872ed86026f205aba383378bf1e63462c5d3e4733b60ff4c";
           libraryHaskellDepends = [
             base bytestring containers directory filepath mtl pem process x509
             x509-store
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "Handle per-operating-system X.509 accessors and storage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "x509-validation" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, byteable
         , bytestring, containers, cryptonite, data-default-class, hourglass
         , memory, mtl, pem, stdenv, x509, x509-store
         }:
         mkDerivation {
           pname = "x509-validation";
           version = "1.6.5";
           sha256 = "d1f73197677b6d19795fc80e4a1fa93e810d567ee4e3edc74e841b3eb20e1ca4";
           libraryHaskellDepends = [
             asn1-encoding asn1-types base byteable bytestring containers
             cryptonite data-default-class hourglass memory mtl pem x509
             x509-store
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "X.509 Certificate and CRL validation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xdcc" = callPackage
        ({ mkDerivation, ascii-progress, base, bytestring, case-insensitive
         , concurrent-extra, concurrent-output, errors, iproute, irc-ctcp
         , irc-dcc, lifted-base, network, optparse-applicative, path, random
         , simpleirc, stdenv, transformers, unix-compat
         }:
         mkDerivation {
           pname = "xdcc";
           version = "1.0.6";
           sha256 = "2a28d2c3bd13647b605adb845bb2f377c9be502218d979a52f6ed653050fb1b8";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             ascii-progress base bytestring case-insensitive concurrent-extra
             concurrent-output errors iproute irc-ctcp irc-dcc lifted-base
             network optparse-applicative path random simpleirc transformers
             unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/JanGe/xdcc";
           description = "A wget-like utility for retrieving files from XDCC bots on IRC";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xdg-basedir" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "xdg-basedir";
           version = "0.2.2";
           sha256 = "e461c3a5c6007c55ceaea03be3be0ef3a92aa0ea1aea936da0c43671bbfaf42b";
           libraryHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/willdonnelly/xdg-basedir";
           description = "A basic implementation of the XDG Base Directory specification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xenstore" = callPackage
        ({ mkDerivation, base, bytestring, cereal, mtl, network, stdenv }:
         mkDerivation {
           pname = "xenstore";
           version = "0.1.1";
           sha256 = "c2b538c9ce6716f4a1b4c0cb63ed5c6e5ee3e69e80dbb7826ee7f5392f45e874";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring cereal mtl network ];
           doHaddock = false;
           doCheck = false;
           description = "Xenstore client access";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xformat" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "xformat";
           version = "0.1.2.1";
           sha256 = "fdfc9b582ac87175b99bad44200fd6a24fe78f19df8496cb5ef76ee738a85ce0";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/spl/xformat";
           description = "Extensible, type-safe formatting with scanf- and printf-like functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xhtml" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "xhtml";
           version = "3000.2.1";
           sha256 = "33020782170c1c083bc59fc3bfcb72cec2db223e02d1181c07ae23b9fa7fdcd8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/xhtml";
           description = "An XHTML combinator library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xlsior" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-markup, bytestring
         , conduit, conduit-extra, data-default, exceptions, mtl, resourcet
         , scientific, stdenv, text, time, time-locale-compat, vector
         , xml-conduit, xml-types, zip-archive
         }:
         mkDerivation {
           pname = "xlsior";
           version = "0.1.0.1";
           sha256 = "f34d6bf6c5d35f9be46c9a1ea974befdb4f193a966c35052603b6bc1661b6b36";
           libraryHaskellDepends = [
             attoparsec base blaze-markup bytestring conduit conduit-extra
             data-default exceptions mtl resourcet scientific text time
             time-locale-compat vector xml-conduit xml-types zip-archive
           ];
           doHaddock = false;
           doCheck = false;
           description = "Streaming Excel file generation and parsing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xlsx" = callPackage
        ({ mkDerivation, base, base64-bytestring, binary-search, bytestring
         , conduit, containers, data-default, errors, extra, filepath, lens
         , mtl, mtl-compat, network-uri, old-locale, safe, stdenv, text
         , time, transformers, vector, xml-conduit, zip-archive, zlib
         }:
         mkDerivation {
           pname = "xlsx";
           version = "0.2.4";
           sha256 = "e0b424417fb04d885b78eccde94d10bd28be59184b0bbbedf321fc15a2f23d40";
           libraryHaskellDepends = [
             base base64-bytestring binary-search bytestring conduit containers
             data-default errors extra filepath lens mtl mtl-compat network-uri
             old-locale safe text time transformers vector xml-conduit
             zip-archive zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qrilka/xlsx";
           description = "Simple and incomplete Excel file parser/writer";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xlsx-tabular" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, data-default
         , lens, stdenv, text, xlsx
         }:
         mkDerivation {
           pname = "xlsx-tabular";
           version = "0.1.0.1";
           sha256 = "29efb942a99bd0afe4ffda1856a51354b9ffa44253574b307f51bb2f05cf539a";
           libraryHaskellDepends = [
             aeson base bytestring containers data-default lens text xlsx
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/kkazuo/xlsx-tabular#readme";
           description = "Xlsx table decode utility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "xml";
           version = "1.3.14";
           sha256 = "32d1a1a9f21a59176d84697f96ae3a13a0198420e3e4f1c48abbab7d2425013d";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.galois.com";
           description = "A simple XML library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-conduit" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, blaze-html
         , blaze-markup, bytestring, conduit, conduit-extra, containers
         , data-default, deepseq, monad-control, resourcet, stdenv, text
         , transformers, xml-types
         }:
         mkDerivation {
           pname = "xml-conduit";
           version = "1.3.5";
           sha256 = "25635a066b6a17a0d6c038ddf974a48b6d455d8fa14989f99341703da344dc83";
           revision = "2";
           editedCabalFile = "0g1jx34dk8kmyky8rk2p5d6y2n2j6wkva46ya28anqfyxfl9ni2s";
           libraryHaskellDepends = [
             attoparsec base blaze-builder blaze-html blaze-markup bytestring
             conduit conduit-extra containers data-default deepseq monad-control
             resourcet text transformers xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/xml";
           description = "Pure-Haskell utilities for dealing with XML with the conduit package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-conduit-parse" = callPackage
        ({ mkDerivation, base, conduit, conduit-parse, containers
         , exceptions, parsers, stdenv, text, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "xml-conduit-parse";
           version = "0.3.1.0";
           sha256 = "62a8aacdd03e216cc1f89882205b933016c0aebe2ed3e113a966c5956ec572d5";
           libraryHaskellDepends = [
             base conduit conduit-parse containers exceptions parsers text
             xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0ral/xml-conduit-parse";
           description = "Streaming XML parser based on conduits";
           license = "unknown";
         }) {};
      "xml-conduit-writer" = callPackage
        ({ mkDerivation, base, containers, dlist, mtl, stdenv, text
         , xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "xml-conduit-writer";
           version = "0.1.1.1";
           sha256 = "4b547cdc629a583f0231bed45d568f12eb0244fdaeb904c11eeb0d9365c771c5";
           libraryHaskellDepends = [
             base containers dlist mtl text xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dpwiz/xml-conduit-writer";
           description = "Warm and fuzzy creation of XML documents";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-hamlet" = callPackage
        ({ mkDerivation, base, containers, parsec, shakespeare, stdenv
         , template-haskell, text, xml-conduit
         }:
         mkDerivation {
           pname = "xml-hamlet";
           version = "0.4.0.12";
           sha256 = "0ff43b778e9e497b468dd123ab81fa8cfc84dcd0a6c8ab06b8fc27cf3e0669d2";
           libraryHaskellDepends = [
             base containers parsec shakespeare template-haskell text
             xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Hamlet-style quasiquoter for XML content";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-lens" = callPackage
        ({ mkDerivation, base, case-insensitive, containers, lens, stdenv
         , text, xml-conduit
         }:
         mkDerivation {
           pname = "xml-lens";
           version = "0.1.6.3";
           sha256 = "4dd7f1a91fbb12ae52d5a14badd9f38c0f0d7556f08ee77d79a67cc546dcb1e8";
           revision = "1";
           editedCabalFile = "1fbk4wv7zr10wsh8a0svd799im64fybnlb09rjpfl2pvb6i6h1qs";
           libraryHaskellDepends = [
             base case-insensitive containers lens text xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/xml-lens";
           description = "Lenses, traversals, and prisms for xml-conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-to-json" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, curl
         , hashable, hxt, hxt-curl, hxt-expat, hxt-tagsoup, regex-posix
         , stdenv, tagsoup, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "xml-to-json";
           version = "2.0.1";
           sha256 = "ad1a2501828052a1798178c309638a9b8e4fe66ad24dae9c76de939c156d2e2f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers curl hashable hxt hxt-curl
             hxt-expat hxt-tagsoup regex-posix tagsoup text unordered-containers
             vector
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sinelaw/xml-to-json";
           description = "Library and command line tool for converting XML files to json";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-to-json-fast" = callPackage
        ({ mkDerivation, base, directory, process, stdenv, tagsoup, text }:
         mkDerivation {
           pname = "xml-to-json-fast";
           version = "2.0.0";
           sha256 = "dd852fe1aa54db3c6d87a2e74b5345b0f14effdd49bad5b73d79571e1b47563f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base tagsoup text ];
           executableHaskellDepends = [ base directory process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sinelaw/xml-to-json-fast";
           description = "Fast, light converter of xml to json capable of handling huge xml files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-types" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, text }:
         mkDerivation {
           pname = "xml-types";
           version = "0.3.6";
           sha256 = "9937d440072552c03c6d8ad79f61e61467dc28dcd5adeaad81038b9b94eef8c9";
           libraryHaskellDepends = [ base deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-xml/";
           description = "Basic types for representing XML";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xmlgen" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers, mtl
         , stdenv, text
         }:
         mkDerivation {
           pname = "xmlgen";
           version = "0.6.2.1";
           sha256 = "9027a17e7ae648997a0e8279d7c01aa6615adda8b93f753b907a01dd797abae6";
           libraryHaskellDepends = [
             base blaze-builder bytestring containers mtl text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Fast XML generation library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xmlhtml" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-html, blaze-markup
         , bytestring, containers, parsec, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "xmlhtml";
           version = "0.2.3.5";
           sha256 = "e333a1c7afd5068b60b143457fea7325a34408cc65b3ac55f5b342eb0274b06d";
           revision = "4";
           editedCabalFile = "073a98mmczjb80bjblzwcybnidchj9vgivcj6b5rdvh584iwbhz2";
           libraryHaskellDepends = [
             base blaze-builder blaze-html blaze-markup bytestring containers
             parsec text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snapframework/xmlhtml";
           description = "XML parser and renderer with HTML 5 quirks mode";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xmonad" = callPackage
        ({ mkDerivation, base, containers, data-default, directory
         , extensible-exceptions, filepath, mtl, process, setlocale, stdenv
         , unix, utf8-string, X11
         }:
         mkDerivation {
           pname = "xmonad";
           version = "0.12";
           sha256 = "e8f649dbd4a8d5f75fdac9ceb5ee38b64fd351910ade81c188f5dd7bc21dfdd7";
           revision = "1";
           editedCabalFile = "0f60ls18zsrpryq5fy300pcxxqz9q0vf2xaxyw8kaihy64zfmlsv";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers data-default directory extensible-exceptions
             filepath mtl process setlocale unix utf8-string X11
           ];
           executableHaskellDepends = [ base mtl unix X11 ];
           doHaddock = false;
           doCheck = false;
           postInstall = ''
             shopt -s globstar
             mkdir -p $doc/share/man/man1
             mv "$data/"**"/man/"*[0-9] $doc/share/man/man1/
             rm "$data/"**"/man/"*
           '';
           homepage = "http://xmonad.org";
           description = "A tiling window manager";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xss-sanitize" = callPackage
        ({ mkDerivation, attoparsec, base, containers, css-text
         , network-uri, stdenv, tagsoup, text, utf8-string
         }:
         mkDerivation {
           pname = "xss-sanitize";
           version = "0.3.5.7";
           sha256 = "955856413e70375c794766d04ac9ab7f0d3337dbb04a412c9b7ff5c415acac00";
           libraryHaskellDepends = [
             attoparsec base containers css-text network-uri tagsoup text
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/haskell-xss-sanitize";
           description = "sanitize untrusted HTML to prevent XSS attacks";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "yackage" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, blaze-html, bytestring
         , Cabal, cmdargs, conduit, containers, directory, http-conduit
         , http-types, shakespeare, stdenv, tar, text, transformers
         , unordered-containers, vector, wai, warp, yaml, yesod-core
         , yesod-form, zlib
         }:
         mkDerivation {
           pname = "yackage";
           version = "0.8.1";
           sha256 = "1d48064cbfd2c51f4fd33a6289c9efe1c8d49f063d850a9dd7ae3a226136cae5";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson base blaze-builder blaze-html bytestring Cabal cmdargs
             conduit containers directory http-conduit http-types shakespeare
             tar text transformers unordered-containers vector wai warp yaml
             yesod-core yesod-form zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/yackage";
           description = "Personal Hackage replacement for testing new packages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yaml" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit
         , containers, directory, enclosed-exceptions, filepath, libyaml
         , resourcet, scientific, semigroups, stdenv, template-haskell, text
         , transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "yaml";
           version = "0.8.21.1";
           sha256 = "f9f8e801a215c65cf5eff6e3aa384060e60232521630495d13573bf0677a0db2";
           revision = "1";
           editedCabalFile = "12p7admmwzjphfzrw0hzgv3gz4lnhg5zxah2fzi9mk5c055b14p8";
           configureFlags = [ "-fsystem-libyaml" ];
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bytestring conduit containers directory
             enclosed-exceptions filepath resourcet scientific semigroups
             template-haskell text transformers unordered-containers vector
           ];
           libraryPkgconfigDepends = [ libyaml ];
           executableHaskellDepends = [ aeson base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/yaml/";
           description = "Support for parsing and rendering YAML documents";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libyaml;};
      "yaml-light" = callPackage
        ({ mkDerivation, base, bytestring, containers, HsSyck, stdenv }:
         mkDerivation {
           pname = "yaml-light";
           version = "0.1.4";
           sha256 = "1352949bf8aea4950ed2d48ace4efc7b9301bf8c58858b882d47d0902e9efd16";
           libraryHaskellDepends = [ base bytestring containers HsSyck ];
           doHaddock = false;
           doCheck = false;
           description = "A light-weight wrapper with utility functions around HsSyck";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yes-precure5-command" = callPackage
        ({ mkDerivation, base, Cabal, containers, mtl, parsec, random
         , stdenv
         }:
         mkDerivation {
           pname = "yes-precure5-command";
           version = "5.5.3";
           sha256 = "27f2f2dcd81923a18450cda21a31585d0d3887afde504190667cb7dbf0a0af7e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base Cabal containers mtl parsec random
           ];
           executableHaskellDepends = [
             base Cabal containers mtl parsec random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/igrep/yes-precure5-command/";
           description = "Extended yes command to reproduce phrases in Yes! Precure 5";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
         , conduit, conduit-extra, data-default, directory, fast-logger
         , monad-control, monad-logger, resourcet, safe, semigroups
         , shakespeare, stdenv, streaming-commons, template-haskell, text
         , transformers, unix, unordered-containers, wai, wai-extra
         , wai-logger, warp, yaml, yesod-auth, yesod-core, yesod-form
         , yesod-persistent
         }:
         mkDerivation {
           pname = "yesod";
           version = "1.4.3.1";
           sha256 = "8ad23252817780afc10aee5cf1bd862b3cf46e08aabb884477e874caa351ab21";
           libraryHaskellDepends = [
             aeson base blaze-html blaze-markup bytestring conduit conduit-extra
             data-default directory fast-logger monad-control monad-logger
             resourcet safe semigroups shakespeare streaming-commons
             template-haskell text transformers unix unordered-containers wai
             wai-extra wai-logger warp yaml yesod-auth yesod-core yesod-form
             yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Creation of type-safe, RESTful web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-auth" = callPackage
        ({ mkDerivation, aeson, authenticate, base, base16-bytestring
         , base64-bytestring, binary, blaze-builder, blaze-html
         , blaze-markup, byteable, bytestring, conduit, conduit-extra
         , containers, cryptohash, data-default, email-validate, file-embed
         , http-client, http-conduit, http-types, lifted-base, mime-mail
         , network-uri, nonce, persistent, persistent-template, random
         , resourcet, safe, shakespeare, stdenv, template-haskell, text
         , time, transformers, unordered-containers, wai, yesod-core
         , yesod-form, yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-auth";
           version = "1.4.15";
           sha256 = "a917b003c348aa4b3d8c673efb32e0ea0f9190affa86d435b9bea9f11ab85cfd";
           libraryHaskellDepends = [
             aeson authenticate base base16-bytestring base64-bytestring binary
             blaze-builder blaze-html blaze-markup byteable bytestring conduit
             conduit-extra containers cryptohash data-default email-validate
             file-embed http-client http-conduit http-types lifted-base
             mime-mail network-uri nonce persistent persistent-template random
             resourcet safe shakespeare template-haskell text time transformers
             unordered-containers wai yesod-core yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Authentication for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-auth-account" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, mtl, nonce
         , persistent, pwstore-fast, stdenv, text, yesod-auth, yesod-core
         , yesod-form, yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-auth-account";
           version = "1.4.3";
           sha256 = "e9f077d58d64023b80d6ff502933e8dfc6832c95afbdabce3124dddc918664af";
           libraryHaskellDepends = [
             base blaze-html bytestring mtl nonce persistent pwstore-fast text
             yesod-auth yesod-core yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/wuzzeb/yesod-auth-account";
           description = "An account authentication plugin for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-auth-account-fork" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, bytestring
         , email-validate, http-types, mtl, nonce, persistent, pwstore-fast
         , random, stdenv, tagged, text, yesod-auth, yesod-core, yesod-form
         , yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-auth-account-fork";
           version = "2.0.3";
           sha256 = "875b3636d727c4adda822794ac2467bd62088420726341f1259f394086bed950";
           libraryHaskellDepends = [
             aeson base blaze-html bytestring email-validate http-types mtl
             nonce persistent pwstore-fast random tagged text yesod-auth
             yesod-core yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/meteficha/yesod-auth-account-fork";
           description = "An account authentication plugin for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-auth-basic" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, exceptions
         , stdenv, text, wai, word8, yesod
         }:
         mkDerivation {
           pname = "yesod-auth-basic";
           version = "0.1.0.2";
           sha256 = "aaaf330bc05b86ddd53cf092d48df1279e4bea47f67cbc6a8b67f1308ef39b2c";
           libraryHaskellDepends = [
             base base64-bytestring bytestring exceptions text wai word8 yesod
           ];
           doHaddock = false;
           doCheck = false;
           description = "Yesod Middleware for HTTP Basic Authentication";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-auth-deskcom" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, byteable
         , bytestring, cipher-aes, cprng-aes, crypto-api, crypto-random
         , cryptohash, data-default, http-conduit, http-types, stdenv
         , template-haskell, text, time, transformers, yesod-auth
         , yesod-core
         }:
         mkDerivation {
           pname = "yesod-auth-deskcom";
           version = "1.4.0";
           sha256 = "dc80b8f0ef1ff6d76b68c51ee8319452fb77e2aad83c39776d1904e6329f979e";
           libraryHaskellDepends = [
             aeson base base64-bytestring byteable bytestring cipher-aes
             cprng-aes crypto-api crypto-random cryptohash data-default
             http-conduit http-types template-haskell text time transformers
             yesod-auth yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/yesod-auth-deskcom";
           description = "Desk.com remote authentication support for Yesod apps.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-auth-fb" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, fb, http-conduit
         , lifted-base, shakespeare, stdenv, text, time, transformers, wai
         , yesod-auth, yesod-core, yesod-fb
         }:
         mkDerivation {
           pname = "yesod-auth-fb";
           version = "1.7";
           sha256 = "02c041d0f58c630a2b2f4b3e810722fe71aca60c729770fd47324a9dd4dce4ce";
           libraryHaskellDepends = [
             aeson base bytestring conduit fb http-conduit lifted-base
             shakespeare text time transformers wai yesod-auth yesod-core
             yesod-fb
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/yesod-auth-fb";
           description = "Authentication backend for Yesod using Facebook";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-auth-hashdb" = callPackage
        ({ mkDerivation, base, bytestring, cryptohash, persistent
         , pwstore-fast, stdenv, text, yesod-auth, yesod-core, yesod-form
         , yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-auth-hashdb";
           version = "1.5.1.3";
           sha256 = "ea455c6cb2c60de6254860ed1b8d29f8e73154c24db3e2edbfc0090f728b051a";
           libraryHaskellDepends = [
             base bytestring cryptohash persistent pwstore-fast text yesod-auth
             yesod-core yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/paul-rouse/yesod-auth-hashdb";
           description = "Authentication plugin for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-auth-oauth2" = callPackage
        ({ mkDerivation, aeson, authenticate, base, bytestring, hoauth2
         , http-client, http-conduit, http-types, lifted-base, network-uri
         , random, stdenv, text, transformers, vector, yesod-auth
         , yesod-core, yesod-form
         }:
         mkDerivation {
           pname = "yesod-auth-oauth2";
           version = "0.1.10";
           sha256 = "90b3748945e1661311d2ca791f82df8fcb0172e4266f5751374340686eb6e72b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson authenticate base bytestring hoauth2 http-client http-conduit
             http-types lifted-base network-uri random text transformers vector
             yesod-auth yesod-core yesod-form
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/thoughtbot/yesod-auth-oauth2";
           description = "OAuth 2.0 authentication plugins";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-bin" = callPackage
        ({ mkDerivation, async, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, Cabal, conduit, conduit-extra
         , containers, data-default-class, deepseq, directory, file-embed
         , filepath, fsnotify, ghc, ghc-paths, http-client, http-conduit
         , http-reverse-proxy, http-types, lifted-base, network
         , optparse-applicative, parsec, process, project-template
         , resourcet, shakespeare, split, stdenv, streaming-commons, tar
         , template-haskell, text, time, transformers, transformers-compat
         , unix-compat, unordered-containers, wai, wai-extra, warp, warp-tls
         , yaml, zlib
         }:
         mkDerivation {
           pname = "yesod-bin";
           version = "1.4.18.7";
           sha256 = "ff75fc8bc7b37d6960436dab4a97697bc172d5092f5125b23791c8efdd01ed96";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             async attoparsec base base64-bytestring blaze-builder bytestring
             Cabal conduit conduit-extra containers data-default-class deepseq
             directory file-embed filepath fsnotify ghc ghc-paths http-client
             http-conduit http-reverse-proxy http-types lifted-base network
             optparse-applicative parsec process project-template resourcet
             shakespeare split streaming-commons tar template-haskell text time
             transformers transformers-compat unix-compat unordered-containers
             wai wai-extra warp warp-tls yaml zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "The yesod helper executable";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-core" = callPackage
        ({ mkDerivation, aeson, auto-update, base, blaze-builder
         , blaze-html, blaze-markup, byteable, bytestring, case-insensitive
         , cereal, clientsession, conduit, conduit-extra, containers, cookie
         , data-default, deepseq, deepseq-generics, directory, exceptions
         , fast-logger, http-types, lifted-base, monad-control, monad-logger
         , mtl, mwc-random, old-locale, parsec, path-pieces, primitive
         , random, resourcet, safe, semigroups, shakespeare, stdenv
         , template-haskell, text, time, transformers, transformers-base
         , unix-compat, unordered-containers, vector, wai, wai-extra
         , wai-logger, warp, word8
         }:
         mkDerivation {
           pname = "yesod-core";
           version = "1.4.30";
           sha256 = "1136dbf0beacbb7ea18b73616e059aa85ec5fbbf0ecae88e7ff3ac8eb685f654";
           revision = "4";
           editedCabalFile = "188hv4yqvi5pj9k5dcm1m2hfrxqwiw3gyng5ab3419g73zryzxkz";
           libraryHaskellDepends = [
             aeson auto-update base blaze-builder blaze-html blaze-markup
             byteable bytestring case-insensitive cereal clientsession conduit
             conduit-extra containers cookie data-default deepseq
             deepseq-generics directory exceptions fast-logger http-types
             lifted-base monad-control monad-logger mtl mwc-random old-locale
             parsec path-pieces primitive random resourcet safe semigroups
             shakespeare template-haskell text time transformers
             transformers-base unix-compat unordered-containers vector wai
             wai-extra wai-logger warp word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Creation of type-safe, RESTful web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-default" = callPackage
        ({ mkDerivation, base, stdenv, yesod-core }:
         mkDerivation {
           pname = "yesod-default";
           version = "1.2.0";
           sha256 = "f39ae1953a95c1919a9dd214d93bf81078b1dcbbac737dc9bb7339dbad9dda96";
           libraryHaskellDepends = [ base yesod-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Default config and main functions for your yesod application (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-eventsource" = callPackage
        ({ mkDerivation, base, blaze-builder, conduit, stdenv, transformers
         , wai, wai-eventsource, wai-extra, yesod-core
         }:
         mkDerivation {
           pname = "yesod-eventsource";
           version = "1.4.0.1";
           sha256 = "a5ec061ca8c426c4a8179bace45edd8100de96c947b8294445aae890dd175d48";
           libraryHaskellDepends = [
             base blaze-builder conduit transformers wai wai-eventsource
             wai-extra yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Server-sent events support for Yesod apps";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-fay" = callPackage
        ({ mkDerivation, aeson, base, bytestring, data-default, directory
         , fay, fay-dom, filepath, monad-loops, process, pureMD5
         , shakespeare, stdenv, template-haskell, text, transformers
         , utf8-string, yesod-core, yesod-form, yesod-static
         }:
         mkDerivation {
           pname = "yesod-fay";
           version = "0.8.0";
           sha256 = "ee2113c9fe5c04a8d4a855fad7584ba1a4a0311a2755f8705ff6354e7808dd46";
           libraryHaskellDepends = [
             aeson base bytestring data-default directory fay fay-dom filepath
             monad-loops process pureMD5 shakespeare template-haskell text
             transformers utf8-string yesod-core yesod-form yesod-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/yesod-fay";
           description = "Utilities for using the Fay Haskell-to-JS compiler with Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-fb" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, crypto-api, fb
         , http-conduit, stdenv, text, wai, yesod-core
         }:
         mkDerivation {
           pname = "yesod-fb";
           version = "0.3.4";
           sha256 = "b7e631a440037b7b077d1bcc5d859006cf5e7420923d93dfe26a07e1d3ad9e25";
           libraryHaskellDepends = [
             aeson base bytestring conduit crypto-api fb http-conduit text wai
             yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/yesod-fb";
           description = "Useful glue functions between the fb library and Yesod";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-form" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-builder, blaze-html
         , blaze-markup, byteable, bytestring, containers, data-default
         , email-validate, network-uri, persistent, resourcet, semigroups
         , shakespeare, stdenv, template-haskell, text, time, transformers
         , wai, xss-sanitize, yesod-core, yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-form";
           version = "1.4.9";
           sha256 = "bd53f12d97a89e93b15fc6b06e63fbe041301635508f933203596f349a74110d";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-builder blaze-html blaze-markup
             byteable bytestring containers data-default email-validate
             network-uri persistent resourcet semigroups shakespeare
             template-haskell text time transformers wai xss-sanitize yesod-core
             yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Form handling support for Yesod Web Framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-form-richtext" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-html, shakespeare
         , stdenv, text, xss-sanitize, yesod-core, yesod-form
         }:
         mkDerivation {
           pname = "yesod-form-richtext";
           version = "0.1.0.0";
           sha256 = "b404fed16d56aac153e2f7a6c512f1b02653edb77bfea7e5331eac08ac6c11d1";
           libraryHaskellDepends = [
             base blaze-builder blaze-html shakespeare text xss-sanitize
             yesod-core yesod-form
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/geraldus/yesod-form-richtext#readme";
           description = "Various rich-text WYSIWYG editors for Yesod forms";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-gitrepo" = callPackage
        ({ mkDerivation, base, directory, enclosed-exceptions, http-types
         , lifted-base, process, stdenv, temporary, text, wai, yesod-core
         }:
         mkDerivation {
           pname = "yesod-gitrepo";
           version = "0.2.1.0";
           sha256 = "6e6e0f37771f888c687bbc2dff24228ea0461829de8c1b714da10dbe9f6987ec";
           libraryHaskellDepends = [
             base directory enclosed-exceptions http-types lifted-base process
             temporary text wai yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/yesod-gitrepo";
           description = "Host content provided by a Git repo";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-gitrev" = callPackage
        ({ mkDerivation, aeson, base, gitrev, stdenv, template-haskell
         , yesod-core
         }:
         mkDerivation {
           pname = "yesod-gitrev";
           version = "0.1.0.0";
           sha256 = "30e63c0ea5aec72eed0cd1d9e4dccf242e749c9740e5d67887cac02728628f49";
           revision = "1";
           editedCabalFile = "1lqvqkkar50zlgyxgq10c55y6zz2v4ip3g79i5fqflik3s681200";
           libraryHaskellDepends = [
             aeson base gitrev template-haskell yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           description = "A subsite for displaying git information";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-job-queue" = callPackage
        ({ mkDerivation, aeson, api-field-json-th, base, bytestring, cron
         , file-embed, hedis, lens, monad-control, monad-logger, stdenv, stm
         , text, time, transformers, uuid, yesod, yesod-core
         , yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-job-queue";
           version = "0.3.0.1";
           sha256 = "a58805e218e5b0e6c623a5447f06484004d72a357f4b2e30d476da56618b734f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson api-field-json-th base bytestring cron file-embed hedis lens
             monad-control monad-logger stm text time transformers uuid yesod
             yesod-core yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nakaji-dayo/yesod-job-queue#readme";
           description = "Background jobs library for Yesod";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-newsfeed" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
         , containers, shakespeare, stdenv, text, time, xml-conduit
         , yesod-core
         }:
         mkDerivation {
           pname = "yesod-newsfeed";
           version = "1.6";
           sha256 = "4e6dbc06002fe7fd13701941c036c51cf9407c35b28473ed509424bfc0b67516";
           libraryHaskellDepends = [
             base blaze-html blaze-markup bytestring containers shakespeare text
             time xml-conduit yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Helper functions and data types for producing News feeds";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-persistent" = callPackage
        ({ mkDerivation, base, blaze-builder, conduit, persistent
         , persistent-template, resource-pool, resourcet, stdenv
         , transformers, yesod-core
         }:
         mkDerivation {
           pname = "yesod-persistent";
           version = "1.4.0.6";
           sha256 = "69c1261b49a6448795d569431691115fc6b86f7b296905573f5b2271465dee71";
           libraryHaskellDepends = [
             base blaze-builder conduit persistent persistent-template
             resource-pool resourcet transformers yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Some helpers for using Persistent from Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-sitemap" = callPackage
        ({ mkDerivation, base, conduit, containers, data-default, stdenv
         , text, time, xml-conduit, xml-types, yesod-core
         }:
         mkDerivation {
           pname = "yesod-sitemap";
           version = "1.4.0.1";
           sha256 = "008449fd90899f1988f32a1341f5be87a73cb6b0e100494525f659e9473e2666";
           libraryHaskellDepends = [
             base conduit containers data-default text time xml-conduit
             xml-types yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Generate XML sitemaps";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-static" = callPackage
        ({ mkDerivation, async, attoparsec, base, base64-bytestring
         , blaze-builder, byteable, bytestring, conduit, conduit-extra
         , containers, cryptohash, cryptohash-conduit, css-text
         , data-default, directory, exceptions, file-embed, filepath
         , hashable, hjsmin, http-types, mime-types, old-time, process
         , resourcet, stdenv, template-haskell, text, transformers
         , unix-compat, unordered-containers, wai, wai-app-static
         , yesod-core
         }:
         mkDerivation {
           pname = "yesod-static";
           version = "1.5.1.1";
           sha256 = "cdb50763c4cbd2b8fcdb2b9f2f2526648e82454c62d49bfd6d165af80a192a92";
           libraryHaskellDepends = [
             async attoparsec base base64-bytestring blaze-builder byteable
             bytestring conduit conduit-extra containers cryptohash
             cryptohash-conduit css-text data-default directory exceptions
             file-embed filepath hashable hjsmin http-types mime-types old-time
             process resourcet template-haskell text transformers unix-compat
             unordered-containers wai wai-app-static yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Static file serving subsite for Yesod Web Framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-static-angular" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, blaze-markup
         , bytestring, data-default, directory, filepath, hamlet
         , language-javascript, mime-types, shakespeare, stdenv
         , template-haskell, text, yesod-core, yesod-static
         }:
         mkDerivation {
           pname = "yesod-static-angular";
           version = "0.1.8";
           sha256 = "97b3ef260a7e6c70b811cbf3b2b3532a003c5028bd6a0df52fc14bd45ce03beb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base blaze-builder blaze-markup bytestring data-default
             directory filepath hamlet language-javascript mime-types
             shakespeare template-haskell text yesod-core yesod-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/wuzzeb/yesod-static-angular";
           description = "Yesod generators for embedding AngularJs code into yesod-static at compile time";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-table" = callPackage
        ({ mkDerivation, base, bytestring, containers, contravariant
         , semigroups, stdenv, text, yesod-core
         }:
         mkDerivation {
           pname = "yesod-table";
           version = "2.0.3";
           sha256 = "363a70fe6def770776e1e0e777651c66e4849e4d95e853956a2f2ae1be80189b";
           libraryHaskellDepends = [
             base bytestring containers contravariant semigroups text yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/yesod-table";
           description = "HTML tables for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-test" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, blaze-html
         , blaze-markup, bytestring, case-insensitive, containers, cookie
         , hspec-core, html-conduit, http-types, HUnit, monad-control
         , network, persistent, pretty-show, stdenv, text, time
         , transformers, wai, wai-extra, xml-conduit, xml-types, yesod-core
         }:
         mkDerivation {
           pname = "yesod-test";
           version = "1.5.4.1";
           sha256 = "36c08c34d5fef656bb3469194b77b0802c60db4120af0f6dfd2b08f4a9d9659d";
           libraryHaskellDepends = [
             attoparsec base blaze-builder blaze-html blaze-markup bytestring
             case-insensitive containers cookie hspec-core html-conduit
             http-types HUnit monad-control network persistent pretty-show text
             time transformers wai wai-extra xml-conduit xml-types yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com";
           description = "integration testing for WAI/Yesod Applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-text-markdown" = callPackage
        ({ mkDerivation, aeson, base, markdown, persistent, shakespeare
         , stdenv, text, yesod-core, yesod-form, yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-text-markdown";
           version = "0.1.8";
           sha256 = "0169dbd252696f30bb4d7f49f2f116e7e42aadf2e322b85982746f62ade488cc";
           libraryHaskellDepends = [
             aeson base markdown persistent shakespeare text yesod-core
             yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           description = "Yesod support for Text.Markdown.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-websockets" = callPackage
        ({ mkDerivation, async, base, conduit, enclosed-exceptions
         , monad-control, stdenv, transformers, wai, wai-websockets
         , websockets, yesod-core
         }:
         mkDerivation {
           pname = "yesod-websockets";
           version = "0.2.4.1";
           sha256 = "795b497217dece919d4034bc4dfa84632d900798d1be9a423ce57409378cbccf";
           libraryHaskellDepends = [
             async base conduit enclosed-exceptions monad-control transformers
             wai wai-websockets websockets yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/yesod";
           description = "WebSockets support for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yi" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, Cabal, containers
         , data-default, directory, dlist, dynamic-state, dyre, exceptions
         , filepath, glib, gtk, hashable, Hclip, hint, lens, mtl, old-locale
         , oo-prototypes, pango, parsec, pointedlist, process, QuickCheck
         , random, safe, semigroups, split, stdenv, stm, template-haskell
         , text, text-icu, time, transformers-base, unix, unix-compat
         , unordered-containers, vty, word-trie, xdg-basedir, yi-language
         , yi-rope
         }:
         mkDerivation {
           pname = "yi";
           version = "0.12.6";
           sha256 = "886bbac8634a251d9872fbcc47350df3e84cf881e42cb7408d1a1e92614205d8";
           configureFlags = [ "-fpango" "-fvty" ];
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base binary bytestring Cabal containers data-default
             directory dlist dynamic-state dyre exceptions filepath glib gtk
             hashable Hclip hint lens mtl old-locale oo-prototypes pango parsec
             pointedlist process QuickCheck random safe semigroups split stm
             template-haskell text text-icu time transformers-base unix
             unix-compat unordered-containers vty word-trie xdg-basedir
             yi-language yi-rope
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://yi-editor.github.io";
           description = "The Haskell-Scriptable Editor";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-fuzzy-open" = callPackage
        ({ mkDerivation, base, binary, containers, data-default, directory
         , filepath, mtl, stdenv, text, transformers-base, vector, yi
         , yi-language, yi-rope
         }:
         mkDerivation {
           pname = "yi-fuzzy-open";
           version = "0.1.0.1";
           sha256 = "92eda3ac60f57509716f8473c840d6a46b1be52f3713b27c1a5d0aa70978b02a";
           libraryHaskellDepends = [
             base binary containers data-default directory filepath mtl text
             transformers-base vector yi yi-language yi-rope
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi-fuzzy-open";
           description = "Fuzzy open plugin for Yi";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-language" = callPackage
        ({ mkDerivation, alex, array, base, binary, containers
         , data-default, hashable, microlens-platform, oo-prototypes
         , pointedlist, regex-base, regex-tdfa, stdenv, template-haskell
         , transformers-base, unordered-containers
         }:
         mkDerivation {
           pname = "yi-language";
           version = "0.2.1";
           sha256 = "58153110fa9fad0c873a8376e73bb21b9ebdbb32357d23b29e1bd6d901cffacd";
           libraryHaskellDepends = [
             array base binary containers data-default hashable
             microlens-platform oo-prototypes pointedlist regex-base regex-tdfa
             template-haskell transformers-base unordered-containers
           ];
           libraryToolDepends = [ alex ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi-language";
           description = "Collection of language-related Yi libraries";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-rope" = callPackage
        ({ mkDerivation, base, binary, bytestring, charsetdetect-ae
         , data-default, deepseq, fingertree, stdenv, text, text-icu
         }:
         mkDerivation {
           pname = "yi-rope";
           version = "0.7.0.2";
           sha256 = "e05df2d905460723c62dba6f5201964504bf8214b3db9db11c1378dc0f08ca9d";
           libraryHaskellDepends = [
             base binary bytestring charsetdetect-ae data-default deepseq
             fingertree text text-icu
           ];
           doHaddock = false;
           doCheck = false;
           description = "A rope data structure used by Yi";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yjtools" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "yjtools";
           version = "0.9.18";
           sha256 = "9b121c6fcece8241d87aec737458d49c0b76313e9e5e1e70f72b5f71cfc0eb8f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://homepage3.nifty.com/salamander/second/projects/yjtools/index.xhtml";
           description = "some tools for Monad, List, Tuple and so on";
           license = "LGPL";
         }) {};
      "zero" = callPackage
        ({ mkDerivation, base, semigroups, stdenv }:
         mkDerivation {
           pname = "zero";
           version = "0.1.4";
           sha256 = "38cdc62d9673b8b40999de69da2ec60dab7a65fb1c22133ecd54e0a2ec61d5d5";
           libraryHaskellDepends = [ base semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/zero";
           description = "Semigroups with absorption";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zeromq4-haskell" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, exceptions
         , monad-control, semigroups, stdenv, transformers
         , transformers-base, zeromq
         }:
         mkDerivation {
           pname = "zeromq4-haskell";
           version = "0.6.5";
           sha256 = "6e99b6cf882269544ce3d613a51b00a259f0aee9fdb13d25d8cb19f96799e7c2";
           libraryHaskellDepends = [
             async base bytestring containers exceptions monad-control
             semigroups transformers transformers-base
           ];
           libraryPkgconfigDepends = [ zeromq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/zeromq-haskell/";
           description = "Bindings to ZeroMQ 4.x";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) zeromq;};
      "zim-parser" = callPackage
        ({ mkDerivation, array, base, base-compat, binary, binary-conduit
         , bytestring, conduit, conduit-extra, lzma, stdenv
         }:
         mkDerivation {
           pname = "zim-parser";
           version = "0.2.1.0";
           sha256 = "b27f6a395c54e0dac6926a5ea18b582aa21c5d91e31b53f8749f063947a15789";
           libraryHaskellDepends = [
             array base base-compat binary binary-conduit bytestring conduit
             conduit-extra lzma
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/robbinch/zim-parser#readme";
           description = "Read and parse ZIM files";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "zip" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, cereal
         , conduit, conduit-extra, containers, digest, exceptions, fetchgit
         , filepath, monad-control, mtl, path, path-io, plan-b, resourcet
         , semigroups, stdenv, text, time, transformers, transformers-base
         }:
         mkDerivation {
           pname = "zip";
           version = "0.2.0";
           src = fetchgit {
             url = "https://github.com/rahulmutt/zip.git";
             sha256 = "0xrmra15wrcd0kaihpwqc726al6d8v1rkfr8190k0674gww8l34x";
             rev = "a4fbcc9e1efc3e8623022d9fcc83b50d4cdd95a5";
           };
           libraryHaskellDepends = [
             base bytestring case-insensitive cereal conduit conduit-extra
             containers digest exceptions filepath monad-control mtl path
             path-io plan-b resourcet semigroups text time transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/zip";
           description = "Operations on zip archives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zip-archive" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , digest, directory, filepath, mtl, old-time, pretty, stdenv, text
         , time, unix, zlib
         }:
         mkDerivation {
           pname = "zip-archive";
           version = "0.2.3.7";
           sha256 = "41623b3831795e785329b017f42af3116f6332a690361f7eac7ed15f729f3699";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base binary bytestring containers digest directory filepath
             mtl old-time pretty text time unix zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/zip-archive";
           description = "Library for creating and modifying zip archives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zippers" = callPackage
        ({ mkDerivation, base, lens, profunctors, semigroupoids, stdenv }:
         mkDerivation {
           pname = "zippers";
           version = "0.2.2";
           sha256 = "d9c499cec6f60e0556b9874d2bf3b801b0a022b226a396200d11b91d3a1aede7";
           revision = "1";
           editedCabalFile = "1v0bwxynky71q4javcm13vnsfy9wmn0rdg19jgc31rqfd54k5f38";
           libraryHaskellDepends = [ base lens profunctors semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/zippers/";
           description = "Traversal based zippers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zlib" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "zlib";
           version = "0.6.1.2";
           sha256 = "e4eb4e636caf07a16a9730ce469a00b65d5748f259f43edd904dd457b198a2bb";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ zlib ];
           doHaddock = false;
           doCheck = false;
           description = "Compression and decompression in the gzip and zlib formats";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) zlib;};
      "zlib-bindings" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "zlib-bindings";
           version = "0.1.1.5";
           sha256 = "c83bb438f9b6c5fe860982731eb8ac7eff993e8b56cbc15ef5b471f229f79109";
           revision = "2";
           editedCabalFile = "0fq49694gqkab8m0vq4i879blswczwd66n7xh4r4gwiahf0ryvqc";
           libraryHaskellDepends = [ base bytestring zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snapframework/zlib-bindings";
           description = "Low-level bindings to the zlib package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zlib-enum" = callPackage
        ({ mkDerivation, base, bytestring, enumerator, stdenv, transformers
         , zlib-bindings
         }:
         mkDerivation {
           pname = "zlib-enum";
           version = "0.2.3.1";
           sha256 = "e43dc9ea85ceea02c4f4204c95e8d8540205839c58079f9399dfa96e63fdccd9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring enumerator transformers zlib-bindings
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/maltem/zlib-enum";
           description = "Enumerator interface for zlib compression";
           license = stdenv.lib.licenses.mit;
         }) {};
      "zlib-lens" = callPackage
        ({ mkDerivation, base, bytestring, profunctors, stdenv, zlib }:
         mkDerivation {
           pname = "zlib-lens";
           version = "0.1.2.1";
           sha256 = "e5a563453899e0896cfa3aed22a2fbfc67012990ace6d14631f31b704ff766eb";
           libraryHaskellDepends = [ base bytestring profunctors zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://lens.github.io/";
           description = "Lenses for zlib";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zot" = callPackage
        ({ mkDerivation, base, monads-tf, stdenv }:
         mkDerivation {
           pname = "zot";
           version = "0.0.3";
           sha256 = "c8a9091b939e3f74aca6be3007a0066c8a1de69da4b62e22891bed543f8a2b32";
           revision = "1";
           editedCabalFile = "04gsbs6fvwpjjg1f6g1j17dxlfzsci9vmirk7mwqwmm9ha0a4hxm";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [ base monads-tf ];
           doHaddock = false;
           doCheck = false;
           description = "Zot language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
    };
in compiler.override {
  initialPackages = stackPackages;
  configurationCommon = { ... }: self: super: {};
  compilerConfig = self: super: {};
}

